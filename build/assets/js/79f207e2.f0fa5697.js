"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[304473],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(296540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}},291953:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>y,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createagentsynchroincremental/index","title":"Create Agent Synchro Incremental","description":"This scaffolding generates a synchronization job in incremental mode for all connectors supporting incremental synchronization.","source":"@site/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createagentsynchroincremental/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createagentsynchroincremental","slug":"/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createagentsynchroincremental/","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createagentsynchroincremental/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createagentsynchroincremental/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSidebar","previous":{"title":"Create Agent Synchro Complete","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createagentsynchrocomplete/"},"next":{"title":"Create Connectors Jobs","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createconnectorsjobs/"}}');var r=n(474848),s=n(28453);const o={},a="Create Agent Synchro Incremental",c={},l=[{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2},{value:"Child Elements",id:"child-elements",level:2},{value:"AddTask",id:"addtask",level:3},{value:"CronTabExpression",id:"crontabexpression",level:3},{value:"FulfillInternalWorkflowsPath",id:"fulfillinternalworkflowspath",level:3},{value:"LinkDependTask",id:"linkdependtask",level:3},{value:"OpenIdIdentifier",id:"openididentifier",level:3},{value:"Generated XML",id:"generated-xml",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"create-agent-synchro-incremental",children:"Create Agent Synchro Incremental"})}),"\n",(0,r.jsx)(t.p,{children:"This scaffolding generates a synchronization job in incremental mode for all connectors supporting incremental synchronization."}),"\n",(0,r.jsx)(t.p,{children:"The tasks created in the Scaffoldings are sorted by level. The levels are visible via the tools: Usercube-Get-JobSteps.exe."}),"\n",(0,r.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(t.p,{children:["Code attributes enclosed with ",(0,r.jsx)(t.code,{children:"<>"})," need to be replaced with a custom value before entering the script in the command line."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'  \n\xa0\xa0<CreateAgentSynchroIncremental DisplayName_L1="91: Background Sync/Provisioning Job" JobIdentifier="Job_Fast"/>  \n\n'})}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Agent   optional"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"For job scaffoldings, identifier of the agent on which the job to be generated will be launched."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DisplayName_L1   optional"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"Display name of the scaffolding in language 1 (up to 16)."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"JobIdentifier   optional"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"For job scaffoldings, identifier of the job to be generated. If not defined, the job identifier is calculated."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"OldAlgorithm   optional"}),(0,r.jsx)(t.td,{children:"Boolean"}),(0,r.jsx)(t.td,{children:"Internal use."})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"child-elements",children:"Child Elements"}),"\n",(0,r.jsx)(t.p,{children:"The list of child elements includes the following:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"AddTask (optional) \u2014 Add a task before or after another in the job"}),"\n",(0,r.jsx)(t.li,{children:"CronTabExpression (optional) \u2014 Schedule the job"}),"\n",(0,r.jsx)(t.li,{children:"FormatPropertiesInResource (optional) \u2014 Converts string properties to their corresponding types in the 'Resource' section of the provisioning order"}),"\n",(0,r.jsx)(t.li,{children:"FulfillInternalWorkflowsPath (optional) \u2014 Add the path of the json configuration for a connector with IsWorkflowProvisioning set to true"}),"\n",(0,r.jsx)(t.li,{children:"LinkDependTask (optional) \u2014 Link a child Task with a parent to not launch the child if the parent has finish with state warning"}),"\n",(0,r.jsx)(t.li,{children:"OpenIdIdentifier (optional) \u2014 Add a OpenID to the job and the tasks"}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"addtask",children:"AddTask"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Task   required"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"Identifier of the task to add."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TaskToCompareWith   required"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The identifier of the task before or after which the new task will be inserted"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"After   default value: false"}),(0,r.jsx)(t.td,{children:"Boolean"}),(0,r.jsx)(t.td,{children:"For the Argument AddTask the property after define the place of the task to add with the TaskCompareWith."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Before   default value: false"}),(0,r.jsx)(t.td,{children:"Boolean"}),(0,r.jsx)(t.td,{children:"For the Argument AddTask the property before define the place of the task to add with the TaskCompareWith."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"CopyOccurence   default value: 0"}),(0,r.jsx)(t.td,{children:"Int32"}),(0,r.jsx)(t.td,{children:"For Argument AddTask, Specify the Occurence to copy and add the Task in a specify Job."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Occurence   default value: 0"}),(0,r.jsx)(t.td,{children:"Int32"}),(0,r.jsx)(t.td,{children:"Occurence of the TaskToCompare after or before which the task will be added"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"crontabexpression",children:"CronTabExpression"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"CronTab   required"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"Represents the argument value."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"CronTimeZone   optional"}),(0,r.jsx)(t.td,{children:"CronTimeZone"}),(0,r.jsx)(t.td,{children:"For Argument AddTask, Occurence of the TaskToCompare after or before which the task will be added."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"fulfillinternalworkflowspath",children:"FulfillInternalWorkflowsPath"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ConnectorIdentifier   required"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsxs)(t.td,{children:["Identifier of the connector involved in the following arguments: ",(0,r.jsx)(t.code,{children:"NoConnectorSynchronization"}),"; ",(0,r.jsx)(t.code,{children:"NoConnectorProvisioning"}),"; ",(0,r.jsx)(t.code,{children:"NotUsed"}),"; ",(0,r.jsx)(t.code,{children:"FulfillInternalWorkflowsPath"}),"; ",(0,r.jsx)(t.code,{children:"PrincipalDataConnector"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Path   required"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"Represents the argument value."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"linkdependtask",children:"LinkDependTask"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DependOn   required"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"Identifier of parent Task."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Task   required"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"Identifier of child Task"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ChildOccurence   default value: 0"}),(0,r.jsx)(t.td,{children:"Int32"}),(0,r.jsx)(t.td,{children:"Search the occurrence x to link with the parent."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ParentOccurence   default value: 0"}),(0,r.jsx)(t.td,{children:"Int32"}),(0,r.jsx)(t.td,{children:"Occurrence of the parentTask which the task will be linked."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"openididentifier",children:"OpenIdIdentifier"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Identifier   required"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"Identifier of the OpenId."})]})})]}),"\n",(0,r.jsx)(t.h2,{id:"generated-xml",children:"Generated XML"}),"\n",(0,r.jsx)(t.p,{children:"Our example generates the following configuration:"}),"\n",(0,r.jsxs)(t.p,{children:["Code attributes enclosed with ",(0,r.jsx)(t.code,{children:"<>"})," need to be replaced with a custom value before entering the script in the command line."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'  \n<Job Identifier="Job_Fast" DisplayName_L1="91: Background Sync/Provisioning Job" DisplayName_L2="91: T\xe2che de fond de Synchro/provisioning" Agent="Local">  \n\xa0\xa0<ExportTask Identifier="Job_Fast_Export_AD_Incremental_ADExportFulfillment" DisplayName_L1="AD - Extract Changes" DisplayName_L2="AD - Extraction des modifications" Agent="Local" Connector="AD" Level="0" OpenIdClient="Job" Connection="ADExportFulfillment" ContinueOnError="true" />  \n\xa0\xa0<ExportTask Identifier="Job_Fast_Export_MicrosoftEntraID_Incremental_MicrosoftEntraIDExportFulfillment" DisplayName_L1="Microsoft Entra ID - Extract Changes" DisplayName_L2="Microsoft Entra ID - Extraction des modifications" Agent="Local" Connector="MicrosoftEntraID" Level="0" OpenIdClient="Job" Connection="MicrosoftEntraIDExportFulfillment" ContinueOnError="true" />  \n\xa0\xa0<PrepareSynchronizationTask Identifier="Job_Fast_PrepareSynchronizationActiveDirectory_AD_Incremental" DisplayName_L1="AD - Synchronization (agent side)" DisplayName_L2="AD - Synchronisation (c\xf4t\xe9 agent)" Agent="Local" Connector="AD" Level="1" OpenIdClient="Job" SynchronizationMode="Incremental" Type="ActiveDirectory">  \n\xa0\xa0\xa0\xa0<TaskDependsOnTask ParentTask="Job_Fast_Export_AD_Incremental_ADExportFulfillment" />  \n\xa0\xa0</PrepareSynchronizationTask>  \n\xa0\xa0<PrepareSynchronizationTask Identifier="Job_Fast_PrepareSynchronizationChanges_MicrosoftEntraID_Incremental" DisplayName_L1="Microsoft Entra ID - Incremental Synchronization (agent side)" DisplayName_L2="Microsoft Entra ID - Synchronisation incr\xe9mentale (c\xf4t\xe9 agent)" Agent="Local" Connector="MicrosoftEntraID" Level="1" OpenIdClient="Job" SynchronizationMode="Incremental" Type="Changes">  \n\xa0\xa0\xa0\xa0<TaskDependsOnTask ParentTask="Job_Fast_Export_MicrosoftEntraID_Incremental_MicrosoftEntraIDExportFulfillment" />  \n\xa0\xa0</PrepareSynchronizationTask>  \n\xa0\xa0<SynchronizeTask Identifier="Job_Fast_SynchronizeActiveDirectory_AD_DoNotDeleteChanges" DisplayName_L1="AD - Synchronization (server side)" DisplayName_L2="AD - Synchronisation (c\xf4t\xe9 serveur)" Connector="AD" Level="2" Type="ActiveDirectory" DoNotDeleteChanges="true">  \n\xa0\xa0\xa0\xa0<TaskDependsOnTask ParentTask="Job_Fast_PrepareSynchronizationActiveDirectory_AD_Incremental" />  \n\xa0\xa0</SynchronizeTask>  \n\xa0\xa0<SynchronizeTask Identifier="Job_Fast_SynchronizeChanges_MicrosoftEntraID_DoNotDeleteChanges" DisplayName_L1="Microsoft Entra ID - Synchronization (changes server side)" DisplayName_L2="Microsoft Entra ID - Synchronisation (changements c\xf4t\xe9 serveur)" Connector="MicrosoftEntraID" Level="2" Type="Changes" DoNotDeleteChanges="true">  \n\xa0\xa0\xa0\xa0<TaskDependsOnTask ParentTask="Job_Fast_PrepareSynchronizationChanges_MicrosoftEntraID_Incremental" />  \n\xa0\xa0</SynchronizeTask>  \n\xa0\xa0<SetRecentlyModifiedFlagTask Identifier="Job_Fast_SetRecentlyModifiedFlag" DisplayName_L1="Tag Modified Objects" DisplayName_L2="Marquage des objets modifi\xe9s" Level="3">  \n\xa0\xa0\xa0\xa0<TaskDependsOnTask ParentTask="Job_Fast_SynchronizeActiveDirectory_AD_DoNotDeleteChanges" />  \n\xa0\xa0\xa0\xa0<TaskDependsOnTask ParentTask="Job_Fast_SynchronizeChanges_MicrosoftEntraID_DoNotDeleteChanges" />  \n\xa0\xa0</SetRecentlyModifiedFlagTask>  \n\xa0\xa0<UpdateEntityPropertyExpressionsTask Identifier="Job_Fast_UpdateEntityPropertyExpressions1_WithDirty" DisplayName_L1="Update Computed Properties" DisplayName_L2="Mise \xe0 jour des propri\xe9t\xe9s calcul\xe9es" Level="4" Dirty="true">  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="AD_Category" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="AD_Entry" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Access_AccessAuthorization" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Access_Area" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Access_Badge" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Access_TimeSlot" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="SharePoint_Role" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="SharePoint_RoleAssignment" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="ServiceNow_Department" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="ServiceNow_Group" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="ServiceNow_Role" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="ServiceNow_User" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="SharePoint_Entity" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="SharePoint_Object" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="SAP_Role" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="SAP_User" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="SF_ACE" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="SF_PI" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="ServiceNow_Company" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="ServiceNow_CostCenter" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="HR_State" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="HR_Title" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="LDAP_Entry" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="SAB_Group" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="SAB_User" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="SAP_Group" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="HR_Country" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="HR_Employee_type" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="HR_External_company" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="HR_Location" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="HR_Organization" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="HR_Person" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_PersonalTitle" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_PresenceState" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_State" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_Title" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_User" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_UserRecord" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_EmployeeCategory" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_EmployeeType" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_Guest" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_Location" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_Organization" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_OrganizationType" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="MicrosoftEntraID_DirectoryObject" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_Application" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_Bot" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_BusinessCategory" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_Company" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_Country" />  \n\xa0\xa0</UpdateEntityPropertyExpressionsTask>  \n\xa0\xa0<ComputeCorrelationKeysTask Identifier="Job_Fast_ComputeCorrelationKeys1_AllEntities_WithDirty" DisplayName_L1="Compute all Correlations" DisplayName_L2="Calcul des corr\xe9lations" Level="5" Dirty="true">  \n\xa0\xa0\xa0\xa0<TaskDependsOnTask ParentTask="Job_Fast_SetRecentlyModifiedFlag" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="AD_Entry" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Access_AccessAuthorization" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Access_Badge" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="MicrosoftEntraID_DirectoryObject" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_Bot" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_Guest" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_User" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="LDAP_Entry" />  \n\xa0\xa0</ComputeCorrelationKeysTask>  \n\xa0\xa0<ComputeRoleModelTask Identifier="Job_Fast_ComputeRoleModel1_WithDirty" DisplayName_L1="Apply the Role Model" DisplayName_L2="Evaluation du mod\xe8le de r\xf4les" Level="6" Dirty="true">  \n\xa0\xa0\xa0\xa0<TaskDependsOnTask ParentTask="Job_Fast_SetRecentlyModifiedFlag" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_Bot" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_Guest" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_User" />  \n\xa0\xa0</ComputeRoleModelTask>  \n\xa0\xa0<GenerateProvisioningOrdersTask Identifier="Job_Fast_GenerateProvisioningOrders1" DisplayName_L1="Generate Provisioning Orders - AD, Access, Microsoft Entra ID, LDAP" DisplayName_L2="G\xe9n\xe9ration des ordres de provisioning - AD, Access, Microsoft Entra ID, LDAP" Level="7">  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="AD_Entry_AdministrationUser" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="AD_Entry_Bot" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="AD_Entry_Guest" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="AD_Entry_NominativeUser" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="Access_AccessAuthorization_Nominative" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="Access_Badge_Nominative" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="MicrosoftEntraID_DirectoryObject_Guest" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="MicrosoftEntraID_DirectoryObject_NominativeUser" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="LDAP_Entry_Guest" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="LDAP_Entry_NominativeUser" />  \n\xa0\xa0</GenerateProvisioningOrdersTask>  \n\xa0\xa0<FulfillTask Identifier="Job_Fast_Fulfill1" DisplayName_L1="Fulfillment - AD, Access, Microsoft Entra ID, LDAP" DisplayName_L2="Alimentation - AD, Access, Microsoft Entra ID, LDAP" Agent="Local" Level="8" OpenIdClient="Job" Dirty="true" ContinueOnError="true">  \n\xa0\xa0\xa0\xa0<TaskDependsOnTask ParentTask="Job_Fast_GenerateProvisioningOrders1" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="AD_Entry_AdministrationUser" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="AD_Entry_Bot" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="AD_Entry_Guest" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="AD_Entry_NominativeUser" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="Access_AccessAuthorization_Nominative" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="Access_Badge_Nominative" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="MicrosoftEntraID_DirectoryObject_Guest" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="MicrosoftEntraID_DirectoryObject_NominativeUser" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="LDAP_Entry_Guest" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="LDAP_Entry_NominativeUser" />  \n\xa0\xa0</FulfillTask>  \n</Job>\n'})})]})}function y(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);