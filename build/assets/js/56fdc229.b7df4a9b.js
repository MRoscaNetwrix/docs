"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[127800],{28453:(e,r,n)=>{n.d(r,{R:()=>c,x:()=>t});var o=n(296540);const s={},i=o.createContext(s);function c(e){const r=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(i.Provider,{value:r},e.children)}},733159:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>t,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"passwordpolicyenforcer/administration/cmdgetppepolicyenabled","title":"Get-PPEPolicyEnabled","description":"The Get-PPEPolicyEnabled cmdlet returns the enabled/disabled status of a Password Policy Enforcer policy.","source":"@site/docs/passwordpolicyenforcer/passwordpolicyenforcer/administration/cmdgetppepolicyenabled.md","sourceDirName":"passwordpolicyenforcer/administration","slug":"/passwordpolicyenforcer/administration/cmdgetppepolicyenabled","permalink":"/docs/passwordpolicyenforcer/passwordpolicyenforcer/administration/cmdgetppepolicyenabled","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/passwordpolicyenforcer/passwordpolicyenforcer/administration/cmdgetppepolicyenabled.md","tags":[],"version":"current","frontMatter":{},"sidebar":"passwordPolicyEnforcerSidebar","previous":{"title":"Get-PPEPolicies","permalink":"/docs/passwordpolicyenforcer/passwordpolicyenforcer/administration/cmdgetppepolicies"},"next":{"title":"Get-PPEServerVersion","permalink":"/docs/passwordpolicyenforcer/passwordpolicyenforcer/administration/cmdgetppeserverversion"}}');var s=n(474848),i=n(28453);const c={},t="Get-PPEPolicyEnabled",l={},a=[];function d(e){const r={a:"a",code:"code",h1:"h1",header:"header",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"get-ppepolicyenabled",children:"Get-PPEPolicyEnabled"})}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.strong,{children:"Get-PPEPolicyEnabled"})," cmdlet returns the enabled/disabled status of a Password Policy Enforcer policy."]}),"\n",(0,s.jsx)(r.p,{children:"SYNTAX"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Get-PPEPolicyEnabled"})," ",(0,s.jsx)(r.strong,{children:"-PolicyName"})," ",(0,s.jsx)(r.code,{children:"<_string_>"})," [",(0,s.jsx)(r.code,{children:"<_CommonParameters_>"}),"]"]}),"\n",(0,s.jsx)(r.p,{children:"PARAMETERS"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"-PolicyName"})," ",(0,s.jsx)(r.code,{children:"<_string_>"})]}),"\n",(0,s.jsxs)(r.p,{children:["Name of the policy. Can also use ",(0,s.jsx)(r.strong,{children:"-P"})," or ",(0,s.jsx)(r.strong,{children:"-p"}),"."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"<_CommonParameters_>"})}),"\n",(0,s.jsxs)(r.p,{children:["This cmdlet supports the common parameters: ",(0,s.jsx)(r.strong,{children:"Verbose"}),", ",(0,s.jsx)(r.strong,{children:"Debug"}),", ",(0,s.jsx)(r.strong,{children:"ErrorAction"}),", ",(0,s.jsx)(r.strong,{children:"ErrorVariable"}),", ",(0,s.jsx)(r.strong,{children:"WarningAction"}),", ",(0,s.jsx)(r.strong,{children:"WarningVariable"}),", ",(0,s.jsx)(r.strong,{children:"OutBuffer"}),", ",(0,s.jsx)(r.strong,{children:"PipelineVariable"}),", and ",(0,s.jsx)(r.strong,{children:"OutVariable"}),". For more information, see about_CommonParameters ",(0,s.jsx)(r.a,{href:"https:/go.microsoft.com/fwlink?linkid=113216",children:"https:/go.microsoft.com/fwlink/?LinkID=113216"}),"."]}),"\n",(0,s.jsx)(r.p,{children:"EXAMPLE"}),"\n",(0,s.jsx)(r.p,{children:'PS C:> Get-PPEPolicyEnabled -PolicyName "Eval Policy"'}),"\n",(0,s.jsx)(r.p,{children:'Policy "Eval Policy" is Enabled'})]})}function p(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);