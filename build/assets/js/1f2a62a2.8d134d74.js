"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[266300],{28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var i=s(296540);const n={},r=i.createContext(n);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(r.Provider,{value:t},e.children)}},488012:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/setrecentlymodifiedflagtask/index","title":"Set Recently Modified Flag Task","description":"When synchronizing in full or incremental mode, it is possible to optimize the compute performance of the role model by taking into account only the changes made by the synchronization. This optimization is based on the `dirty` property of the entity [","source":"@site/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/setrecentlymodifiedflagtask/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/setrecentlymodifiedflagtask","slug":"/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/setrecentlymodifiedflagtask/","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/setrecentlymodifiedflagtask/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/setrecentlymodifiedflagtask/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"Set Internal User Profiles Task","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/setinternaluserprofilestask/"},"next":{"title":"Synchronize Task","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/synchronizetask/"}}');var n=s(474848),r=s(28453);const o={},a="Set Recently Modified Flag Task",c={},d=[{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"set-recently-modified-flag-task",children:"Set Recently Modified Flag Task"})}),"\n",(0,n.jsxs)(t.p,{children:["When synchronizing in full or incremental mode, it is possible to optimize the compute performance of the role model by taking into account only the changes made by the synchronization. This optimization is based on the ",(0,n.jsx)(t.code,{children:"dirty"})," property of the entity ",(0,n.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/resources/resource/",children:"\nResource\n"}),". The task ",(0,n.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/computerolemodeltask/",children:"\nCompute Role Model Task\n"})," with option ",(0,n.jsx)(t.code,{children:"dirty"})," set to ",(0,n.jsx)(t.code,{children:"true"})," will treat only resources marked as dirty."]}),"\n",(0,n.jsxs)(t.p,{children:["This task is used to set the ",(0,n.jsx)(t.code,{children:"dirty"})," flag on all resources based on ",(0,n.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/resources/",children:"\nResources\n"}),"Change, Resource Link Change and Resource File Change entities. After this, it clears this changes tables."]}),"\n",(0,n.jsxs)(t.p,{children:["This task works correctly only if ",(0,n.jsx)(t.strong,{children:"previous synchronization tasks have not cleared the change tables"})," (option ",(0,n.jsx)(t.code,{children:"DoNotDeleteChanges"})," set to ",(0,n.jsx)(t.code,{children:"true"}),")."]}),"\n",(0,n.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'\n  <SetRecentlyModifiedFlagTask Identifier="Update_Dirty" DisplayName_L1="Update Dirty"/>\n\n'})}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Property"}),(0,n.jsx)(t.th,{children:"Details"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"DisplayName_L1   required"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    String   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Display name of the task in language 1 (up to 16)."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Identifier   optional"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    String   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Unique identifier of the task."]})]})]})]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);