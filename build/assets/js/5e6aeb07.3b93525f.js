"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[446492],{28453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>a});var n=i(296540);const r={},o=n.createContext(r);function s(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(o.Provider,{value:t},e.children)}},614845:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"groupid/managementshell/identitystore/clearnotifications","title":"Clear-Notifications","description":"The commandlet Clear-Notifications removes notifications settings from an identity store. The notifications settings can be removed individually or in sets.","source":"@site/docs/groupid/groupid/managementshell/identitystore/clearnotifications.md","sourceDirName":"groupid/managementshell/identitystore","slug":"/groupid/managementshell/identitystore/clearnotifications","permalink":"/docs/groupid/groupid/managementshell/identitystore/clearnotifications","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/groupid/groupid/managementshell/identitystore/clearnotifications.md","tags":[],"version":"current","frontMatter":{},"sidebar":"groupIdSidebar","previous":{"title":"Clear-MessagingServer","permalink":"/docs/groupid/groupid/managementshell/identitystore/clearmessagingserver"},"next":{"title":"Clear-SmtpServer","permalink":"/docs/groupid/groupid/managementshell/identitystore/clearsmtpserver"}}');var r=i(474848),o=i(28453);const s={},a="Clear-Notifications",d={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Required Parameter",id:"required-parameter",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"clear-notifications",children:"Clear-Notifications"})}),"\n",(0,r.jsx)(t.p,{children:"The commandlet Clear-Notifications removes notifications settings from an identity store. The notifications settings can be removed individually or in sets."}),"\n",(0,r.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"Clear-Notifications  \n-IdentityStoreName <string>  \n[-PrimaryRecepients]  \n[-CarbonCopy]  \n[-NotifyLoggedInUsers]  \n[-NotifyOwners]  \n[-NotifyModifiedObject]  \n[-NotifyPublicGroupOwner]  \n[-NotifyAddedMembers]  \n[-PasswordPortalUrl]  \n[-NotifyUserGroupJoinML]  \n[-NotifyUserGroupLeaveML]  \n[-XDaysBeforeLeaveNotificationML]  \n[-NotifyUserGroupJoinMB]  \n[-NotifyUserGroupLeaveMB]  \n[-XDaysBeforeLeaveNotificationMB]  \n[<CommonParameters>]  \nClear-Notifications  \n-IdentityStoreName <string>  \n[-ClearSet {All | Recipients | PasswordExpiry | ML | MB}]  \n[<CommonParameters>]\n"})}),"\n",(0,r.jsx)(t.h2,{id:"required-parameter",children:"Required Parameter"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"IdentityStoreName"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Example 1:"}),"\n",(0,r.jsx)(t.p,{children:"This example individually removes the Membership Lifecycle notification option \u2013 X days before user is going to leave the group for the AdStore9 identity store."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"Clear-Notifications -IdentityStoreName AdStore9 -NotifyLoggedInUsers \u2013XdaysBeforeLeaveNotificationML 10\n"})}),"\n",(0,r.jsx)(t.p,{children:"Example 2:"}),"\n",(0,r.jsx)(t.p,{children:"This example removes recipients in sets mentioned under the Recipients section on the Notification page of AdStore9 identity store properties."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"Clear-Notifications -IdentityStoreName AdStore9 -ClearSet Recipients\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);