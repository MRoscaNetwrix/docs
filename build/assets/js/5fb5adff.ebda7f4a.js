"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[312322],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var i=n(296540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}},499882:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/connectors/entityassociationmapping/index","title":"Entity Association Mapping","description":"Contains all the [","source":"@site/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/connectors/entityassociationmapping/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/connectors/entityassociationmapping","slug":"/usercube/integration-guide/toolkit/xml-configuration/connectors/entityassociationmapping/","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/connectors/entityassociationmapping/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/connectors/entityassociationmapping/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSidebar","previous":{"title":"Connector","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/connectors/connector/"},"next":{"title":"Entity Type Mapping","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/connectors/entitytypemapping/"}}');var r=n(474848),s=n(28453);const o={},c="Entity Association Mapping",a={},d=[{value:"Properties",id:"properties",level:2}];function l(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"entity-association-mapping",children:"Entity Association Mapping"})}),"\n",(0,r.jsxs)(t.p,{children:["Contains all the ",(0,r.jsx)(t.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/metadata/entityassociation/",children:"\nEntity Association\n"})," that can be materialized in the Identity Manager physical model.\nAn association mapping can be established between two properties of the same entity type mapping or between two properties of different entity type mappings having the same connector.\nSee the ",(0,r.jsx)(t.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/connectors/connector/",children:"\nConnector\n"})," topic to learn how to configure an EntityAssociationMapping."]}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Details"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"C0   optional"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Type"}),"    String   ",(0,r.jsx)(t.strong,{children:"Description"}),"   In a ServiceNow connector, generic column used during provisioning to map the property to be provisioned (target property from the entity association mapping). This column stores the name of the table in ServiceNow in which the property exists."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Column1   required"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Type"}),"    String   ",(0,r.jsx)(t.strong,{children:"Description"}),"   The column of EntityPropertyMapping1 in the association data source."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Column2   required"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Type"}),"    String   ",(0,r.jsx)(t.strong,{children:"Description"}),"   The column of EntityPropertyMapping2 in the association data source."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ConnectionTable   optional"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Type"}),"    String   ",(0,r.jsx)(t.strong,{children:"Description"}),'   Association data source containing Column1 and Column2. Example: ConnectionTable="datasource"']})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Connector   required"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,r.jsx)(t.strong,{children:"Description"}),"   Id of the connector to which it is linked."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"EntityPropertyMapping1   required"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,r.jsx)(t.strong,{children:"Description"}),"   The ID of mapping of the property use to establish the association. The property must be a unique key."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"EntityPropertyMapping2   required"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,r.jsx)(t.strong,{children:"Description"}),"   The ID of mapping of the property use to establish the association. The property must be a unique key."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MaximumDeletedLines   default value: 0"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Type"}),"    Int32   ",(0,r.jsx)(t.strong,{children:"Description"}),"   Deleted association links threshold. Sets the maximum number of navigation properties that can be removed from the entity type when running the synchronization job."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MaximumInsertedLines   default value: 0"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Type"}),"    Int32   ",(0,r.jsx)(t.strong,{children:"Description"}),"   Inserted association links threshold. Sets the maximum number of navigation properties that can be added into the entity type when running the synchronization job."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MaxPercentageDeletedLines   default value: 0"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Type"}),"    Int32   ",(0,r.jsx)(t.strong,{children:"Description"}),"   Deleted association links threshold in percent."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MaxPercentageInsertedLines   default value: 0"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Type"}),"    Int32   ",(0,r.jsx)(t.strong,{children:"Description"}),"   Inserted association links threshold in percent."]})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);