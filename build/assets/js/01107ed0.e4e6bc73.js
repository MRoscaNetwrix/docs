"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[527301],{28453:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>d});var r=o(296540);const n={},i=r.createContext(n);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(i.Provider,{value:t},e.children)}},207127:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>c,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"groupid/api/workflow/deletewfreq","title":"Delete a Workflow Request","description":"Delete a workflow request from a specified identity store ID of which is specified in the endpoint URL.","source":"@site/docs/groupid/groupid/api/workflow/deletewfreq.md","sourceDirName":"groupid/api/workflow","slug":"/groupid/api/workflow/deletewfreq","permalink":"/docs/groupid/groupid/api/workflow/deletewfreq","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/groupid/groupid/api/workflow/deletewfreq.md","tags":[],"version":"current","frontMatter":{},"sidebar":"groupIdSidebar","previous":{"title":"Delete a Route","permalink":"/docs/groupid/groupid/api/workflow/deleteroute"},"next":{"title":"Deny a Request","permalink":"/docs/groupid/groupid/api/workflow/denyreq"}}');var n=o(474848),i=o(28453);const s={},d="Delete a Workflow Request",a={},l=[{value:"Endpoint",id:"endpoint",level:2},{value:"HTTP Methods",id:"http-methods",level:2},{value:"Sample Response Syntax",id:"sample-response-syntax",level:4}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"delete-a-workflow-request",children:"Delete a Workflow Request"})}),"\n",(0,n.jsx)(t.p,{children:"Delete a workflow request from a specified identity store ID of which is specified in the endpoint URL."}),"\n",(0,n.jsx)(t.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://machinename:4443/GroupIDDataService/api/IdentityStores/%7BidentitystoreId%7D/Workflows/%7BWorkflowRequestID%7D",children:"https://machinename:4443/GroupIDDataService/api/IdentityStores/{identitystoreId}/Workflows/{WorkflowRequestID}"})}),"\n",(0,n.jsx)(t.h2,{id:"http-methods",children:"HTTP Methods"}),"\n",(0,n.jsx)(t.p,{children:"DELETE"}),"\n",(0,n.jsx)(t.h4,{id:"sample-response-syntax",children:"Sample Response Syntax"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"true\n"})})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);