"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[638878],{28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var t=o(296540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}},263416:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/troubleshoot_synchroprovschema-e266529869c02619a2962c685308ac3a.webp"},532016:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>h,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"usercube/integration-guide/tasks-jobs/how-tos/troubleshoot-connector-jobs/index","title":"Troubleshoot Connector Jobs","description":"This guide helps understand the behavior of synchronization and provisioning tasks in order to spot and fix errors.","source":"@site/docs/usercube_saas/usercube/integration-guide/tasks-jobs/how-tos/troubleshoot-connector-jobs/index.md","sourceDirName":"usercube/integration-guide/tasks-jobs/how-tos/troubleshoot-connector-jobs","slug":"/usercube/integration-guide/tasks-jobs/how-tos/troubleshoot-connector-jobs/","permalink":"/docs/usercube_saas/usercube/integration-guide/tasks-jobs/how-tos/troubleshoot-connector-jobs/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/tasks-jobs/how-tos/troubleshoot-connector-jobs/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"Set Up Incremental Synchronization","permalink":"/docs/usercube_saas/usercube/integration-guide/tasks-jobs/how-tos/jobfast/"},"next":{"title":"Jobs","permalink":"/docs/usercube_saas/usercube/integration-guide/tasks-jobs/jobs/"}}');var s=o(474848),r=o(28453);const i={},a="Troubleshoot Connector Jobs",h={},c=[{value:"Overview",id:"overview",level:2},{value:"Export data",id:"export-data",level:3},{value:"Prepare synchronization",id:"prepare-synchronization",level:3},{value:"Synchronize",id:"synchronize",level:3},{value:"Synchronization: build the difference",id:"synchronization-build-the-difference",level:4},{value:"Synchronization: finalize",id:"synchronization-finalize",level:4},{value:"Apply the policy",id:"apply-the-policy",level:3},{value:"Generate provisioning orders",id:"generate-provisioning-orders",level:3},{value:"Provision",id:"provision",level:3},{value:"Troubleshoot",id:"troubleshoot",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"troubleshoot-connector-jobs",children:"Troubleshoot Connector Jobs"})}),"\n",(0,s.jsx)(n.p,{children:"This guide helps understand the behavior of synchronization and provisioning tasks in order to spot and fix errors."}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"A managed system is synchronized and provisioned to/from Identity Manager\xa0with the following task sequence:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Synchronization/Provisioning Schema",src:o(263416).A+"",width:"4416",height:"2349"})}),"\n",(0,s.jsx)(n.h3,{id:"export-data",children:"Export data"}),"\n",(0,s.jsx)(n.p,{children:"Exporting means that the agent reads the system's data and takes it out to one or several external files, as tables."}),"\n",(0,s.jsxs)(n.p,{children:["The output is stored in ",(0,s.jsx)(n.code,{children:"Temp/ExportOutput"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["In order to spot what was exported or not for the next incremental export, cookie files are stored in ",(0,s.jsx)(n.code,{children:"Temp/ExportCookies"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["See the ",(0,s.jsx)(n.a,{href:"/docs/usercube_saas/usercube/integration-guide/executables/references/export-configuration/",children:"\nUsercube-Export-Configuration\n"})," topic for additional information."]}),"\n",(0,s.jsx)(n.h3,{id:"prepare-synchronization",children:"Prepare synchronization"}),"\n",(0,s.jsx)(n.p,{children:"Preparing the synchronization means that the agent reads the tables, output of the export step, and produces one file for each association (also named multi-valued navigation property), where the data is prepared for synchronization."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"For example, the data is sorted according to their primary keys, in order to optimize the comparison with the database."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The output is stored in ",(0,s.jsx)(n.code,{children:"Work/Collect"}),", and sent to the server to queue in ",(0,s.jsx)(n.code,{children:"Work/Synchronization"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["See the ",(0,s.jsx)(n.a,{href:"/docs/usercube_saas/usercube/integration-guide/executables/references/export-configuration/",children:"\nUsercube-Export-Configuration\n"})," topic for additional information on how to prepare the synchronization executable ",(0,s.jsx)(n.code,{children:"Usercube-Prepare-Synchronization"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"synchronize",children:"Synchronize"}),"\n",(0,s.jsx)(n.p,{children:"Synchronizing means reading the data of the external file, output of the preparation step, and taking it to Identity Manager."}),"\n",(0,s.jsx)(n.p,{children:"This is done by the synchronization executable Identity Manager-Synchronize."}),"\n",(0,s.jsx)(n.h4,{id:"synchronization-build-the-difference",children:"Synchronization: build the difference"}),"\n",(0,s.jsx)(n.p,{children:"The server compares the exported files, output of the preparation step, with the previous data of the system, and with the data contained in the database. Based on this comparison, the changes are stored in the database."}),"\n",(0,s.jsxs)(n.p,{children:["The output is stored in ",(0,s.jsx)(n.code,{children:"UR_ResourceChanges"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"synchronization-finalize",children:"Synchronization: finalize"}),"\n",(0,s.jsxs)(n.p,{children:["When at least one synchronization ",(0,s.jsx)(n.a,{href:"/docs/usercube_saas/usercube/integration-guide/synchronization/synchro-thresholds/",children:"\nThresholds\n"})," is exceeded, the change list can be seen in the ",(0,s.jsx)(n.strong,{children:"Synchronization Changes"})," tab, accessible from the job progress screen."]}),"\n",(0,s.jsx)(n.p,{children:"When the synchronization thresholds are not exceeded, or they are bypassed, the potential preparatory files are consumed and the changes are applied."}),"\n",(0,s.jsx)(n.p,{children:"The server updates the values of the properties computed via expressions. A user's history can be used to view the impact of this step on the properties."}),"\n",(0,s.jsx)(n.h3,{id:"apply-the-policy",children:"Apply the policy"}),"\n",(0,s.jsx)(n.p,{children:"Applying the policy means that the server prepares the correlation keys and computes the role model."}),"\n",(0,s.jsxs)(n.p,{children:["Preparing the correlation keys means that the server recomputes the keys that will later link accounts to their owners. The output is stored in ",(0,s.jsx)(n.code,{children:"UP_ResourceCorrelationKeys"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["This is done by the correlation key computation executable ",(0,s.jsx)(n.code,{children:"Usercube-Compute-CorrelationKeys"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Computing the role model means that the server applies all the rules in order to assign accounts and entitlements to identities."}),"\n",(0,s.jsxs)(n.p,{children:["The assigned accounts and entitlements are stored in ",(0,s.jsx)(n.code,{children:"UP_Assigned*"}),", and can be seen in users' ",(0,s.jsx)(n.strong,{children:"View Permissions"})," tab."]}),"\n",(0,s.jsxs)(n.p,{children:["This is done by the role model computation executable ",(0,s.jsx)(n.code,{children:"Usercube-Compute-RoleModel"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"generate-provisioning-orders",children:"Generate provisioning orders"}),"\n",(0,s.jsx)(n.p,{children:"Generating the provisioning orders means that the server builds JSON files to prepare the execution of provisioning."}),"\n",(0,s.jsxs)(n.p,{children:["The output is stored in ",(0,s.jsx)(n.code,{children:"Work/ProvisioningOrders"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["This is done by the order generation executable ",(0,s.jsx)(n.code,{children:"Usercube-Generate-ProvisioningOrders"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"provision",children:"Provision"}),"\n",(0,s.jsx)(n.p,{children:"Provisioning means that the agent asks the server to send the provisioning orders, in order to read the orders and actually make modifications to the managed system."}),"\n",(0,s.jsxs)(n.p,{children:["Once consumed, the files are moved to the subfolder ",(0,s.jsx)(n.code,{children:"Downloaded"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["This is done by the provisioning executables ",(0,s.jsx)(n.code,{children:"Usercube-Fulfill-*"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"In order to test the provisioning step, there is no need relaunching the whole task sequence. You can, for example, keep a provisioning order from the previous step, and adjusting it before launching provisioning."}),"\n",(0,s.jsx)(n.h2,{id:"troubleshoot",children:"Troubleshoot"}),"\n",(0,s.jsx)(n.p,{children:"Troubleshoot an error in a connector job by running each step individually until you see something that you did not expect."})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);