"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[654406],{28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>s});var n=r(296540);const a={},i=n.createContext(a);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(i.Provider,{value:t},e.children)}},918276:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"groupid/managementshell/smartgroup/updategroup","title":"Update-Group","description":"The Update-Group commandlet modifies the membership of a Smart Group or Dynasty according to the results returned by the LDAP query. This query is associated with the group or Dynasty creation and can be updated anytime using the Set-SmartGroup commandlet. When the Update-Group commandlet is executed, it searches the directory to find recipients matching the criteria defined in the query and modifies the group membership list with the returned recipients, if any.","source":"@site/docs/groupid/groupid/managementshell/smartgroup/updategroup.md","sourceDirName":"groupid/managementshell/smartgroup","slug":"/groupid/managementshell/smartgroup/updategroup","permalink":"/docs/groupid/groupid/managementshell/smartgroup/updategroup","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/groupid/groupid/managementshell/smartgroup/updategroup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"groupIdSidebar","previous":{"title":"Set-SmartGroup","permalink":"/docs/groupid/groupid/managementshell/smartgroup/setsmartgroup"},"next":{"title":"Upgrade-Group","permalink":"/docs/groupid/groupid/managementshell/smartgroup/upgradegroup"}}');var a=r(474848),i=r(28453);const o={},s="Update-Group",d={},p=[{value:"Syntax",id:"syntax",level:2},{value:"Required Parameter",id:"required-parameter",level:2}];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"update-group",children:"Update-Group"})}),"\n",(0,a.jsxs)(t.p,{children:["The Update-Group commandlet modifies the membership of a Smart Group or Dynasty according to the results returned by the LDAP query. This query is associated with the group or Dynasty creation and can be updated anytime using the ",(0,a.jsx)(t.strong,{children:"Set-SmartGroup"})," commandlet. When the Update-Group commandlet is executed, it searches the directory to find recipients matching the criteria defined in the query and modifies the group membership list with the returned recipients, if any."]}),"\n",(0,a.jsx)(t.p,{children:"You can view events related to this commandlet in Directory Manager portal, against the History node in the left panel."}),"\n",(0,a.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"Update-Group  \n-Identity <string>  \n[-SearchContainer <string>]  \n[-IdentityStoreId <int>]  \n[-SecurityToken <CustomClaimsPrincipal>]  \n[-Credential <pscredential>]  \n[<CommonParameters>]\n"})}),"\n",(0,a.jsx)(t.h2,{id:"required-parameter",children:"Required Parameter"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Identity"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Example 1:"}),"\n",(0,a.jsx)(t.p,{children:'The following command updates all the Directory Manager group(s), by using the credentials of a locally logged on user, in a container specified by the "SearchContainer" parameter.'}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"Update-Group -SearchContainer \u201cOU=Sales,DC=Contoso,DC=com\u201d\n"})}),"\n",(0,a.jsx)(t.p,{children:"Example 2:"}),"\n",(0,a.jsxs)(t.p,{children:["The following command updates all Smart Groups and Dynasties present in the container Training, using the credentials set in the $Credentials environment variable. See the ",(0,a.jsx)(t.a,{href:"/docs/groupid/groupid/managementshell/parameters/setthecredential",children:"Set the $Credentials Environment Variable"})," topic for setting credentials in an environment variable."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'Update-Group -SearchContainer "OU=Training,DC=HR,DC=Imanami,DC=US" -Credential $Cred\n'})})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);