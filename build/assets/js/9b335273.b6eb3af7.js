"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[748859],{28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>a});var s=i(296540);const t={},r=s.createContext(t);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(r.Provider,{value:n},e.children)}},796715:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"privilegesecure/accessmanagement/admin/policy/activityloginaccounttemplates","title":"Login Account Templates","description":"There are three options for Login Account Templates in an Activity:","source":"@site/docs/privilegesecure/privilegesecure/accessmanagement/admin/policy/activityloginaccounttemplates.md","sourceDirName":"privilegesecure/accessmanagement/admin/policy","slug":"/privilegesecure/accessmanagement/admin/policy/activityloginaccounttemplates","permalink":"/docs/privilegesecure/privilegesecure/accessmanagement/admin/policy/activityloginaccounttemplates","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/privilegesecure/privilegesecure/accessmanagement/admin/policy/activityloginaccounttemplates.md","tags":[],"version":"current","frontMatter":{},"sidebar":"privilegeSecureSidebar","previous":{"title":"Action Types","permalink":"/docs/privilegesecure/privilegesecure/accessmanagement/admin/policy/activityactiontypes"},"next":{"title":"Add Access Policy","permalink":"/docs/privilegesecure/privilegesecure/accessmanagement/admin/policy/add/accesspolicy"}}');var t=i(474848),r=i(28453);const c={},a="Login Account Templates",l={},o=[{value:"Functions for Login Account Templates",id:"functions-for-login-account-templates",level:2},{value:"first()",id:"first",level:3},{value:"substr()",id:"substr",level:3},{value:"replace()",id:"replace",level:3},{value:"trim()",id:"trim",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"login-account-templates",children:"Login Account Templates"})}),"\n",(0,t.jsx)(n.p,{children:"There are three options for Login Account Templates in an Activity:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Use a specific account name \u2014 For example, to always connect the Activity as a service account might be \u201cdemocorp\\svc_account_name\u201d"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Use a mask to select a user\u2019s unique admin account using variable substitution."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["For Users and Groups, acceptable substitute variables that map to the users AD attributes are: ",(0,t.jsx)(n.code,{children:"%domain%"}),", ",(0,t.jsx)(n.code,{children:"%targetdomain%"}),", ",(0,t.jsx)(n.code,{children:"%samaccountname%"}),", ",(0,t.jsx)(n.code,{children:"%email%"}),", ",(0,t.jsx)(n.code,{children:"%department%"}),", ",(0,t.jsx)(n.code,{children:"%sessionid%"}),", ",(0,t.jsx)(n.code,{children:"%hostname%"}),", ",(0,t.jsx)(n.code,{children:"%dnshostname%"}),", ",(0,t.jsx)(n.code,{children:"%fqdn%"}),", ",(0,t.jsx)(n.code,{children:"%upn-username%"}),", ",(0,t.jsx)(n.code,{children:"%upn-domain%"}),", ",(0,t.jsx)(n.code,{children:"%email-username%"}),", ",(0,t.jsx)(n.code,{children:"%email-domain%"}),", ",(0,t.jsx)(n.code,{children:"%firstname%"}),", ",(0,t.jsx)(n.code,{children:"%lastname%"}),", ",(0,t.jsx)(n.code,{children:"%displayname%"}),", ",(0,t.jsx)(n.code,{children:"%fullname%"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Example 1: \u201c",(0,t.jsx)(n.code,{children:"%domain%\\%samaccountname%-a"}),"\u201d, a user with an Privilege Secure login name of \u201csblab\\jsmith\u201d would result in a login account of \u201csblab\\jsmith-a\u201d"]}),"\n",(0,t.jsxs)(n.li,{children:["Example 2: \u201c",(0,t.jsx)(n.code,{children:"%upn-username%-a@%upn-domain%"}),"\u201d, a user with an Privilege Secure login name of \u201c",(0,t.jsx)(n.a,{href:"mailto:jsmith@sblab.com",children:"jsmith@sblab.com"}),"\u201d would result in a login account of \u201c",(0,t.jsx)(n.a,{href:"mailto:jsmith-a@sblab.com",children:"jsmith-a@sblab.com"}),"\u201d"]}),"\n",(0,t.jsxs)(n.li,{children:["Example 3: \u201c",(0,t.jsx)(n.code,{children:"%email-username%-a@%email-domain%"}),"\u201d, a user with an Privilege Secure login name of \u201c",(0,t.jsx)(n.a,{href:"mailto:jsmith@netwrix.com",children:"jsmith@netwrix.com"}),"\u201d would result in a login account of \u201c",(0,t.jsx)(n.a,{href:"mailto:jsmith-a@netwrix.com",children:"jsmith-a@netwrix.com"}),"\u201d"]}),"\n",(0,t.jsx)(n.li,{children:"When a domain name is detected in the template field, i.e. contains a \u201c\\\u201d character, the Create Local Account option has no effect"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"For Applications, the following masks are available:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"%samaccountname%, %department%, %email%, %userprincipalname%, %displayname%"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Use a mask to define an account that will be created locally on the target resource \u2014 For example, a mask of \u201c",(0,t.jsx)(n.code,{children:"%domain%_%samaccountname%"}),"\u201d in conjunction with the Create Local Account option set to yes, will result in a local account being created using name substitution so the user \u201csblab\\jsmith\u201d will be connected to a local account named \u201csblab_jsmith\u201d"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," The value of each mask can be customized on the ",(0,t.jsx)(n.a,{href:"/docs/privilegesecure/privilegesecure/accessmanagement/admin/policy/tab/usersgroups/properties",children:"Properties Tab"})," of the Application details page. See the ",(0,t.jsx)(n.a,{href:"/docs/privilegesecure/privilegesecure/accessmanagement/admin/policy/page/details/usergroupapplication",children:"User, Group, & Application Details Page"})," topic for additional information."]}),"\n",(0,t.jsx)(n.h2,{id:"functions-for-login-account-templates",children:"Functions for Login Account Templates"}),"\n",(0,t.jsx)(n.h3,{id:"first",children:"first()"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"first()"})," function returns the specified number of characters starting from the beginning of the string."]}),"\n",(0,t.jsx)(n.p,{children:"%first(string stringToManipulate, int numCharactersReturned)/first%"}),"\n",(0,t.jsx)(n.p,{children:"Parameters"}),"\n",(0,t.jsx)(n.p,{children:"stringToManipulate (string)"}),"\n",(0,t.jsx)(n.p,{children:"The string or Privilege Secure Login Account Template mask to be manipulated."}),"\n",(0,t.jsx)(n.p,{children:"numCharactersReturned (int)"}),"\n",(0,t.jsxs)(n.p,{children:["The number of characters, starting from the beginning of the string, to be returned based on supplied ",(0,t.jsx)(n.code,{children:"stringToManipulate"})," parameter."]}),"\n",(0,t.jsx)(n.p,{children:"Notes"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"int numCharactersReturned"})," must be a positive number."]}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"int numCharactersReturned"})," exceeds string ",(0,t.jsx)(n.code,{children:"stringToManipulate"})," then the entire string will be returned."]}),"\n",(0,t.jsx)(n.p,{children:"Examples"}),"\n",(0,t.jsx)(n.p,{children:"%first(jsmith,3)/first%"}),"\n",(0,t.jsx)(n.p,{children:'The above example will return: "jsm"'}),"\n",(0,t.jsxs)(n.p,{children:["A common use case for this function is to manipulate Privilege Secure Login Account Template masks such as ",(0,t.jsx)(n.code,{children:"%samaccountname%"}),", to change how what the Login Account Template evaluates to when an Privilege Secure user provisions an activity session."]}),"\n",(0,t.jsx)(n.p,{children:"For example:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"%first(%samaccountname%,3)/first%"})}),"\n",(0,t.jsxs)(n.p,{children:['In the example above, if "',(0,t.jsx)(n.code,{children:"%samaccountname%"}),'" normally evaluates to "jsmith" then the return value of the ',(0,t.jsx)(n.code,{children:"first()"}),' function will be "jsm"']}),"\n",(0,t.jsx)(n.h3,{id:"substr",children:"substr()"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"substr()"})," function starts from the specified index in the supplied string and returns from that index to the end of the supplied string. If a negative number is supplied for ",(0,t.jsx)(n.code,{children:"int startIndexOrNumCharactersReturned"})," then the return value is that many characters from the end of the supplied string."]}),"\n",(0,t.jsx)(n.p,{children:"Parameters"}),"\n",(0,t.jsx)(n.p,{children:"stringToManipulate (string)"}),"\n",(0,t.jsx)(n.p,{children:"The string or Privilege Secure Login Account Template mask to be manipulated."}),"\n",(0,t.jsx)(n.p,{children:"startIndexOrNumCharactersReturned (int)"}),"\n",(0,t.jsx)(n.p,{children:"If non-negative, the return value is this index to the end of the supplied string. If negative, the return value is this many characters from the end of the supplied string."}),"\n",(0,t.jsx)(n.p,{children:"Notes"}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"int startIndexOrNumCharactersReturned"})," is an index greater than the largest index in the supplied string, then an empty string is returned."]}),"\n",(0,t.jsx)(n.p,{children:"Examples"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"%substr(jsmith,2)/substr%"})}),"\n",(0,t.jsx)(n.p,{children:'The above example will return "mith"'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"%substr(jsmith,-2)/substr%"})}),"\n",(0,t.jsx)(n.p,{children:'The above example will return "th"'}),"\n",(0,t.jsxs)(n.p,{children:['A common use case for this function is to manipulate Privilege Secure Login Account Template masks such as "',(0,t.jsx)(n.code,{children:"%samaccountname%"}),'" to change how what the Login Account Template evaluates to when an Privilege Secure user provisions an activity session.']}),"\n",(0,t.jsx)(n.p,{children:"For example:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"%substr(%samaccountname%,2)/substr%"})}),"\n",(0,t.jsxs)(n.p,{children:['In the example above, if "',(0,t.jsx)(n.code,{children:"%samaccountname%"}),'" normally evaluates to "jsmith" then the return value of the ',(0,t.jsx)(n.code,{children:"substr()"}),' function will be "mith"']}),"\n",(0,t.jsx)(n.h3,{id:"replace",children:"replace()"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"replace()"})," function accepts a string as input, and replaces all instances of an oldString with a newString."]}),"\n",(0,t.jsx)(n.p,{children:"Parameters"}),"\n",(0,t.jsx)(n.p,{children:"stringToManipulate (string)"}),"\n",(0,t.jsx)(n.p,{children:"The string or Privilege Secure Login Account Template mask to be manipulated."}),"\n",(0,t.jsx)(n.p,{children:"oldString (string)"}),"\n",(0,t.jsx)(n.p,{children:"The string to be replaced"}),"\n",(0,t.jsx)(n.p,{children:"newString (string)"}),"\n",(0,t.jsx)(n.p,{children:"The string that will replace the newString"}),"\n",(0,t.jsx)(n.p,{children:"Examples"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"%replace(jsmith,smith,jones)/replace%"})}),"\n",(0,t.jsx)(n.p,{children:'The above example will return "jjones"'}),"\n",(0,t.jsx)(n.h3,{id:"trim",children:"trim()"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"trim()"})," function removes the specified number of characters from the end of a string."]}),"\n",(0,t.jsx)(n.p,{children:"Parameters"}),"\n",(0,t.jsx)(n.p,{children:"stringToManipulate (string)"}),"\n",(0,t.jsx)(n.p,{children:"The string or Privilege Secure Login Account Template mask to be manipulated."}),"\n",(0,t.jsx)(n.p,{children:"numberOfCharacters (int)"}),"\n",(0,t.jsx)(n.p,{children:"A non-negative integer should be supplied. That many characters will be trimmed from the end of the string."}),"\n",(0,t.jsx)(n.p,{children:"Notes"}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"int numberOfCharacters"})," is an index greater than the length of the supplied string, then an empty string is returned."]}),"\n",(0,t.jsx)(n.p,{children:"Examples"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"%trim(jsmith-suffix,7)/trim%"})}),"\n",(0,t.jsx)(n.p,{children:'The above example will return "jsmith"'}),"\n",(0,t.jsxs)(n.p,{children:['A common use case for this function is to remove known suffixes from Privilege Secure Login Account Template masks such as "',(0,t.jsx)(n.code,{children:"%samaccountname%"}),'" to change what the Login Account Template evaluates to when an Privilege Secure user provisions an activity session.']})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);