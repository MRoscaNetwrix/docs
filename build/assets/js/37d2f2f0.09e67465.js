"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[981913],{28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var r=i(296540);const t={},s=r.createContext(t);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:n},e.children)}},493907:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"usercube/integration-guide/monitoring/references/index","title":"References: Logs","description":"Definition","source":"@site/docs/usercube_saas/usercube/integration-guide/monitoring/references/index.md","sourceDirName":"usercube/integration-guide/monitoring/references","slug":"/usercube/integration-guide/monitoring/references/","permalink":"/docs/usercube_saas/usercube/integration-guide/monitoring/references/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/monitoring/references/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"Export Logs to a Log Management System","permalink":"/docs/usercube_saas/usercube/integration-guide/monitoring/how-tos/qradar-setting/"},"next":{"title":"Network Configuration","permalink":"/docs/usercube_saas/usercube/integration-guide/network-configuration/"}}');var t=i(474848),s=i(28453);const o={},d="References: Logs",c={},l=[{value:"Definition",id:"definition",level:2},{value:"500",id:"500",level:4},{value:"501",id:"501",level:4},{value:"502",id:"502",level:4},{value:"503",id:"503",level:4}];function a(e){const n={a:"a",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"references-logs",children:"References: Logs"})}),"\n",(0,t.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,t.jsx)(n.p,{children:"This section provides descriptions for logs which are meant to be sent to other systems like SIEMs, for example QRadar."}),"\n",(0,t.jsx)(n.p,{children:"The description will use this template for each log:"}),"\n",(0,t.jsx)(n.p,{children:"EventId id: int"}),"\n",(0,t.jsx)(n.p,{children:"EventId name: string"}),"\n",(0,t.jsx)(n.p,{children:"LogLevel: Trace||Verbose||Debug||Information||Warning||Error||Critical"}),"\n",(0,t.jsx)(n.p,{children:"Arguments:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"argument1 (string): description1 (string)"}),"\n",(0,t.jsx)(n.li,{children:"argument2 (string): description2 (string)"}),"\n",(0,t.jsx)(n.li,{children:"argument3 (string): description3 (string)"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The EventId id must be unique so we could use it to filter the logs we send. See the ",(0,t.jsx)(n.a,{href:"/docs/usercube_saas/usercube/integration-guide/monitoring/",children:"\nMonitoring\n"})," topic for additional information."]}),"\n",(0,t.jsx)(n.h4,{id:"500",children:"500"}),"\n",(0,t.jsx)(n.p,{children:"EventId id: 500"}),"\n",(0,t.jsx)(n.p,{children:"EventId name: Workflow.StartWorkflowInstance"}),"\n",(0,t.jsx)(n.p,{children:"LogLevel: Information"}),"\n",(0,t.jsx)(n.p,{children:"Arguments:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"WorkflowId: Request number, which includes the workflow instance's id"}),"\n",(0,t.jsx)(n.li,{children:"Transition: Activity template name"}),"\n",(0,t.jsx)(n.li,{children:"Perfomer: Identity Manager's login or id of the performer"}),"\n",(0,t.jsx)(n.li,{children:"WorkflowIdentifier: Workflow's identifier"}),"\n",(0,t.jsx)(n.li,{children:"Subject: Action performed, with the person's name in modifying permission case"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"501",children:"501"}),"\n",(0,t.jsx)(n.p,{children:"EventId id: 501"}),"\n",(0,t.jsx)(n.p,{children:"EventId name: Workflow.ResumeWorkflowInstance"}),"\n",(0,t.jsx)(n.p,{children:"LogLevel: Information"}),"\n",(0,t.jsx)(n.p,{children:"Arguments:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"WorkflowId: Request number, which includes the workflow instance's id"}),"\n",(0,t.jsx)(n.li,{children:"Transition: Activity template name"}),"\n",(0,t.jsx)(n.li,{children:"Perfomer: Identity Manager's login or id of the performer"}),"\n",(0,t.jsx)(n.li,{children:"WorkflowIdentifier: Workflow's identifier"}),"\n",(0,t.jsx)(n.li,{children:"Subject: Action performed, with the person's name in modifying permission case"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"502",children:"502"}),"\n",(0,t.jsx)(n.p,{children:"EventId id: 502"}),"\n",(0,t.jsx)(n.p,{children:"EventId name: SelectEntityByIdQueryHandler.Handle"}),"\n",(0,t.jsx)(n.p,{children:"LogLevel: Information"}),"\n",(0,t.jsx)(n.p,{children:"Arguments:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Perfomer: Identity Manager's login or id of the performer"}),"\n",(0,t.jsx)(n.li,{children:"Subject: Identity Manager's id of the readed resource"}),"\n",(0,t.jsx)(n.li,{children:"EntityType: Identity Manager's type of the readed resource"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"503",children:"503"}),"\n",(0,t.jsx)(n.p,{children:"EventId id: 503"}),"\n",(0,t.jsx)(n.p,{children:"EventId name: SelectEntityByIdQueryHandler.Handle"}),"\n",(0,t.jsx)(n.p,{children:"LogLevel: Error"}),"\n",(0,t.jsx)(n.p,{children:"Arguments:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Perfomer: Identity Manager's login or id of the performer"}),"\n",(0,t.jsx)(n.li,{children:"Subject: Identity Manager's id of the readed resource"}),"\n",(0,t.jsx)(n.li,{children:"EntityType: Identity Manager's type of the readed resource"}),"\n",(0,t.jsx)(n.li,{children:"ExceptionMessage: Exception's message"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);