"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[116264],{28453:(e,s,t)=>{t.d(s,{R:()=>c,x:()=>o});var r=t(296540);const n={},i=r.createContext(n);function c(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),r.createElement(i.Provider,{value:s},e.children)}},638598:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"usercube/integration-guide/executables/references/fulfill-easyvista/index","title":"Usercube-Fulfill-EasyVista","description":"This executable creates, updates and archives employees in an EasyVista instance.","source":"@site/docs/usercube/usercube/integration-guide/executables/references/fulfill-easyvista/index.md","sourceDirName":"usercube/integration-guide/executables/references/fulfill-easyvista","slug":"/usercube/integration-guide/executables/references/fulfill-easyvista/","permalink":"/docs/usercube/usercube/integration-guide/executables/references/fulfill-easyvista/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube/usercube/integration-guide/executables/references/fulfill-easyvista/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSidebar","previous":{"title":"Usercube-FillBankingDatabase","permalink":"/docs/usercube/usercube/integration-guide/executables/references/fillbankingdatabase/"},"next":{"title":"Usercube-Fulfill-Scim","permalink":"/docs/usercube/usercube/integration-guide/executables/references/fulfill-scim/"}}');var n=t(474848),i=t(28453);const c={},o="Usercube-Fulfill-EasyVista",d={},l=[{value:"Examples",id:"examples",level:2},{value:"Connector specified",id:"connector-specified",level:3},{value:"Resource types specified",id:"resource-types-specified",level:3},{value:"Arguments",id:"arguments",level:2}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"usercube-fulfill-easyvista",children:"Usercube-Fulfill-EasyVista"})}),"\n",(0,n.jsx)(s.p,{children:"This executable creates, updates and archives employees in an EasyVista instance."}),"\n",(0,n.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(s.h3,{id:"connector-specified",children:"Connector specified"}),"\n",(0,n.jsxs)(s.p,{children:["When specifying ",(0,n.jsx)(s.code,{children:"--connector"}),", there is no need to specify ",(0,n.jsx)(s.code,{children:"--resource-types"}),":"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:'--connector "3" --api-url "http://localhost:5000/" --api-client-id "Job" --api-secret "secret" --url "https://easyvista.contoso.com" --account "12345" --login "Contoso" --password "cOntoSo6789"'})}),"\n",(0,n.jsx)(s.p,{children:"But the identifier can be also given instead of the id:"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:'--connector "EasyVista" --api-url "http://localhost:5000/" --api-client-id "Job" --api-secret "secret" --url "https://easyvista.contoso.com" --account "12345" --login "Contoso" --password "cOntoSo6789"'})}),"\n",(0,n.jsx)(s.h3,{id:"resource-types-specified",children:"Resource types specified"}),"\n",(0,n.jsxs)(s.p,{children:["When specifying ",(0,n.jsx)(s.code,{children:"--resource-types"}),", there is no need to specify ",(0,n.jsx)(s.code,{children:"--connector"}),":"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:'--resource-types "40" "41" --api-url "http://localhost:5000/" --api-client-id "Job" --api-secret "secret" --url "https://easyvista.contoso.com" --account "12345" --login "Contoso" --password "cOntoSo6789"'})}),"\n",(0,n.jsx)(s.p,{children:"But the identifiers can be also given instead of the id:"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:'--resource-types "EasyVista_NominativeUser" "EasyVista_Administrator" --api-url "http://localhost:5000/" --api-client-id "Job" --api-secret "secret"--url "https://easyvista.contoso.com" --account "12345" --login "Contoso" --password "cOntoSo6789"'})}),"\n",(0,n.jsx)(s.h2,{id:"arguments",children:"Arguments"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Argument Name"}),(0,n.jsx)(s.th,{children:"Details"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--api-client-id   required"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    String   ",(0,n.jsx)(s.strong,{children:"Description"})," Login used to authenticate to the server. Every request from agent to server needs to be authenticated with an ",(0,n.jsx)(s.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/access-control/openidclient/",children:" OpenIdClient "})," Connect ClientId/Secret pair, linked to a profile with the relevant permissions."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--api-secret   required"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    String   ",(0,n.jsx)(s.strong,{children:"Description"})," Password used to authenticate to the server. Every request from agent to server needs to be authenticated with an ",(0,n.jsx)(s.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/access-control/openidclient/",children:" OpenIdClient "})," Connect ClientId/Secret pair, linked to a profile with the relevant permissions."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--api-url   required"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    String   ",(0,n.jsx)(s.strong,{children:"Description"})," URL of Identity Manager\xa0server."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"---"}),(0,n.jsx)(s.td,{children:"---"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--url   required"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    String   ",(0,n.jsx)(s.strong,{children:"Description"})," EasyVista API Endpoint URL."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--account   required"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    String   ",(0,n.jsx)(s.strong,{children:"Description"})," EasyVista account."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--login   required"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    String   ",(0,n.jsx)(s.strong,{children:"Description"})," Path of the file used for complete synchronization."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--password   required"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    String   ",(0,n.jsx)(s.strong,{children:"Description"})," EasyVista server password."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"---"}),(0,n.jsx)(s.td,{children:"---"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--connector   required if --resource-typesis not given"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    String   ",(0,n.jsx)(s.strong,{children:"Description"})," Id or Identifier of the resource types' connector we want to update the fulfillment state."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--resource-types   required if --connectoris not given"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    String List   ",(0,n.jsx)(s.strong,{children:"Description"})," Id or Identifier of the resource types we want to update the fulfillment state."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--certificate-identifier   optional"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    String   ",(0,n.jsx)(s.strong,{children:"Description"})," Unique key used to retrieve the certificate in Azure Key Vault."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--vault   optional"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    String   ",(0,n.jsx)(s.strong,{children:"Description"})," Vault uri."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--vault-connection-string   optional"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    String   ",(0,n.jsx)(s.strong,{children:"Description"})," Connection string to connect to Azure Key Vault."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--batch-size   default value: 1000"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    Int32   ",(0,n.jsx)(s.strong,{children:"Description"})," Number of provisioning orders to wait between each progress report."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--task-instance-id   optional"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    String   ",(0,n.jsx)(s.strong,{children:"Description"})," Id of the task instance which have launch the exe in a job context (for log purposes)."]})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}}}]);