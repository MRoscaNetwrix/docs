"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[857214],{28453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>c});var r=i(296540);const s={},n=r.createContext(s);function o(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(n.Provider,{value:t},e.children)}},701822:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/provisioning/category/index","title":"Category","description":"A category is a classification of Composite Roles, Single Roles or/and Resource Type. It can be used to group multiple roles of the same context.","source":"@site/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/provisioning/category/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/provisioning/category","slug":"/usercube/integration-guide/toolkit/xml-configuration/provisioning/category/","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/provisioning/category/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/provisioning/category/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"Automation Rule","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/provisioning/automationrule/"},"next":{"title":"Composite Role","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/provisioning/compositerole/"}}');var s=i(474848),n=i(28453);const o={},c="Category",a={},l=[{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"category",children:"Category"})}),"\n",(0,s.jsxs)(t.p,{children:["A category is a classification of Composite Roles, Single Roles or/and ",(0,s.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/provisioning/resourcetype/",children:"Resource Type"}),". It can be used to group multiple roles of the same context."]}),"\n",(0,s.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(t.p,{children:'The following example declares a new category called "Shares - Public".'}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'\n    <Category Policy="Default" Identifier="Shares - Public" DisplayName_L1="Shares - Public" />\n\n'})}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Property"}),(0,s.jsx)(t.th,{children:"Details"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Description_L1   optional"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:"Type"}),"    String   ",(0,s.jsx)(t.strong,{children:"Description"}),"   Describe this category in detail."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DisplayName_L1   required"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:"Type"}),"    String   ",(0,s.jsx)(t.strong,{children:"Description"}),"   Display name of the category in language 1 (up to 16)."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Identifier   required"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:"Type"}),"    String   ",(0,s.jsx)(t.strong,{children:"Description"}),"   Unique identifier of the category."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"IsCollapsed   default value: false"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:"Type"}),"    Boolean   ",(0,s.jsx)(t.strong,{children:"Description"}),"   Defines if the category must be collapsed by default in the permission list of a resource (View Permissions popup and roles basket)."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Parent   optional"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,s.jsx)(t.strong,{children:"Description"}),"   Represents the parent category definition."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Policy   required"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,s.jsx)(t.strong,{children:"Description"}),"   Identifier of the policy that the category is part of."]})]})]})]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);