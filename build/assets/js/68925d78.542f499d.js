"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[776318],{28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>o});var t=r(296540);const i={},s=t.createContext(i);function c(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(s.Provider,{value:n},e.children)}},838225:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"usercube/integration-guide/executables/references/generate-configuration/index","title":"Usercube-Generate-Configuration","description":"Generates from a CSV file the configuration of a connector with these entities.","source":"@site/docs/usercube_saas/usercube/integration-guide/executables/references/generate-configuration/index.md","sourceDirName":"usercube/integration-guide/executables/references/generate-configuration","slug":"/usercube/integration-guide/executables/references/generate-configuration/","permalink":"/docs/usercube_saas/usercube/integration-guide/executables/references/generate-configuration/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/executables/references/generate-configuration/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"Usercube-Fulfill-ToEasyVistaTicket","permalink":"/docs/usercube_saas/usercube/integration-guide/executables/references/fulfill-toeasyvistaticket/"},"next":{"title":"Usercube-Get-JobSteps","permalink":"/docs/usercube_saas/usercube/integration-guide/executables/references/get-jobsteps/"}}');var i=r(474848),s=r(28453);const c={},o="Usercube-Generate-Configuration",l={},d=[{value:"Overview",id:"overview",level:2},{value:"1. Simple connector",id:"1-simple-connector",level:3},{value:"2. Complex connector",id:"2-complex-connector",level:3},{value:"Examples",id:"examples",level:2},{value:"Simple connector",id:"simple-connector",level:3},{value:"Complex connector",id:"complex-connector",level:3},{value:"Arguments",id:"arguments",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"usercube-generate-configuration",children:"Usercube-Generate-Configuration"})}),"\n",(0,i.jsx)(n.p,{children:"Generates from a CSV file the configuration of a connector with these entities."}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"Two subcommands are possible for generation."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"simpleconnector"}),"\n",(0,i.jsx)(n.li,{children:"complexconnector"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The simple connector allows you to generate the configuration for a CSV file and create the connector.\nThe complex connector allows you to generate the configuration for a list of CSV files and create the connector."}),"\n",(0,i.jsx)(n.h3,{id:"1-simple-connector",children:"1. Simple connector"}),"\n",(0,i.jsx)(n.p,{children:"From a CSV file, generates the configuration of the entity representing the CSV file."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"The subcommand_____simpleconnector_____must precede the arguments."})}),"\n",(0,i.jsx)(n.h3,{id:"2-complex-connector",children:"2. Complex connector"}),"\n",(0,i.jsx)(n.p,{children:"From a list of CSV files, generates the configuration of the entities representing each file.\nThe complex connector requires as an argument an xml file containing all the CSV files to be processed as well as the primary keys of these files."}),"\n",(0,i.jsx)(n.p,{children:"Example of xml file"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'\n<Connector xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" Name="HR" DefaultEncoding="UTF-8" DefaultSeparator=";">    <File Path="C:/Usercube/Sources/rh_persons.csv" />    <File Path="C:/Usercube/Sources/rh_services.csv" />    <File Path="C:/Usercube/Sources/rh_sites.csv" />    <File Path="C:/Usercube/Sources/rh_Categories.csv" />    <PrimaryKey Path="C:/Usercube/Sources/rh_persons.csv" Header="EmplyoeId" EntityTypeName="HR_Person" />    <PrimaryKey Path="C:/Usercube/Sources/rh_services.csv" Header="Code" EntityTypeName="HR_Service" />    <PrimaryKey Path="C:/Usercube/Sources/rh_sites.csv" Header="Code" EntityTypeName="HR_Site" />    <PrimaryKey Path="C:/Usercube/Sources/rh_Categories.csv" Header="Code" EntityTypeName="HR_Category" /></Connector>\n\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Path: CSV file path."}),"\n",(0,i.jsx)(n.li,{children:"File: Name of the files to be processed."}),"\n",(0,i.jsx)(n.li,{children:"PrimaryKey: Fills in the primary key of the CSV file."}),"\n",(0,i.jsx)(n.li,{children:"Header: Column name in the CSV file."}),"\n",(0,i.jsx)(n.li,{children:"EntityTypeName: Indicates the name of the entity to be created."}),"\n",(0,i.jsx)(n.li,{children:"Name: name of the connector to be created."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"The subcommand_____complexconnector_____must precede the arguments."})}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"simple-connector",children:"Simple connector"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'\n./Usercube-Generate-Configuration.exe simpleconnector -g "C:/GeneratedFile/file" -f "C:/SourceFile/confFile.csv"\n\n'})}),"\n",(0,i.jsx)(n.h3,{id:"complex-connector",children:"Complex connector"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'\n./Usercube-Generate-Configuration.exe complexconnector -g "C:/GeneratedFile/file" "C:/SourceFile/confFile.xml"\n\n'})}),"\n",(0,i.jsx)(n.h2,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Argument Name"}),(0,i.jsx)(n.th,{children:"Details"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"--generated-file (-g)   required"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Type"}),"    String   ",(0,i.jsx)(n.strong,{children:"Description"})," Path to the generated file."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"--csv-path (-h)   optional"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Type"}),"    String   ",(0,i.jsx)(n.strong,{children:"Description"})," Path to the CSV file.   ",(0,i.jsx)(n.strong,{children:"Note:"})," used only for a simple connector."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"--encoding (-e)   optional"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Type"}),"    String   ",(0,i.jsx)(n.strong,{children:"Description"})," Encoding of the CSV file. ",(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/system.text.encoding#see-the-list-of-available-encodings",children:"See the list of available encodings"}),".   ",(0,i.jsx)(n.strong,{children:"Note:"})," used only for a simple connector."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"--csv-separator (-t)   optional"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Type"}),"    String   ",(0,i.jsx)(n.strong,{children:"Description"})," Column separator of the CSV file.   ",(0,i.jsx)(n.strong,{children:"Note:"})," used only for a simple connector."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"--generated-connector (-r)   optional"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Type"}),"    String   ",(0,i.jsx)(n.strong,{children:"Description"})," Name of the generated connector.   ",(0,i.jsx)(n.strong,{children:"Note:"})," used only for a simple connector."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"--keep-all-columns (-k)   optional"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Type"}),"    No Value   ",(0,i.jsx)(n.strong,{children:"Description"})," Keeps all the columns."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"--connector-description   optional"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Type"}),"    String   ",(0,i.jsx)(n.strong,{children:"Description"})," XML file that describes the CSV files and their primary key columns."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"---"}),(0,i.jsx)(n.td,{children:"---"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"--file-cert-thumbprint   optional"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Type"}),"    String   ",(0,i.jsx)(n.strong,{children:"Description"})," Thumbprint of the certificate when the certificate is in the store."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"--file-cert-dn   optional"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Type"}),"    String   ",(0,i.jsx)(n.strong,{children:"Description"})," Subject Distinguished Name of the certificate when the certificate is in the store."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"--file-cert-store-location   optional"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Type"}),"    String   ",(0,i.jsx)(n.strong,{children:"Description"})," Store location of the certificate when the certificate is in the store."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"--file-cert-store-name   optional"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Type"}),"    String   ",(0,i.jsx)(n.strong,{children:"Description"})," Store name of the certificate when the certificate is in the store."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"--file-cert-file   optional"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Type"}),"    String   ",(0,i.jsx)(n.strong,{children:"Description"})," File path of the certificate when the certificate is in a PFX file."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"--file-cert-password   optional"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Type"}),"    String   ",(0,i.jsx)(n.strong,{children:"Description"})," Password of the certificate when the certificate is in a PFX file."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"---"}),(0,i.jsx)(n.td,{children:"---"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"--log-level   optional"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Type"}),"    LogLevel   ",(0,i.jsx)(n.strong,{children:"Description"})," Level of log information among: ",(0,i.jsx)(n.code,{children:"Verbose"}),"; ",(0,i.jsx)(n.code,{children:"Debug"}),"; ",(0,i.jsx)(n.code,{children:"Information"}),"; ",(0,i.jsx)(n.code,{children:"Warning"}),"; ",(0,i.jsx)(n.code,{children:"Error"}),"; ",(0,i.jsx)(n.code,{children:"Fatal"}),"."]})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);