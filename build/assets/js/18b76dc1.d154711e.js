"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[662027],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(296540);const r={},o=i.createContext(r);function s(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:t},e.children)}},973814:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/entitytypes/workflows/createupdatedeletemenus/index","title":"Create Update Delete Menus","description":"Creates creation, update and delete menus for an entity. Read these menuItems again on the main menuItems of the entity with the following naming rule:","source":"@site/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/entitytypes/workflows/createupdatedeletemenus/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/entitytypes/workflows/createupdatedeletemenus","slug":"/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/entitytypes/workflows/createupdatedeletemenus/","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/entitytypes/workflows/createupdatedeletemenus/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/entitytypes/workflows/createupdatedeletemenus/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"Workflows","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/entitytypes/workflows/"},"next":{"title":"Create Update Delete Workflows","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/entitytypes/workflows/createupdatedeleteworkflows/"}}');var r=n(474848),o=n(28453);const s={},a="Create Update Delete Menus",d={},l=[{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2},{value:"Generated XML",id:"generated-xml",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"create-update-delete-menus",children:"Create Update Delete Menus"})}),"\n",(0,r.jsx)(t.p,{children:'Creates creation, update and delete menus for an entity. Read these menuItems again on the main menuItems of the entity with the following naming rule:\n"Search_" + Identifier of entity type.\nif this menuItem does not exist, create it in the database.'}),"\n",(0,r.jsx)(t.p,{children:"The workflows for adding, deleting and modifying the entity must be created beforehand. For this scaffolding, the names of these 3 workflows must comply with the following standard:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:'entity type identifier + "_Create"'}),"\n",(0,r.jsx)(t.li,{children:'entity type identifier + "_Update"'}),"\n",(0,r.jsx)(t.li,{children:'entity type identifier + "_Delete"'}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'\n  <CreateUpdateDeleteMenus EntityType="Directory_Country"/>\n\n'})}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Details"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"EntityType   required"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Type"}),"    String   ",(0,r.jsx)(t.strong,{children:"Description"}),"   Identifier of the entity type involved in the scaffolding."]})]})})]}),"\n",(0,r.jsx)(t.h2,{id:"generated-xml",children:"Generated XML"}),"\n",(0,r.jsx)(t.p,{children:"Our example generates the following configuration:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'\n<MenuItem Identifier="Search_Directory_Country" DisplayName_L1="Country" DisplayName_L2="Pays">  <MenuItem Identifier="Search_Directory_Country_Create" DisplayName_L1="New" DisplayName_L2="Cr\ufffder" IconCode="Add" Workflow="Directory_Country_Create" /></MenuItem><MenuItem Identifier="View_Directory_Country" DisplayName_L1="Country" DisplayName_L2="Pays">  <MenuItem Identifier="View_Directory_Country_Update" DisplayName_L1="Update" DisplayName_L2="Modifier" IconCode="Edit" Workflow="Directory_Country_Update" />  <MenuItem Identifier="View_Directory_Country_Delete" DisplayName_L1="Delete" DisplayName_L2="Supprimer" IconCode="Cancel" Workflow="Directory_Country_Delete" /></MenuItem>\n\n'})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);