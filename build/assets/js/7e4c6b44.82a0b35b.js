"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[485012],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var r=t(296540);const i={},a=r.createContext(i);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(a.Provider,{value:n},e.children)}},712211:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"policypak/leastprivilege/securerun/overview","title":"Quick Start - Using SecureRun\u2122 to Block Threats and Unknown Software","description":"NOTE: For an overview of how to block threats and unknown software like malware and similar applicates, see the Using Least Privilege Manager\'s SecureRun Feature video.","source":"@site/docs/policypak/policypak/leastprivilege/securerun/overview.md","sourceDirName":"policypak/leastprivilege/securerun","slug":"/policypak/leastprivilege/securerun/overview","permalink":"/docs/policypak/policypak/leastprivilege/securerun/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/policypak/policypak/leastprivilege/securerun/overview.md","tags":[],"version":"current","frontMatter":{},"sidebar":"policyPakSidebar","previous":{"title":"How to install and run MYKI Password Manager as regular user when SecureRun is enabled","permalink":"/docs/policypak/policypak/leastprivilege/securerun/mykipasswordmanager"},"next":{"title":"How do I setup SecureRun when there are so many variables and still ensure my rules work no matter what version of the software I have I installed?","permalink":"/docs/policypak/policypak/leastprivilege/securerun/setup"}}');var i=t(474848),a=t(28453);const s={},o="Quick Start - Using SecureRun\u2122 to Block Threats and Unknown Software",l={},c=[{value:"Understanding SecureRun",id:"understanding-securerun",level:2}];function p(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"quick-start---using-securerun-to-block-threats-and-unknown-software",children:"Quick Start - Using SecureRun\u2122 to Block Threats and Unknown Software"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"NOTE:"})," For an overview of how to block threats and unknown software like malware and similar applicates, see the ",(0,i.jsx)(n.a,{href:"/docs/policypak/policypak/video/leastprivilege/securerun/feature",children:"Using Least Privilege Manager's SecureRun Feature"})," video."]}),"\n",(0,i.jsx)(n.p,{children:"In the previous section, we established that users with Standard rights and admin rights can end up downloading both safe portable applications or unsafe malware applications. In addition, both Admins and Standard Users can download MSI applications, even if they wish to install them later. To avoid having unsafe applications being downloaded and used, Endpoint Policy Manager can ensure that applications that were not properly installed by the admin, or in-house software deployment tool will not run without the admin's approval. In this Quick Start example, all unknown applications and MSI applications will be blocked, while one specific application will be allowed to run (with standard, not elevated, rights)."}),"\n",(0,i.jsx)(n.h2,{id:"understanding-securerun",children:"Understanding SecureRun"}),"\n",(0,i.jsx)(n.p,{children:"Endpoint Policy ManagerLeast Privilege Manager can block all items that are not properly installed by the admin with the Endpoint Policy Manager SecureRun\u2122 policy. To see how this works, let's first create a new SecureRun\u2122 policy in the GPO."}),"\n",(0,i.jsx)(n.p,{children:"![A screenshot of a computer"}),"\n",(0,i.jsx)(n.p,{children:"Description automatically generated](/img/product_docs/policypak/policypak/leastprivilege/securerun/quick_start_using_securerun.webp)"}),"\n",(0,i.jsxs)(n.p,{children:["This will result in a new SecureRun\u2122 policy editor, as displayed here. To turn on SecureRun click ",(0,i.jsx)(n.strong,{children:"Enable"})," and then, if desired, , change the messaging from Default to Customized (or Silently.)"]}),"\n",(0,i.jsx)(n.p,{children:"![A screenshot of a computer"}),"\n",(0,i.jsx)(n.p,{children:"Description automatically generated](/img/product_docs/policypak/policypak/leastprivilege/securerun/quick_start_using_securerun_1.webp)"}),"\n",(0,i.jsx)(n.p,{children:"In the SecureRun\u2122 Members list, you can review who and what has been added, including the defaults members:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Local computer administrator"}),"\n",(0,i.jsx)(n.li,{children:"NT SERVICE\\TrustedInstaller"}),"\n",(0,i.jsx)(n.li,{children:"NT AUTHORITY\\SYSTEM"}),"\n",(0,i.jsx)(n.li,{children:"BUILTIN\\Administrators"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The members on this list are the people and system processes that usually install software. For that reason, no regular users or groups are listed here because they do not normally install software."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"NOTE:"})," Add system processes or accounts to the SecureRun Members list that properly install software, such as Microsoft Endpoint Manager (SCCM and Intune), etc., to enable the software to deliver applications without being prevented."]}),"\n",(0,i.jsx)(n.p,{children:"When SecureRun\u2122 is on, Endpoint Policy ManagerLeast Privilege Manager checks to see who owns the file executable, MSI file, script, or Java JAR file. When users download files off the Internet or copy them from a USB flash drive, they own the file, and since they aren't on the SecureRun\u2122 Members list, Endpoint Policy Manager Least Privilege Manager will block all applications that they have installed."}),"\n",(0,i.jsxs)(n.p,{children:["In the SecureRun\u2122 policy editor, click ",(0,i.jsx)(n.strong,{children:"Ok"}),". You can then see that the SecureRun\u2122 policy is enabled and is checking for file ownership (aka \u201cTrusted\u201d), as shown here."]}),"\n",(0,i.jsx)(n.p,{children:"![A screenshot of a computer"}),"\n",(0,i.jsx)(n.p,{children:"Description automatically generated](/img/product_docs/policypak/policypak/leastprivilege/securerun/quick_start_using_securerun_2.webp)"}),"\n",(0,i.jsx)(n.p,{children:"At the endpoint, run GPupdate or log on as a user who will receive the policy. The result is that all unknown applications are blocked (like previously downloaded Notepad2), and all properly installed applications are allowed."}),"\n",(0,i.jsx)(n.p,{children:"![A screenshot of a computer"}),"\n",(0,i.jsx)(n.p,{children:"Description automatically generated](/img/product_docs/policypak/policypak/leastprivilege/securerun/quick_start_using_securerun_3.webp)"}),"\n",(0,i.jsx)(n.p,{children:"Additionally, MSI files that attempt to launch are also subjected to Endpoint Policy Manager SecureRun\u2122. If an application already has an Allow rule in place (similar to what we saw earlier when we enabled SkypeSetup.MSI to run via a Hash rule), then it will continue to launch. But MSI installers that don't have an Allow rule in place will be prevented from running, as show here."}),"\n",(0,i.jsx)(n.p,{children:"![A screenshot of a computer"}),"\n",(0,i.jsx)(n.p,{children:"Description automatically generated](/img/product_docs/policypak/policypak/leastprivilege/securerun/quick_start_using_securerun_4.webp)"}),"\n",(0,i.jsx)(n.p,{children:"This works because Endpoint Policy Manager Least Privilege Manager is enforcing the SecureRun\u2122 Members list. If we look at who owns the file for the properly installed application, we can see the owner is SYSTEM. If we look at who owns the file for the unknown application downloaded from the Internet, we can see the owner is EastSalesUser1."}),"\n",(0,i.jsx)(n.p,{children:"![A screenshot of a computer"}),"\n",(0,i.jsx)(n.p,{children:"Description automatically generated](/img/product_docs/policypak/policypak/leastprivilege/securerun/quick_start_using_securerun_5.webp)"}),"\n",(0,i.jsx)(n.p,{children:"If you review the list of users allowed to run applications, you will notice that EastSalesUser1 is not on the list and, therefore, is not permitted to run Untrusted applications."}),"\n",(0,i.jsx)(n.p,{children:"![A screenshot of a computer"}),"\n",(0,i.jsx)(n.p,{children:"Description automatically generated](/img/product_docs/policypak/policypak/leastprivilege/securerun/quick_start_using_securerun_6.webp)"}),"\n",(0,i.jsxs)(n.p,{children:["If you decide you want to enable an application, such as Notepad2, to run, create a new Executable rule (Path, Hash, Signature, or File) as shown in the previous section. This time, select ",(0,i.jsx)(n.strong,{children:"Allow and log"}),". This will run the application with Standard User rights."]}),"\n",(0,i.jsx)(n.p,{children:"![A screenshot of a computer"}),"\n",(0,i.jsx)(n.p,{children:"Description automatically generated](/img/product_docs/policypak/policypak/leastprivilege/securerun/quick_start_using_securerun_7.webp)"}),"\n",(0,i.jsx)(n.p,{children:"The result can be seen in the MMC list view."}),"\n",(0,i.jsx)(n.p,{children:"![A screenshot of a computer"}),"\n",(0,i.jsx)(n.p,{children:"Description automatically generated](/img/product_docs/policypak/policypak/leastprivilege/securerun/quick_start_using_securerun_8.webp)"}),"\n",(0,i.jsx)(n.p,{children:"As a test, run GPupdate on the endpoint, and then run Notepad2, which will run with Standard User rights and bypass SecureRun\u2122 as seen here."}),"\n",(0,i.jsx)(n.p,{children:"![A screenshot of a computer"}),"\n",(0,i.jsx)(n.p,{children:"Description automatically generated](/img/product_docs/policypak/policypak/leastprivilege/securerun/quick_start_using_securerun_9.webp)"}),"\n",(0,i.jsx)(n.p,{children:"To recap, Endpoint Policy ManagerLeast Privilege Manager SecureRun\u2122 operates under the following criteria:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The Endpoint Policy Manager Least Privilege Manager SecureRun\u2122 policy checks every executable and MSI that the user attempts to run."}),"\n",(0,i.jsx)(n.li,{children:"If the user isn\u2019t on the SecureRun\u2122 Members list, they are not permitted to run it."}),"\n",(0,i.jsx)(n.li,{children:"Only executable applications, scripts, Java JAR files, and MSI files that have file owners on the SecureRun\u2122 Members list are allowed to run."}),"\n",(0,i.jsxs)(n.li,{children:["If an application (or other type) has an ",(0,i.jsx)(n.strong,{children:"Allow and Log"})," rule enabling its use, it is permitted."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The result is that Endpoint Policy Manager SecureRun\u2122 blocks any executable or MSI that the user downloads and tries to run but continues to let properly installed applications run."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"NOTE:"})," An additional way to use Endpoint Policy Manager SecureRum\u2122 is to also trap for anything that is unsigned. See the ",(0,i.jsx)(n.a,{href:"/docs/policypak/policypak/video/leastprivilege/securerun/preventunsigned",children:"Least Privilege Manager: Block All Unsigned with SecureRun"})," video for a demonstration."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"NOTE:"})," Remember, all Endpoint Policy Manager Least Privilege Manager rules, including SecureRun, may be used with an MDM service, or your own management system like PDQ deploy For more information on this topic, please see the ",(0,i.jsx)(n.a,{href:"/docs/policypak/policypak/video/leastprivilege/integration/pdqdeployblockmalware",children:"Blocking Malware with Endpoint Policy Manager and PDQ Deploy"})," video demonstration."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);