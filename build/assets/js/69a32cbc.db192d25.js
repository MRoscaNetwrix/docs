"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[32916],{28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var i=t(296540);const r={},o=i.createContext(r);function l(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(o.Provider,{value:n},e.children)}},406229:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"groupid/managementshell/general/invokereplication","title":"Invoke-Replication","description":"The Invoke-Replication commandlet starts replication process for all the identity stores or a specific identity store.","source":"@site/docs/groupid/groupid/managementshell/general/invokereplication.md","sourceDirName":"groupid/managementshell/general","slug":"/groupid/managementshell/general/invokereplication","permalink":"/docs/groupid/groupid/managementshell/general/invokereplication","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/groupid/groupid/managementshell/general/invokereplication.md","tags":[],"version":"current","frontMatter":{},"sidebar":"groupIdSidebar","previous":{"title":"Get-TombStoneObject","permalink":"/docs/groupid/groupid/managementshell/general/gettombstoneobject"},"next":{"title":"New-Container","permalink":"/docs/groupid/groupid/managementshell/general/newcontainer"}}');var r=t(474848),o=t(28453);const l={},a="Invoke-Replication",s={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Required Parameter",id:"required-parameter",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"invoke-replication",children:"Invoke-Replication"})}),"\n",(0,r.jsx)(n.p,{children:"The Invoke-Replication commandlet starts replication process for all the identity stores or a specific identity store."}),"\n",(0,r.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Invoke-Replication  \n[-IdentityStoreId <int>]  \n[-DeletedObjects]  \n[-RestoreReplication]  \n[-SecurityToken <CustomClaimsPrincipal>]  \n[-Credential <pscredential>]  \n[<CommonParameters>]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"required-parameter",children:"Required Parameter"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example 1:"}),"\n",(0,r.jsx)(n.p,{children:"The following command replicate identity store with ID 1."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Invoke-Replication -IdentitystoreId 1\n"})}),"\n",(0,r.jsx)(n.p,{children:"Example 2:"}),"\n",(0,r.jsx)(n.p,{children:"The following command replicate deleted objects for identity store with ID 1."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Invoke-Replication -IdentitystoreId 1 -DeletedObjects\n"})}),"\n",(0,r.jsx)(n.p,{children:"Example 3:"}),"\n",(0,r.jsx)(n.p,{children:"The following command will start restoration of replication for identity store with ID 1."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Invoke-Replication -IdentitystoreId 1 -RestoreReplication\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);