"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[219019],{28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>c});var n=i(296540);const o={},s=n.createContext(o);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(s.Provider,{value:t},e.children)}},375756:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"usercube/integration-guide/notifications/how-tos/customize-native-notification/index","title":"Customize a Native Notification","description":"This guide shows how to set a template other than the default one for native notifications.","source":"@site/docs/usercube/usercube/integration-guide/notifications/how-tos/customize-native-notification/index.md","sourceDirName":"usercube/integration-guide/notifications/how-tos/customize-native-notification","slug":"/usercube/integration-guide/notifications/how-tos/customize-native-notification/","permalink":"/docs/usercube/usercube/integration-guide/notifications/how-tos/customize-native-notification/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube/usercube/integration-guide/notifications/how-tos/customize-native-notification/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSidebar","previous":{"title":"Custom Notifications","permalink":"/docs/usercube/usercube/integration-guide/notifications/custom/"},"next":{"title":"Set Notifications\' Languages","permalink":"/docs/usercube/usercube/integration-guide/notifications/how-tos/set-language/"}}');var o=i(474848),s=i(28453);const a={},c="Customize a Native Notification",r={},d=[{value:"Overview",id:"overview",level:2},{value:"Customize a Native Notification",id:"customize-a-native-notification-1",level:2}];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"customize-a-native-notification",children:"Customize a Native Notification"})}),"\n",(0,o.jsx)(t.p,{children:"This guide shows how to set a template other than the default one for native notifications."}),"\n",(0,o.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsxs)(t.p,{children:["Identity Manager natively sends notifications for usual cases. See the ",(0,o.jsx)(t.a,{href:"/docs/usercube/usercube/integration-guide/notifications/native/",children:"\nNative Notifications\n"})," topic for additional information."]}),"\n",(0,o.jsxs)(t.p,{children:["These native notifications are based on cshtml templates available inside the ",(0,o.jsx)(t.code,{children:"Runtime"})," folder. If the provided templates do not meet your exact needs, then they can be replaced by personalized templates."]}),"\n",(0,o.jsx)(t.h2,{id:"customize-a-native-notification-1",children:"Customize a Native Notification"}),"\n",(0,o.jsx)(t.p,{children:"Customize a native notification by proceeding as follows:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["Among the ",(0,o.jsx)(t.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/notifications/notificationtemplate/",children:"Notification Template"}),", get the identifier of the notification whose templates are to be replaced."]}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:["For example, to customize the notification for one-way password reset: ",(0,o.jsx)(t.code,{children:"OneWayPasswordReset"}),"."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["In ",(0,o.jsx)(t.code,{children:"Runtime/NotificationTemplates"}),", copy to the configuration folder the cshtml template(s) associated to the notification that need to be overridden."]}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:["For example, we can copy the template for the email's body but keep the provided template for the subject. Then we have: ",(0,o.jsx)(t.code,{children:"Conf/Templates/MyOneWayPasswordReset.cshtml"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["Let's say that we also need to customize the email's subject in French which is the language 2: ",(0,o.jsx)(t.code,{children:"Conf/Templates/MyOneWayPasswordReset_Subject.fr.cshtml"})]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Customize the template(s) previously copied to the configuration folder."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["Configure an XML element ",(0,o.jsx)(t.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/notifications/notificationtemplate/",children:"Notification Template"})," with the identifier collected at step 1, and the relative path(s) to the customized template(s)."]}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsx)(t.p,{children:"For example:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'\n<NotificationTemplate Identifier="OneWayPasswordReset" BodyTemplate_L1="./Templates/MyOneWayPasswordReset.cshtml" SubjectTemplate_L2="./Templates/MyOneWayPasswordReset_Subject.fr.cshtml" />\n\n'})}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);