"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[361826],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(296540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}},615246:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/invokesqlcommandtask/index","title":"Invoke Sql Command Task","description":"Takes as input an SQL file or an SQL command to output several CSV files that can be used by the collection.","source":"@site/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/invokesqlcommandtask/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/invokesqlcommandtask","slug":"/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/invokesqlcommandtask/","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/invokesqlcommandtask/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/invokesqlcommandtask/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"Invoke Expression Task","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/invokeexpressiontask/"},"next":{"title":"Maintain Indexes Task","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/maintainindexestask/"}}');var i=n(474848),r=n(28453);const o={},a="Invoke Sql Command Task",d={},c=[{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2}];function l(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"invoke-sql-command-task",children:"Invoke Sql Command Task"})}),"\n",(0,i.jsx)(t.p,{children:"Takes as input an SQL file or an SQL command to output several CSV files that can be used by the collection."}),"\n",(0,i.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n<InvokeSqlCommandTask Identifier="SQL_Command" DisplayName_L1="SQL Command" SQLCommand="SELECT id FROM uj_jobs" Agent="Local" OpenIdClient="Job" DatabaseIdentifier="UsercubeDemo" />\n\n'})}),"\n",(0,i.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Property"}),(0,i.jsx)(t.th,{children:"Details"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"DisplayName_L1   required"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Display name of the task in language 1 (up to 16)."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Agent   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Identifier of the agent on which the job will be launched.   ",(0,i.jsx)(t.strong,{children:"Note:"})," when not specified, the task is to be launched on the server.   ",(0,i.jsx)(t.strong,{children:"Warning:"})," all jobs containing the task must be launched on the same agent or on the server."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ContinueOnError   default value: false"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    Boolean   ",(0,i.jsx)(t.strong,{children:"Description"}),"   ",(0,i.jsx)(t.code,{children:"true"})," if the execution of the Task returning an error should not stop the job machine state."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"DatabaseIdentifier   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Identifier of the Database to connect to"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Encoding   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Encoding for the output files. ",(0,i.jsx)(t.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/system.text.encoding#see-the-list-of-available-encodings",children:"See the list of available encodings"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Identifier   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Unique identifier of the task."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"IsNotAQuery   default value: false"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    Boolean   ",(0,i.jsx)(t.strong,{children:"Description"}),"   To know if the SQL command is a query or not"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"IsolationLevel   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Specifies the transaction locking behavior for the database connection."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"OpenIdClient   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Connection client for the task."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"OutputPath   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Path to save file.   ",(0,i.jsx)(t.em,{children:"Alternative definition"}),": If ",(0,i.jsx)(t.em,{children:"TaskType"})," is:   - ProvisioningPolicyTask: Path to save the LDIF file,   - CollectorTask: Path of the working directory,   - CollectorChangesTask: Path of the working directory,   - CollectorADDirSyncTask: Path of the working directory,   - ProvisionerDownloadTask: Path of the destination directory,"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Provider   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Database provider"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ProviderAssemblyQualifiedName   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Database provider assembly qualified name"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"SQLCommand   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   SQL Command to execute"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"SQLInputFile   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Path of the SQL file"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Timeout   default value: 0"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    Int32   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Specify the timeout if the query need more 30 sec"]})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);