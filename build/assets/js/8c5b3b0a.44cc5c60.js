"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[815555],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var r=n(296540);const i={},s=r.createContext(i);function o(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:t},e.children)}},609353:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"groupid/portal/group/dynasty/dynastyoptionsorggeocus","title":"Dynasty Options page","description":"Dynasties create Smart Groups for each distinct value of each attribute listed in the Attributes area. Depending on the Dynasty template selected, the Attributes area displays the default attributes for the template;","source":"@site/docs/groupid/groupid/portal/group/dynasty/dynastyoptionsorggeocus.md","sourceDirName":"groupid/portal/group/dynasty","slug":"/groupid/portal/group/dynasty/dynastyoptionsorggeocus","permalink":"/docs/groupid/groupid/portal/group/dynasty/dynastyoptionsorggeocus","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/groupid/groupid/portal/group/dynasty/dynastyoptionsorggeocus.md","tags":[],"version":"current","frontMatter":{},"sidebar":"groupIdSidebar","previous":{"title":"Dynasty Options page (Managerial Dynasty)","permalink":"/docs/groupid/groupid/portal/group/dynasty/dynastyoptionsmanagerial"},"next":{"title":"Dynasty","permalink":"/docs/groupid/groupid/portal/group/dynasty/overview"}}');var i=n(474848),s=n(28453);const o={},a="Dynasty Options page",l={},c=[];function d(e){const t={em:"em",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"dynasty-options-page",children:"Dynasty Options page"})}),"\n",(0,i.jsxs)(t.p,{children:["Dynasties create Smart Groups for each distinct value of each attribute listed in the ",(0,i.jsx)(t.strong,{children:"Attributes"})," area. Depending on the Dynasty template selected, the ",(0,i.jsx)(t.strong,{children:"Attributes"})," area displays the default attributes for the template;\nhowever, you can add and remove attributes. For the Custom template, no attribute is displayed."]}),"\n",(0,i.jsx)(t.p,{children:"For example, if you specify the Country, State, and City attributes, Directory Manager creates a group for every distinct country value, then for each state within a country, and finally for each city in a state."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Click ",(0,i.jsx)(t.strong,{children:"Add"})," to specify an attribute."]}),"\n",(0,i.jsxs)(t.li,{children:["Click ",(0,i.jsx)(t.strong,{children:"Edit"})," to edit the selected attribute options."]}),"\n",(0,i.jsxs)(t.li,{children:["Click ",(0,i.jsx)(t.strong,{children:"Remove"})," to remove the selected attribute."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"On the Dynasty Options page:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["(Optional) Click ",(0,i.jsx)(t.strong,{children:"Add"})," to add more attributes to those shown in the ",(0,i.jsx)(t.strong,{children:"Attributes"})," list."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"Add Attributes"})," dialog box is displayed."]}),"\n",(0,i.jsx)(t.p,{children:"This filter is used to strip out values from Dynasties by allowing you to collapse several values into one."}),"\n",(0,i.jsx)(t.p,{children:"An example is populating the Office field with the building/office number, thus conveniently storing two items of related data in the same field. Now, suppose you need a distribution list for each building. If the building name was in its own\nfield (custom attribute 1), you could create a Dynasty that groups by the custom attribute 1 field and Directory Manager would then create a group for each building value."}),"\n",(0,i.jsx)(t.p,{children:"Attribute value:"}),"\n",(0,i.jsx)(t.p,{children:"Custom Attribute 1 = MacArthur Plaza"}),"\n",(0,i.jsx)(t.p,{children:"Sample groups created by Directory Manager:"}),"\n",(0,i.jsx)(t.p,{children:"Everyone in MacArthur Plaza"}),"\n",(0,i.jsx)(t.p,{children:"However, if you were to create a Dynasty that groups by the Office field (which contains both the building name and office number), Directory Manager will create a group for each distinct building/office value. This strategy gives you a group for every office number, rather than for each building."}),"\n",(0,i.jsx)(t.p,{children:"Attribute value:"}),"\n",(0,i.jsx)(t.p,{children:"Office = MacArthur Plaza/1256C"}),"\n",(0,i.jsx)(t.p,{children:"Sample groups created by Directory Manager:"}),"\n",(0,i.jsx)(t.p,{children:"Everyone in MacArthur Plaza/1256C"}),"\n",(0,i.jsx)(t.p,{children:"The filter option solves this problem by enabling you to filter out unwanted permutations of values."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["In the ",(0,i.jsx)(t.strong,{children:"Group items by"})," list, type or select the field to use for expanding the Dynasty."]}),"\n",(0,i.jsx)(t.p,{children:"Directory Manager creates a child group for each unique value of this field."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"Child container"})," box displays the container where new child groups will be created. If this setting is blank, Directory Manager creates child groups in the same container as the parent Dynasty."]}),"\n",(0,i.jsxs)(t.p,{children:["To change the container, click ",(0,i.jsx)(t.strong,{children:"Browse"})," and select a new container."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["From the ",(0,i.jsx)(t.strong,{children:"Filter"})," drop-down list, select an additional group-by filter for greater control over the values used to create children."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"None"}),": Do not apply any filter. Simply create a group for each distinct value of the attribute selected in the ",(0,i.jsx)(t.strong,{children:"Group items by"})," list. For example, distinct values for the \u2018department\u2019 attribute might be ",(0,i.jsx)(t.em,{children:"Engineering"}),",\n",(0,i.jsx)(t.em,{children:"Marketing"}),", and ",(0,i.jsx)(t.em,{children:"Finance"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Left"}),": Select a portion of the group-by attribute starting from the left for the number of characters specified in the ",(0,i.jsx)(t.strong,{children:"Value"})," box, and create a group for each distinct value of the portion of the attribute\nselected."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Right"}),": Select a portion of the group-by attribute, starting from the right for the number of characters specified in the ",(0,i.jsx)(t.strong,{children:"Value"})," box, and create a group for each distinct value of the portion of the attribute\nselected."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Regular Expression"}),": A group is created for each distinct value of the regular expression specified in the ",(0,i.jsx)(t.strong,{children:"Value"})," box."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Each group-by level can have a separator. In the ",(0,i.jsx)(t.strong,{children:"Separator"})," box, enter a separator character to use in both the display name and alias of child groups to separate the group-by values."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Click ",(0,i.jsx)(t.strong,{children:"OK"})," to close the ",(0,i.jsx)(t.strong,{children:"Add Attributes"})," dialog box."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Click ",(0,i.jsx)(t.strong,{children:"Next"}),"."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);