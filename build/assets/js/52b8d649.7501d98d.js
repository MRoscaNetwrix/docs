"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[297883],{28453:(e,r,s)=>{s.d(r,{R:()=>o,x:()=>c});var t=s(296540);const n={},i=t.createContext(n);function o(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(i.Provider,{value:r},e.children)}},350319:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"access/informationcenter/resourceaudit/group/members","title":"Members Report","description":"The Members report for a group object provides a list of all trustees, users, and groups with membership in the audited group. This report includes a Membership Paths table.","source":"@site/docs/accessinformationcenter/access/informationcenter/resourceaudit/group/members.md","sourceDirName":"access/informationcenter/resourceaudit/group","slug":"/access/informationcenter/resourceaudit/group/members","permalink":"/docs/accessinformationcenter/access/informationcenter/resourceaudit/group/members","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/accessinformationcenter/access/informationcenter/resourceaudit/group/members.md","tags":[],"version":"current","frontMatter":{},"sidebar":"accessInformationCenterSidebar","previous":{"title":"Member Of Report","permalink":"/docs/accessinformationcenter/access/informationcenter/resourceaudit/group/memberof"},"next":{"title":"Members Report for a Built-in Group","permalink":"/docs/accessinformationcenter/access/informationcenter/resourceaudit/group/membersbuiltin"}}');var n=s(474848),i=s(28453);const o={},c="Members Report",a={},d=[];function l(e){const r={a:"a",em:"em",h1:"h1",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"members-report",children:"Members Report"})}),"\n",(0,n.jsx)(r.p,{children:"The Members report for a group object provides a list of all trustees, users, and groups with membership in the audited group. This report includes a Membership Paths table."}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.em,{children:"Remember,"})," the Members report for a built-in group contains different information to the other group types. See the ",(0,n.jsx)(r.a,{href:"/docs/accessinformationcenter/access/informationcenter/resourceaudit/group/membersbuiltin",children:"Members Report for a Built-in Group"}),"\xa0topic for additional information."]}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"Members report",src:s(567483).A+"",width:"1461",height:"777"})}),"\n",(0,n.jsx)(r.p,{children:"This report is comprised of the following columns:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Trustee Name \u2013 Owner of the trustee account"}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Trustee Account \u2013 Active Directory account associated with the trustee"}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Domain Name \u2013 Name of the domain"}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Department \u2013 Department to which the trustee account belongs"}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Title \u2013 Trustee\u2019s title as read from Active Directory"}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Mail \u2013 Trustee\u2019s email account as read from Active Directory"}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"EmployeeId \u2013 Corporate ID for the employee as read from Active Directory"}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Description \u2013 Description of the trustee object as read from Active Directory"}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"DistinguishedName \u2013 Distinguished name for the trustee account"}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"ObjectSid \u2013 Security ID of the object"}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Disabled \u2013 True or False if trustee account is disabled"}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Last Logon \u2013 Date and timestamp from last logon as tracked by Active Directory"}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Type \u2013 Type of membership the selected trustee has to the audited group"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Direct \u2013 Trustee is specifically assigned to this group"}),"\n",(0,n.jsx)(r.li,{children:"Nested \u2013 Trustee is a member of a group which has membership in this group"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Nested Level \u2013 Count of groups nested between the audited group and the selected trustee\u2019s direct membership"}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Manager Name \u2013 Name of manager for the trustee from Active Directory"}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Manager Logon \u2013 Trustee account for the trustee\u2019s manager"}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Manager Department \u2013 Department of the trustee\u2019s manager"}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Manager Mail \u2013 Email address for the trustee\u2019s manager"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"If the selected trustee is a group, the Group Membership pane displays the group membership, including nested groups."}),"\n",(0,n.jsx)(r.p,{children:"There is one table at the bottom displaying Membership Paths for the select group. It contains all of the ways the audited group has been granted membership to the selected group."}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Type \u2013 Type of membership the selected trustee has to the audited groupType \u2013 Type of membership the selected trustee has to the audited group"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Direct \u2013 Trustee is specifically assigned to this group"}),"\n",(0,n.jsx)(r.li,{children:"Nested \u2013 Trustee is a member of a group which has membership in this group"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Membership Path \u2013 Displays location for the selected trustee\u2019s membership to the audited group, starts with audited group and ends with trustee"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"For Direct Membership \u2013 Path is [Group Name] > [Trustee Name]"}),"\n",(0,n.jsx)(r.li,{children:"For Nested Membership \u2013 Path is [Group Name] > [Name of Nested Group] > [Trustee Name]"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Nested Level \u2013 Count of groups nested between the audited group and the selected trustee\u2019s direct membership"}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},567483:(e,r,s)=>{s.d(r,{A:()=>t});const t=s.p+"assets/images/members-a9d9664060aa7bdc2bf760add026adb7.webp"}}]);