"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[930384],{28453:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>r});var a=o(296540);const i={},n=a.createContext(i);function s(e){const t=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(n.Provider,{value:t},e.children)}},364954:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"policypak/video/leastprivilege/bestpractices/appblock","title":"Elevate apps as standard user, BLOCK other Admins","description":"If you\'re in charge of your domain, you can block local and other domain admins from installing applications you want to be elevated via Netwrix Endpoint Policy Manager (formerly PolicyPak) Least Priv manager. See the video for details.","source":"@site/docs/policypak/policypak/video/leastprivilege/bestpractices/appblock.md","sourceDirName":"policypak/video/leastprivilege/bestpractices","slug":"/policypak/video/leastprivilege/bestpractices/appblock","permalink":"/docs/policypak/policypak/video/leastprivilege/bestpractices/appblock","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/policypak/policypak/video/leastprivilege/bestpractices/appblock.md","tags":[],"version":"current","frontMatter":{},"sidebar":"policyPakSidebar","previous":{"title":"Auto Rules Generator Tool (with SecureRun)","permalink":"/docs/policypak/policypak/video/leastprivilege/autorulesgeneratortool"},"next":{"title":"PPLPM Elevating UWP Applications","permalink":"/docs/policypak/policypak/video/leastprivilege/bestpractices/elevateuwp"}}');var i=o(474848),n=o(28453);const s={},r="Elevate apps as standard user, BLOCK other Admins",l={},d=[];function c(e){const t={code:"code",h1:"h1",header:"header",p:"p",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"elevate-apps-as-standard-user-block-other-admins",children:"Elevate apps as standard user, BLOCK other Admins"})}),"\n",(0,i.jsx)(t.p,{children:"If you're in charge of your domain, you can block local and other domain admins from installing applications you want to be elevated via Netwrix Endpoint Policy Manager (formerly PolicyPak) Least Priv manager. See the video for details."}),"\n",(0,i.jsx)(t.p,{children:'Hi. This is Jeremy Moskowitz. In this video, I\'m going to show you how you can enable your users to double click on items to install them in their context but elevated but prevent other admins like local admins or domain admins to right click over these applications and select "Run as administrator."'}),"\n",(0,i.jsx)(t.p,{children:"I've got nothing set up here. Just to prove a point, as a standard user if I just double click this application, I get prompted for credentials. And if I were to right click over here and select \"Run as administrator,\" I'm going to get prompted for credentials."}),"\n",(0,i.jsx)(t.p,{children:"What we want \xa0to try to do is to enable a rule that will allow the standard user to elevate the application but block lower admins. They can be local admins or even other domain admins."}),"\n",(0,i.jsx)(t.p,{children:"In most of my videos, you see me creating my Group Policy Objects and editing them from my GPMC management station that is a domain controller. In this video in order to do this work, you have to do it from a machine that is running Windows 10. I'll explain why that is in a little bit."}),"\n",(0,i.jsx)(t.p,{children:'I already have the Group Policy Object up and running that I want to affect my machines. You can see I have this on the computer side, and I\'m going to head down to the "Least Privilege Manager" section.'}),"\n",(0,i.jsx)(t.p,{children:"For this example, I'm going to be using a \"New Executable Policy\" to do an installation of PowerPoint Viewer, but this could work for anything. If you have a script policy with a command, if you have a Windows installer policy with an MSI, or whatever, this will work for everything. But I'm going to do it with an executable policy."}),"\n",(0,i.jsx)(t.p,{children:'The first thing you want to do is create a rule that\'s going to block the item. I\'m going to "Use simple rule." You could "Use combo rule" which is generally our better advice, but I\'m going to "Use simple rule" here. I\'m going to pick the "Hash" of the application that I want.'}),"\n",(0,i.jsx)(t.p,{children:"The first thing you need to do is to block the thing you want, so I'm going to block \"PowerPointViewer.\" Now as you're going along here and you click \"Deny execution,\" on the very last page we have a thing that's called \"User and System processes.\" When you do this, it's going to deny it not just for the user but it also for the System processes like the admin or the System. So now you're literally denying absolutely everybody from getting this thing installed. That's the first rule."}),"\n",(0,i.jsx)(t.p,{children:'The second rule, however, which you need is to "Add" another "New Executable Policy" to open it back up. So we\'re going to open up by creating another simple rule "Use simple rule" and selecting'}),"\n",(0,i.jsx)(t.p,{children:'"Hash." We want to open up the "PowerPointViewer" again. We want to "Run with elevated privileges." This can be in the "User processes" context here on the computer side. Or if you want to dictate it for your East Sales Users on the user side, that\'s valid also.'}),"\n",(0,i.jsx)(t.p,{children:'So said again, the first, the block, this deny item, this has to be done on the computer side. The enable part, that can be on the computer or the user side, and the "Scope" can be set to "User Processes."'}),"\n",(0,i.jsx)(t.p,{children:"Now the thing that we want to do is if we want to block local admins, the way you're going to do this is you need to scope this. You're going to take the deny and you're going to say who this is going to apply to. Because right now we're saying deny everybody and allow users. That's not quite what we want to do."}),"\n",(0,i.jsx)(t.p,{children:'What we really want to do is deny execution for a specific "Scope Filter." Now the reason we\'re doing this on Windows 10 is that there\'s a special "Group" that you can allocate here. When you click on "Locations" if you pick your Windows 10 machine, the management station you\'re on, there\'s a special group that\'s called "Local account and member of Administrators group."'}),"\n",(0,i.jsx)(t.p,{children:"Let's go ahead and pick that one first, and let's see this work. Let's get the lash-up. We're denying the ability to install for local accounts and the admins group. And then we're saying if you're a standard user and you're getting this policy, then elevate it."}),"\n",(0,i.jsxs)(t.p,{children:["Let's see what happens. Now I'm going to go back here and I'm going to run GP Update (\"",(0,i.jsx)(t.code,{children:"gpupdate"}),"\"). We'll give this a second to catch up, and then we'll see it work in action. All right, here we go."]}),"\n",(0,i.jsx)(t.p,{children:'Now like I said, the standard user, when they double click on "PowerPoint Viewer" it now gets elevated. I could click "Continue" and it would install. I actually don\'t want to install, so I\'m going to go ahead and click "Cancel."'}),"\n",(0,i.jsx)(t.p,{children:'Let me show you what happens if you now try to right click and "Run as administrator." You get the prompt but if you try to do something as the local admin, I have a local admin, what happens here is he gets prevented. That\'s pretty nifty right there.'}),"\n",(0,i.jsx)(t.p,{children:"Let me show you what happens if you try to do this as a domain admin. As a domain admin what happens is it runs. So now in the current setup that I've got, I have let it work for standard users and domain admins. If you like that, that's great. Stop right here. But if you want to go the extra mile and block local admins and domain admins, we have to change the scope on this guy."}),"\n",(0,i.jsx)(t.p,{children:'We\'re going to change the "Scope Filter" of the deny item to not just "Local account and member of Administrators group." We going to signify in "fabrikam.com" all "administrators" which would be considered domain admins and local admins.'}),"\n",(0,i.jsxs)(t.p,{children:["Let's go ahead and see this change. I'll go ahead and run GP Update (\"",(0,i.jsx)(t.code,{children:"gpupdate"}),'") again. Give this a second to catch up.']}),"\n",(0,i.jsx)(t.p,{children:'Now like I said, that second rule allows a standard user to run it and install it in his context. But if we now to right click and "Run as administrator," we already saw that a local admin is going to be blocked. \xa0But now what happens if we give it domain admin credentials? If I give it domain admin credentials, also blocked.'}),"\n",(0,i.jsx)(t.p,{children:"So now you've got a really fine-grained razorblade to dictate who can install what at the right time. By the time this is over, when you make software available to that standard user or if there's a local admin on the machine, they are enforced by PolicyPak to do it the way you want and not the way they want."}),"\n",(0,i.jsx)(t.p,{children:"Hope this video helps you out. Looking forward to helping you get started real soon."}),"\n",(0,i.jsx)(t.p,{children:"Thank you very much, and talk to you soon."})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);