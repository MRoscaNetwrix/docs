"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[489796],{28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var t=i(296540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}},206218:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"usercube/integration-guide/role-assignment/nonconformingdetection/index","title":"Non-Conforming Assignments","description":"The [","source":"@site/docs/usercube/usercube/integration-guide/role-assignment/nonconformingdetection/index.md","sourceDirName":"usercube/integration-guide/role-assignment/nonconformingdetection","slug":"/usercube/integration-guide/role-assignment/nonconformingdetection/","permalink":"/docs/usercube/usercube/integration-guide/role-assignment/nonconformingdetection/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube/usercube/integration-guide/role-assignment/nonconformingdetection/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSidebar","previous":{"title":"Indirect Permissions","permalink":"/docs/usercube/usercube/integration-guide/role-assignment/indirectpermissions/"},"next":{"title":"Role Mining","permalink":"/docs/usercube/usercube/integration-guide/role-mining/"}}');var s=i(474848),o=i(28453);const r={},c="Non-Conforming Assignments",a={},l=[{value:"Build the conforming assignment list",id:"build-the-conforming-assignment-list",level:2},{value:"Build the existing assignment list",id:"build-the-existing-assignment-list",level:2},{value:"Compare both lists",id:"compare-both-lists",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"non-conforming-assignments",children:"Non-Conforming Assignments"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/computerolemodeltask/",children:"\nCompute Role Model Task\n"})," is able to detect from synchronized data a list of non-conforming or missing resources/entitlements for every identity. That is one of Identity Manager's most powerful governance features, provided you have a full role model configured."]}),"\n",(0,s.jsx)(n.h2,{id:"build-the-conforming-assignment-list",children:"Build the conforming assignment list"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"first step"})," is building the conforming assignment list, as explained in the ",(0,s.jsx)(n.a,{href:"/docs/usercube/usercube/integration-guide/role-assignment/conformingassignmentcomputation/",children:"\nConforming Assignments\n"}),". This list (list ",(0,s.jsx)(n.code,{children:"A"}),") includes the assignments that perfectly comply with the role model/assignment policy."]}),"\n",(0,s.jsx)(n.h2,{id:"build-the-existing-assignment-list",children:"Build the existing assignment list"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"second step"})," is building the existing assignment list (list ",(0,s.jsx)(n.code,{children:"B"}),"), as explained in the",(0,s.jsx)(n.a,{href:"/docs/usercube/usercube/integration-guide/role-assignment/existingassignmentsdeduction/",children:"\nExisting Assignments\n"}),' every synced resource can be translated into a role assignment following the assignment rules "in reverse".']}),"\n",(0,s.jsx)(n.h2,{id:"compare-both-lists",children:"Compare both lists"}),"\n",(0,s.jsxs)(n.p,{children:["We can now ",(0,s.jsx)(n.strong,{children:"compare both lists"})," to find out if the managed systems really comply with the decided upon assignment policy."]}),"\n",(0,s.jsxs)(n.p,{children:["For every assignment from list ",(0,s.jsx)(n.code,{children:"B"})," representing resources from the synced data:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["There is a rule path from the identity attribute to the resource provisioning order in the role model. The assignment was expected, it can be found in list ",(0,s.jsx)(n.code,{children:"A"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["There is no rule path from the identity attribute to the resource provisioning order in the role model. The assignment was unexpected, it is not in list ",(0,s.jsx)(n.code,{children:"A"})," or it is in list ",(0,s.jsx)(n.code,{children:"A"})," but not with exactly the same property values."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'The "unexpected" (or non-conforming) assignments can be for example orphan accounts. Sometimes, the account itself should indeed exist according to the rules, but its attribute values are "unexpected", contradicting scalar rules.'}),"\n",(0,s.jsx)(n.p,{children:"Non-conforming accounts are presented in the reconciliation screens: from the role point-of-view in the role reconciliation screen and from the resource point-of-view in the resource reconciliation screen."}),"\n",(0,s.jsx)(n.p,{children:"They need human confirmation to be either kept or destroyed."}),"\n",(0,s.jsxs)(n.p,{children:["For every assignment from list ",(0,s.jsx)(n.code,{children:"A"})," representing expected assignments:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["There is an exact match in list ",(0,s.jsx)(n.code,{children:"B"}),". The managed system complies with the assignment policy for this resource."]}),"\n",(0,s.jsxs)(n.li,{children:["There is no match in list ",(0,s.jsx)(n.code,{children:"B"}),": the managed system doesn't comply with the assignment policy. The resource is missing (the account is missing)."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Missing accounts are presented in the provisioning review for validation before provisioning."}),"\n",(0,s.jsxs)(n.p,{children:["Identity Manager will ",(0,s.jsx)(n.strong,{children:"never delete data"})," without having a user's confirmation first. That is the reason why these variations from the ideal aren't fixed automatically but submitted for review."]}),"\n",(0,s.jsx)(n.p,{children:"Some users might wonder how they can perform governance if they don't have automated rules. Certification can help. By reviewing (even manually) the entitlement landscape, non-conforming account proliferation can be contained."}),"\n",(0,s.jsxs)(n.p,{children:["This feature is the final touch of the ",(0,s.jsx)(n.strong,{children:"sync-fulfill-verify loop"})," that makes Identity Manager so efficient. It is exactly like a closed-loop control system with a feedback loop: perturbations, in the form of modifications in a managed system that don't go through Identity Manager first, trigger a reaction. This reaction uses the role model to suggest a fix. This is the only way for the state of the entitlement landscape to tend towards the ideal standards described by the rules."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);