"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[584667],{28453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>a});var n=t(296540);const r={},o=n.createContext(r);function i(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(o.Provider,{value:s},e.children)}},677180:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"enterpriseauditor/admin/settings/access/restapi/refreshtoken","title":"Use the Client Credentials to Grant a Refesh Token","description":"A refresh token contains the information required to obtain a renewed access token. Request a refresh token when the access token expires.","source":"@site/docs/accessanalyzer/enterpriseauditor/admin/settings/access/restapi/refreshtoken.md","sourceDirName":"enterpriseauditor/admin/settings/access/restapi","slug":"/enterpriseauditor/admin/settings/access/restapi/refreshtoken","permalink":"/docs/accessanalyzer/enterpriseauditor/admin/settings/access/restapi/refreshtoken","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/accessanalyzer/enterpriseauditor/admin/settings/access/restapi/refreshtoken.md","tags":[],"version":"current","frontMatter":{},"sidebar":"accessAnalyzerSidebar","previous":{"title":"PowerShell Commands for the REST API","permalink":"/docs/accessanalyzer/enterpriseauditor/admin/settings/access/restapi/powershellcommands"},"next":{"title":"Assign User to Role Members","permalink":"/docs/accessanalyzer/enterpriseauditor/admin/settings/access/rolebased/assignroles"}}');var r=t(474848),o=t(28453);const i={},a="Use the Client Credentials to Grant a Refesh Token",c={},d=[];function h(e){const s={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"use-the-client-credentials-to-grant-a-refesh-token",children:"Use the Client Credentials to Grant a Refesh Token"})}),"\n",(0,r.jsx)(s.p,{children:"A refresh token contains the information required to obtain a renewed access token. Request a refresh token when the access token expires."}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"grant_type"})," (Required) \u2013 The ",(0,r.jsx)(s.code,{children:"grant_type"})," parameter must be set to ",(0,r.jsx)(s.code,{children:"client_credentials"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"refresh_token"})," (Required) \u2013 The refresh token previously issue to the client"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"scope"})," (Optional) \u2013 The requested scope must not include additional scopes that were not issued in the original access token. If the scope is not included in the request, the service issues an access token with the same scope as previously issued."]}),"\n",(0,r.jsx)(s.li,{children:"Client Authentication \u2013 Required if the client was issued a secret"}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"The authentication server then verifies the access request. If the request is valid, the service generates an access token."}),"\n",(0,r.jsx)(s.p,{children:"The following example shows a refresh token grant:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"POST /api/v1/token HTTP/1.1  \nHost: authorization-server.com  \ngrant_type=refresh_token  \n&refresh_token=xxxxxxxxxxx  \n&client_id=xxxxxxxxxx  \n&client_secret=xxxxxxxxxx\n"})}),"\n",(0,r.jsx)(s.p,{children:"If the token does not have the ability to perform this request, is invalid, or the specific resource has been blocked from access remotely, an HTTP status code of 401 is returned."}),"\n",(0,r.jsx)(s.p,{children:"The response for a refresh token is the same as the response for an access token. Optionally, a new refresh token can be included in the response. If a new refresh token is not included in the response, the current refresh token will continue to be valid. The following example shows a successful access token response:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"POST /oauth/token HTTP/1.1  \nHost: authorization-server.com  \ngrant_type=refresh_token  \n&refresh_token=xxxxxxxxxxx  \n&client_id=xxxxxxxxxx  \n&client_secret=xxxxxxxxxx\n"})}),"\n",(0,r.jsxs)(s.p,{children:["See the Okta ",(0,r.jsx)(s.a,{href:"https://www.oauth.com/oauth2-servers/access-tokens/access-token-response/",children:"Access Token Response"})," article for additional information on successful and unsuccessful responses to requests for access tokens."]}),"\n",(0,r.jsx)(s.p,{children:"The refresh token expires after 7 days."})]})}function l(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);