"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[709828],{28453:(e,r,o)=>{o.d(r,{R:()=>t,x:()=>s});var i=o(296540);const n={},c=i.createContext(n);function t(e){const r=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),i.createElement(c.Provider,{value:r},e.children)}},917567:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>t,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"policypak/leastprivilege/processorderprecedence","title":"Processing Order and Precedence within a GPO","description":"Within a particular GPO (Computer or User side), the processing order is counted in numerical order. So lower-numbered collections attempt to process first, and higher-numbered collections attempt to process last. Then, within any collection, each policy is processed in numerical order from lowest to highest.","source":"@site/docs/policypak/policypak/leastprivilege/processorderprecedence.md","sourceDirName":"policypak/leastprivilege","slug":"/policypak/leastprivilege/processorderprecedence","permalink":"/docs/policypak/policypak/leastprivilege/processorderprecedence","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/policypak/policypak/leastprivilege/processorderprecedence.md","tags":[],"version":"current","frontMatter":{},"sidebar":"policyPakSidebar","previous":{"title":"Using Group Policy Preferences to Manage Local Admin Groups","permalink":"/docs/policypak/policypak/leastprivilege/preferences"},"next":{"title":"Understanding Re-authentication & Justification Text","permalink":"/docs/policypak/policypak/leastprivilege/reauthentication"}}');var n=o(474848),c=o(28453);const t={},s="Processing Order and Precedence within a GPO",a={},l=[];function p(e){const r={h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"processing-order-and-precedence-within-a-gpo",children:"Processing Order and Precedence within a GPO"})}),"\n",(0,n.jsx)(r.p,{children:"Within a particular GPO (Computer or User side), the processing order is counted in numerical order. So lower-numbered collections attempt to process first, and higher-numbered collections attempt to process last. Then, within any collection, each policy is processed in numerical order from lowest to highest."}),"\n",(0,n.jsx)(r.p,{children:"![A screenshot of a computer"}),"\n",(0,n.jsx)(r.p,{children:"Description automatically generated](/img/product_docs/policypak/policypak/leastprivilege/processing_order_and_precedence.webp)"}),"\n",(0,n.jsx)(r.p,{children:"Within any collection, each policy is processed in numerical order from lowest to highest."}),"\n",(0,n.jsx)(r.p,{children:"Policies can be delivered by Group Policy and non-Group Policy methods, such as Microsoft Endpoint Manager (SCCM and Intune) via Endpoint Policy Manager Exporter or Endpoint Policy Manager Cloud. As such, the Endpoint Policy Manager engine needs to make a final determination whether there is any overlap of policies. Here is how the precedence works:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Policies delivered through Endpoint Policy Manager Cloud have the lowest precedence."}),"\n",(0,n.jsx)(r.li,{children:"Policies delivered through Endpoint Policy Manager files have the next highest precedence."}),"\n",(0,n.jsx)(r.li,{children:"Policies delivered through Endpoint Policy Manager Group Policy directives have the highest precedence."}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"After that, user-side policy has precedence over computer-side (Switched) policy. This occurs in order to specify a baseline setting for various computers. Then, specific (overriding) policies can be used when specific users log on. If SecureRun\u2122 is enabled and performs work (i.e., blocking processes), then user-created processes aren\u2019t created unless expressly allowed with the Allow and log rule. At this point, each rule is applied one by one to perform elevation (or Block or Allow and log)."})]})}function d(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);