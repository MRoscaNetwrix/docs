"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[156984],{28453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>a});var t=n(296540);const r={},s=t.createContext(r);function o(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:i},e.children)}},869693:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"groupid/admincenter/service/securityservice/signkeyutility","title":"Signing Key Utility","description":"This utility was created to remediate the vulnerability described in Netwrix security advisory ADV-2025-004 (https://security.netwrix.com/Advisories/ADV-2025-004). Running this utility will cause a new customer-specific signing key to be generated and used by the application. See the Generate a Signing Key section for additional information.","source":"@site/docs/groupid/groupid/admincenter/service/securityservice/signkeyutility.md","sourceDirName":"groupid/admincenter/service/securityservice","slug":"/groupid/admincenter/service/securityservice/signkeyutility","permalink":"/docs/groupid/groupid/admincenter/service/securityservice/signkeyutility","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/groupid/groupid/admincenter/service/securityservice/signkeyutility.md","tags":[],"version":"current","frontMatter":{},"sidebar":"groupIdSidebar","previous":{"title":"Security Service","permalink":"/docs/groupid/groupid/admincenter/service/securityservice/overview"},"next":{"title":"Set up Authentication via Authenticator","permalink":"/docs/groupid/groupid/admincenter/setupauth/authenticator"}}');var r=n(474848),s=n(28453);const o={},a="Signing Key Utility",d={},c=[{value:"Download the Utility",id:"download-the-utility",level:2},{value:"Generate a Signing Key",id:"generate-a-signing-key",level:2},{value:"Update Schedules",id:"update-schedules",level:2},{value:"Export a Signing Key",id:"export-a-signing-key",level:2},{value:"Import a Signing Key",id:"import-a-signing-key",level:2}];function l(e){const i={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"signing-key-utility",children:"Signing Key Utility"})}),"\n",(0,r.jsxs)(i.p,{children:["This utility was created to remediate the vulnerability described in Netwrix security advisory ADV-2025-004 (",(0,r.jsx)(i.a,{href:"https://security.netwrix.com/Advisories/ADV-2025-004",children:"https://security.netwrix.com/Advisories/ADV-2025-004"}),"). Running this utility will cause a new customer-specific signing key to be generated and used by the application. See the ",(0,r.jsx)(i.a,{href:"#Generate-a-Signing-Key",children:"Generate a Signing Key"})," section for additional information."]}),"\n",(0,r.jsxs)(i.p,{children:["Having generated the customer-specific signing key, your existing schedules will not work as their authentication mechanism will no longer be considered valid. Therefore, the authentication mechanism must be updated for schedules as well. See the ",(0,r.jsx)(i.a,{href:"#Update-Schedules",children:"Update Schedules\n"}),"section for additional information."]}),"\n",(0,r.jsx)(i.p,{children:"In case you are running multiple instances of Directory Manager for load balancing and high availability, using this utility you can export the newly generated signing key and then import it to other Directory Manager instances. See the following sections for information on how to export and import the signing key:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"#Export-a-Signing-Key",children:"Export a Signing Key\n"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"#Import-a-Signing-Key",children:"Import a Signing Key\n"})}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"download-the-utility",children:"Download the Utility"}),"\n",(0,r.jsx)(i.p,{children:"You can download the Netwrix Directory Manager (formerly GroupID) Signing Key Utility from the following URLs:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"Pre v11.1 (2.1, 2.2, 2.3, 2.4)"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"https://releases.netwrix.com/products/groupid/11.0/groupid-Signing-Key-Utility-11.0.0.zip",children:"https://releases.netwrix.com/products/groupid/11.0/groupid-Signing-Key-Utility-11.0.0.zip"})}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"For v11.1"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"https://releases.netwrix.com/products/groupid/11.1/groupid-Signing-Key-Utility-11.1.0.zip",children:"https://releases.netwrix.com/products/groupid/11.1/groupid-Signing-Key-Utility-11.1.0.zip"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"The file is downloaded into a folder as per your browser\u2019s download settings. Unzip the file into a folder."}),"\n",(0,r.jsx)(i.h2,{id:"generate-a-signing-key",children:"Generate a Signing Key"}),"\n",(0,r.jsx)(i.p,{children:"Using Netwrix Directory Manager (formerly GroupID) Signing Key Utility you can generate a new signing key."}),"\n",(0,r.jsx)(i.p,{children:"RECOMMENDED: Generate the new signing key on your Directory Manager server machine."}),"\n",(0,r.jsx)(i.p,{children:"Follow the steps to generate a new signing key."}),"\n",(0,r.jsx)(i.p,{children:"Step 1 \u2013 At the Windows Command prompt, go to the folder where you have placed the utility."}),"\n",(0,r.jsx)(i.p,{children:"Step 2 \u2013 Type the following command at the prompt:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:"SigningKeyUtility.exe GenerateSigningKey -u \u201c<DB username>\u201d -s \u201c<SQLServer name>\u201d -d \u201c<DB name>\u201d -i\n"})}),"\n",(0,r.jsx)(i.p,{children:"Step 3 \u2013 Provide the password of SQL server for authentication."}),"\n",(0,r.jsx)(i.p,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"-u \u2014 provide username of the SQL server where your database exists"}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"-s \u2014 provide the name of the SQL server"}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"-d \u2014 provide database name you are using with Directory Manager"}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["-i \u2014 use this parameter if you are using SQL authentication.",(0,r.jsx)(i.br,{}),"\n","If you are using Windows authentication, ignore this argument"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"update-schedules",children:"Update Schedules"}),"\n",(0,r.jsx)(i.p,{children:"This command will update the signing key information in all the existing schedules for each identity store, except the Microsoft Entra ID store."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:"SigningKeyUtility.exe UpdateSchedulers -u \u201c<DB username>\u201d -s \u201c<SQLServer name>\u201d -d \u201c<DB name>\u201d -i\n"})}),"\n",(0,r.jsx)(i.p,{children:"Parameters"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Use the same parameters given in the Generate a SigningKey section."}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"export-a-signing-key",children:"Export a Signing Key"}),"\n",(0,r.jsx)(i.p,{children:"If you are using multiple instances of Directory Manager, then you need to export the newly generated signing key to other instances of Directory Manager.\nType the following command at the Windows Command prompt to export the signing key in .pfx. encrypted format with a password:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:"SigningKeyUtility.exe ExportSigningKey -o \u201c<Folder location for signingkey export>\u201d\n"})}),"\n",(0,r.jsx)(i.p,{children:"Parameters"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"-o \u2014 provide folder location where the utility will export the signing key"}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"This command will generate a password for the encrypted signing key. Copy it and keep it safe for later use. The encrypted signing key is saved in the specified folder."}),"\n",(0,r.jsx)(i.h2,{id:"import-a-signing-key",children:"Import a Signing Key"}),"\n",(0,r.jsx)(i.p,{children:"Copy the newly generated signing key on the required Directory Manager instance.\nType the following command at the Windows Command prompt to import the signing key which is in .pfx encrypted format:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:"SigningKeyUtility.exe ImportSigningKey -n \u201c<Folder location of encryption key>\u201d -p \u201c<Password of encryption key>\u201d -u \u201c<DB username>\u201d -s \u201c<SQLServer name>\u201d -d \u201c<DB name>\u201d -i\n"})}),"\n",(0,r.jsx)(i.p,{children:"Provide the password for SQL server authentication."}),"\n",(0,r.jsx)(i.p,{children:"Parameters"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"-n \u2014 provide folder location to import the encrypted signing key from"}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"-p \u2014 provide the password to decrypt the signing key"}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Use the same parameters given in the ",(0,r.jsx)(i.a,{href:"#Generate-a-Signing-Key",children:"Generate a Signing Key"})," section."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);