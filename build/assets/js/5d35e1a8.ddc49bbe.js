"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[401913],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(296540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}},70087:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"usercube/integration-guide/executables/references/manage-configurationdependantindexes/index","title":"Identity Manager-Manage-Configuration Dependent Indexes","description":"This tool creates the necessary SQL indexes based on the latest deployed configuration to optimize certain queries performances.","source":"@site/docs/usercube/usercube/integration-guide/executables/references/manage-configurationdependantindexes/index.md","sourceDirName":"usercube/integration-guide/executables/references/manage-configurationdependantindexes","slug":"/usercube/integration-guide/executables/references/manage-configurationdependantindexes/","permalink":"/docs/usercube/usercube/integration-guide/executables/references/manage-configurationdependantindexes/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube/usercube/integration-guide/executables/references/manage-configurationdependantindexes/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSidebar","previous":{"title":"Usercube-Login","permalink":"/docs/usercube/usercube/integration-guide/executables/references/login/"},"next":{"title":"Usercube-Manage-History","permalink":"/docs/usercube/usercube/integration-guide/executables/references/manage-history/"}}');var r=t(474848),s=t(28453);const a={},o="Identity Manager-Manage-Configuration Dependent Indexes",c={},d=[{value:"Available optimizations:",id:"available-optimizations",level:2},{value:"Examples",id:"examples",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"identity-manager-manage-configuration-dependent-indexes",children:"Identity Manager-Manage-Configuration Dependent Indexes"})}),"\n",(0,r.jsx)(n.p,{children:"This tool creates the necessary SQL indexes based on the latest deployed configuration to optimize certain queries performances."}),"\n",(0,r.jsx)(n.h2,{id:"available-optimizations",children:"Available optimizations:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Creates SQL indexes and statistics to optimize searches on specific entity types"}),"\n",(0,r.jsx)(n.li,{children:"Creates SQL indexes to optimize joins between records and main entity types"}),"\n",(0,r.jsx)(n.li,{children:"Creates SQL indexed views used to compute dashboard counters"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'\n./Usercube-Manage-ConfigurationDependantIndexes.exe -e "Directory_User" -r "Directory_UserRecord" "Directory_Guest" -dc -s  "data source=.;Database=Usercube;Integrated Security=SSPI;Min Pool Size=10;encrypt=false;" -a\n\n'})}),"\n",(0,r.jsx)(n.p,{children:'./Usercube-Manage-ConfigurationDependantIndexes.exe -auto -dc -s  "data source=.;Database=Usercube;Integrated Security=SSPI;Min Pool Size=10;encrypt=false;" -a'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\n## Arguments\n\n| Argument Name | Details |\n| --- | --- |\n| --entityTypes (-e)   optional | __Type__    String List   __Description__ Sets the list of entity types for which optimization indexes will be created/updated. |\n| --recordEntityTypes (-r)   optional | __Type__    String List   __Description__ Sets the list of record entity types for which optimization indexes will be created/updated. |\n| --userProperties (-p)   optional | __Type__    String List   __Description__ Sets the list of User' properties that link the records and the users. (the order of the given userProperties' must match the order of the given recordEntityTypes'). |\n| --dashboardCounter (-dc)   optional | __Type__    No Value   __Description__ Adjusts the indexed views for the dashboard counters appropriately. |\n| --auto   optional | __Type__    No Value   __Description__ The entity types, record entity types and user properties are deduced automatically from the provisioning rules configured in the database. |\n| --apply-to-database (-a)   optional | __Type__    No Value   __Description__ Directly applies the resulting SQL script to the database. |\n|  |  |\n| --- | --- |\n| --database-connection-string   required | __Type__    String   __Description__ Connection string of the database. |\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);