"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[899342],{28453:(t,e,i)=>{i.d(e,{R:()=>c,x:()=>d});var s=i(296540);const r={},n=s.createContext(r);function c(t){const e=s.useContext(n);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function d(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:c(t.components),s.createElement(n.Provider,{value:e},t.children)}},374673:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"enterpriseauditor/admin/datacollector/adactivity/standardtables","title":"Standard Reference Tables & Views for the ADActivity Data Collector","description":"The ADActivity Data Collector gathers essential user and group activity information into standard reference tables. Unlike other Access Analyzer data collectors, the ADActivity Data Collector writes data to these tables regardless of the job executing the query.","source":"@site/docs/accessanalyzer/enterpriseauditor/admin/datacollector/adactivity/standardtables.md","sourceDirName":"enterpriseauditor/admin/datacollector/adactivity","slug":"/enterpriseauditor/admin/datacollector/adactivity/standardtables","permalink":"/docs/accessanalyzer/enterpriseauditor/admin/datacollector/adactivity/standardtables","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/accessanalyzer/enterpriseauditor/admin/datacollector/adactivity/standardtables.md","tags":[],"version":"current","frontMatter":{},"sidebar":"accessAnalyzerSidebar","previous":{"title":"ADActivity: Share","permalink":"/docs/accessanalyzer/enterpriseauditor/admin/datacollector/adactivity/share"},"next":{"title":"ADActivity: Summary","permalink":"/docs/accessanalyzer/enterpriseauditor/admin/datacollector/adactivity/summary"}}');var r=i(474848),n=i(28453);const c={},d="Standard Reference Tables & Views for the ADActivity Data Collector",a={},o=[];function l(t){const e={h1:"h1",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"standard-reference-tables--views-for-the-adactivity-data-collector",children:"Standard Reference Tables & Views for the ADActivity Data Collector"})}),"\n",(0,r.jsx)(e.p,{children:"The ADActivity Data Collector gathers essential user and group activity information into standard reference tables. Unlike other Access Analyzer data collectors, the ADActivity Data Collector writes data to these tables regardless of the job executing the query."}),"\n",(0,r.jsx)(e.p,{children:"These tables and their associated views are outlined below:"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Table"}),(0,r.jsx)(e.th,{children:"Details"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_AuthTypes"}),(0,r.jsx)(e.td,{children:"Contains Active Directory authentication protocol types"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_Classes"}),(0,r.jsx)(e.td,{children:"Contains Active Directory classes (for example, user, computer)"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_DesiredAccess"}),(0,r.jsx)(e.td,{children:"Contains desired access level of each activity event"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_DesiredAccessNames"}),(0,r.jsx)(e.td,{children:"Contains dictionary of desired access names"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_EventErrorCodes"}),(0,r.jsx)(e.td,{children:"Contains dictionary of event error codes"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_EventNames"}),(0,r.jsx)(e.td,{children:"Contains dictionary of event names"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_Events"}),(0,r.jsx)(e.td,{children:"Contains Active Directory event details"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_FilesImported"}),(0,r.jsx)(e.td,{children:"Contains lists of imported audit files"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_From"}),(0,r.jsx)(e.td,{children:"Contains lists of the sources of activity events"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_HostInfo"}),(0,r.jsx)(e.td,{children:"Contains lists of scanned hosts"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_LDAPEvents"}),(0,r.jsx)(e.td,{children:"Contains lists of Lightweight Directory Access Protocol (LDAP) events"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_LDAPFilters"}),(0,r.jsx)(e.td,{children:"Contains lists of LDAP filters provided"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_ObjectNames"}),(0,r.jsx)(e.td,{children:"Contains dictionary of object\xa0 names"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_Objects"}),(0,r.jsx)(e.td,{children:"Contains lists of Active Directory objects found in the activity log"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_PAC"}),(0,r.jsx)(e.td,{children:"Contains lists of relative IDs (RIDs) for each collected event"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_ProcessEvents"}),(0,r.jsx)(e.td,{children:"Contains lists of activity events by process"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_ProcessNames"}),(0,r.jsx)(e.td,{children:"Contains dictionary of process names"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_Protocols"}),(0,r.jsx)(e.td,{children:"Enumerates network protocols found"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_Sources"}),(0,r.jsx)(e.td,{children:"Contains lists of sources of activity events"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_SPNs"}),(0,r.jsx)(e.td,{children:"Contains a unique identifier for each logon account"})]})]})]}),"\n",(0,r.jsx)(e.p,{children:"Views are the recommended way for Access Analyzer users to obtain the information gathered by the ADActivity Data Collector. They contain additional information for building queries easily. The following is an explanation of the corresponding views created for some of the tables generated by the ADActivity Data Collector:"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Views"}),(0,r.jsx)(e.th,{children:"Details"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_ADEventsAttributesView"}),(0,r.jsx)(e.td,{children:"Contains detailed view of attribute events (changes)"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_ADEventsView"}),(0,r.jsx)(e.td,{children:"Contains detailed view of activity events"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_AuthEventsPACView"}),(0,r.jsx)(e.td,{children:"Contains detailed view of authentication events referencing relative IDs"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_AuthEventsView"}),(0,r.jsx)(e.td,{children:"Contains detailed authentication event view"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_EventsView"}),(0,r.jsx)(e.td,{children:"Contains detailed activity event view"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_LDAPEventsView"}),(0,r.jsx)(e.td,{children:"Contains LDAP view"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_ProcessEventsDesiredAccessView"}),(0,r.jsx)(e.td,{children:"Contains detailed process event view with desired access references"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"SA_ADActivity_ProcessEventsView"}),(0,r.jsx)(e.td,{children:"Contains detailed process event view"})]})]})]})]})}function h(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(l,{...t})}):l(t)}}}]);