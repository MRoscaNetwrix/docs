"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[608537],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(296540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},392709:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"tech_debt/tech_debt_org_specific_clean_up_approaches","title":"Specific Clean Up Approaches","description":"Cleaning up an org is driven by your priorities. Platform Governance for Salesforce documentation is very flexible, to help you clean up objects quickly and effectively.","source":"@site/docs/strongpointforsalesforce/tech_debt/tech_debt_org_specific_clean_up_approaches.md","sourceDirName":"tech_debt","slug":"/tech_debt/tech_debt_org_specific_clean_up_approaches","permalink":"/docs/strongpointforsalesforce/tech_debt/tech_debt_org_specific_clean_up_approaches","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/strongpointforsalesforce/tech_debt/tech_debt_org_specific_clean_up_approaches.md","tags":[],"version":"current","frontMatter":{},"sidebar":"strongpointForSalesforceSidebar","previous":{"title":"Ongoing Monitoring","permalink":"/docs/strongpointforsalesforce/tech_debt/tech_debt_org_ongoing_monitoring"},"next":{"title":"Managing Technical Debt","permalink":"/docs/strongpointforsalesforce/tech_debt/tech_debt_overview"}}');var t=s(474848),r=s(28453);const l={},o="Specific Clean Up Approaches",a={},c=[{value:"Unused, Risky",id:"unused-risky",level:2},{value:"Unused Automation",id:"unused-automation",level:2},{value:"Unused Test Classes",id:"unused-test-classes",level:2},{value:"Entire Object or Group of Parent / Child Objects",id:"entire-object-or-group-of-parent--child-objects",level:2},{value:"Layouts and List Views",id:"layouts-and-list-views",level:2},{value:"Value-based Clean Up",id:"value-based-clean-up",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"specific-clean-up-approaches",children:"Specific Clean Up Approaches"})}),"\n",(0,t.jsx)(n.p,{children:"Cleaning up an org is driven by your priorities. Platform Governance for Salesforce documentation is very flexible, to help you clean up objects quickly and effectively."}),"\n",(0,t.jsx)(n.p,{children:"Here are some guidelines to specific clean up problems:"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"#Unused-Risky",children:"Unused, Risky"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"#Unused-Automation",children:"Unused Automation"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"#Unused-Test-Classes",children:"Unused Test Classes"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"#Entire-Object-or-Group-of-Parent-Child-Objects",children:"Entire Object or Group of Parent / Child Objects"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"#Layouts-and-List-Views",children:"Layouts and List Views"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"#Value-based-Clean-Up",children:"Value-based Clean Up"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["These guidelines assume you set up your List Views the same way as described ",(0,t.jsx)(n.a,{href:"/docs/strongpointforsalesforce/tech_debt/tech_debt_org_clean_up_example",children:"Step 1: Identify and Prioritize Targets"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"unused-risky",children:"Unused, Risky"}),"\n",(0,t.jsx)(n.p,{children:"DLU is populated older than X but there are some dependencies (Role, Code, Workflow):"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Create a Clean Up List View filtered for Customizations where:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"DLU is populated and older than X and"}),"\n",(0,t.jsx)(n.li,{children:"Scripted, Filter, SOQL, and/or Profile checkboxes are checked."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Set the ",(0,t.jsx)(n.strong,{children:"Clean Up Status"})," to ",(0,t.jsx)(n.strong,{children:"Under Investigation"})," and add appropriate ",(0,t.jsx)(n.strong,{children:"Clean Up Notes"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"unused-automation",children:"Unused Automation"}),"\n",(0,t.jsx)(n.p,{children:"Code and Other Critical Objects with dependencies on Unused Fields and Objects:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Create a report, such as the Unused Scripts Report, using the ",(0,t.jsx)(n.strong,{children:"Customizations with Dependencies"})," Report Type filtered for customizations with:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Salesforce Type you are focused on (for example, APEX Class)"}),"\n",(0,t.jsx)(n.li,{children:"The Customization's Date Last Used and/or the Dependency: Date Last Used is populated and older than X."}),"\n",(0,t.jsxs)(n.li,{children:["Optional: Filter out objects from a managed package:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Exclude all Packages: filter on Packages equals {blank}"}),"\n",(0,t.jsxs)(n.li,{children:["Exclude specific Packages: filter on Packages not equal to ",(0,t.jsx)(n.code,{children:"\\{names of package you want to exclude\\}  "})]}),"\n",(0,t.jsxs)(n.li,{children:["Exclude all Managed Packages: filter on Manageable State equals ",(0,t.jsx)(n.strong,{children:"unmanaged"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Open each relevant Customization in a new tab and set the ",(0,t.jsx)(n.strong,{children:"Clean Up Status"})," to ",(0,t.jsx)(n.strong,{children:"Under Investigation"})," and add appropriate ",(0,t.jsx)(n.strong,{children:"Clean Up Notes"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"While investigating, flag any Unused Test Classes you no longer need. They are identified with the Test Class check box."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"unused-test-classes",children:"Unused Test Classes"}),"\n",(0,t.jsx)(n.p,{children:"Cleaning up tests that are no longer necessary can significantly improve your release cycles. There are two reasons that a test class may be unused:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The code it tests is no longer used. To clean these up:"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Create a new Report based on the ",(0,t.jsx)(n.strong,{children:"Customizations with Dependencies"})," type."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Filter for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Salesforce Type equals ",(0,t.jsx)(n.strong,{children:"Apex Class"})]}),"\n",(0,t.jsxs)(n.li,{children:["Test Class equals ",(0,t.jsx)(n.strong,{children:"True"})]}),"\n",(0,t.jsx)(n.li,{children:"Customization's Date Last Used and/or the Dependency: Date Last Used is populated and older than X"}),"\n",(0,t.jsx)(n.li,{children:"Optional: Filter out objects from a managed package."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Add ",(0,t.jsx)(n.strong,{children:"Clean Up Notes"})," that the code it tests is no longer in use."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The assertions in the Test Class relate to fields no longer in use. To identify these:"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Create a new Report based on the ",(0,t.jsx)(n.strong,{children:"Customizations with Dependencies"})," report type."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The following filters identify test classes referencing fields that have not been used in the past six months:"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Salesforce Type equals ",(0,t.jsx)(n.strong,{children:"Apex Class"})]}),"\n",(0,t.jsxs)(n.li,{children:["Test Class equals ",(0,t.jsx)(n.strong,{children:"True"})]}),"\n",(0,t.jsxs)(n.li,{children:["Dependency: Salesforce Type equals ",(0,t.jsx)(n.strong,{children:"CustomField"})]}),"\n",(0,t.jsxs)(n.li,{children:["Dependency: Date Last Used less than ",(0,t.jsx)(n.strong,{children:"180 DAYS AGO"})]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsxs)(n.li,{children:["Add ",(0,t.jsx)(n.strong,{children:"Clean Up Notes"})," that the Test Class assertions relate to fields no longer in use."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"entire-object-or-group-of-parent--child-objects",children:"Entire Object or Group of Parent / Child Objects"}),"\n",(0,t.jsx)(n.p,{children:"Cleaning up a group of custom parent - child objects or an entire object (including the object itself):"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Create a Clean Up List View"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Use the API Name as a filter set to either:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Equals the API Name of the parent or"}),"\n",(0,t.jsxs)(n.li,{children:["Starts with the API Name of the parent object ",(0,t.jsx)(n.strong,{children:'plus " _ _. "'}),". (example _",(0,t.jsx)(n.em,{children:"API Name starts with Record"})," _.__) The period is required to ensure you just match that record and its children. You get all fields and children under the parent."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Set the ",(0,t.jsx)(n.strong,{children:"Clean Up Status"})," to ",(0,t.jsx)(n.strong,{children:"Under Investigation"})," and add appropriate ",(0,t.jsx)(n.strong,{children:"Clean Up Notes"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"layouts-and-list-views",children:"Layouts and List Views"}),"\n",(0,t.jsxs)(n.p,{children:["These customizations do not have a reliable ",(0,t.jsx)(n.strong,{children:"Date Last Used"}),". We are working to narrow this gap. For now, be extra careful when investigating these items."]}),"\n",(0,t.jsx)(n.h2,{id:"value-based-clean-up",children:"Value-based Clean Up"}),"\n",(0,t.jsx)(n.p,{children:"Sometimes we want to clean up values not just Customizations. For example:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Cleaning up as someone leaves the company"}),"\n",(0,t.jsx)(n.li,{children:"Identifying hard-coded dependencies on users"}),"\n",(0,t.jsx)(n.li,{children:"Identifying where a record type or list value is used"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"You have already seen some clues to how you might do this in preceding cases. For most objects, simply:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Create a Clean Up List View showing all Customizations."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Include the XML/Code field and any other specific fields you are interested in, for example: Report Formulas."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Search in the ",(0,t.jsx)(n.strong,{children:"Search this list"})," field (Only Available in Lightning) for:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Email address"}),"\n",(0,t.jsx)(n.li,{children:"Name"}),"\n",(0,t.jsxs)(n.li,{children:["Email root (for example, ",(0,t.jsx)(n.code,{children:"@netwrix.com"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"Record type or list value you are looking to isolate"}),"\n",(0,t.jsx)(n.li,{children:"Anything else that could appear in the metadata"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Points to consider:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Restricting the List View to one Record Type enables you to edit records directly from the List View."}),"\n",(0,t.jsxs)(n.li,{children:["Search carefully if using multiple terms (refer to this ",(0,t.jsx)(n.a,{href:"https://help.salesforce.com/articleView?id=000247472andtype=1",children:"Salesforce Search guide"}),") - quotes can be useful to enforce just the string you are looking for. ",(0,t.jsx)(n.strong,{children:'"Search Term"'})," (in quotes) finds objects with that phrase whereas ",(0,t.jsx)(n.strong,{children:"Search Term"})," (unquoted) finds anything with ",(0,t.jsx)(n.strong,{children:"Search"})," and ",(0,t.jsx)(n.strong,{children:"Term"})," even if they are in different fields in the List View."]}),"\n",(0,t.jsx)(n.li,{children:"Even good searches can result in false positive matches if the same value appears in multiple lists or record types or is a commonly-used term in Salesforce's XML or is a common company-specific term."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Next Technical Debt Topic:"})," ",(0,t.jsx)(n.a,{href:"/docs/strongpointforsalesforce/tech_debt/tech_debt_org_ongoing_monitoring",children:"Ongoing Monitoring "})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);