"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[749166],{28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>d});var n=r(296540);const i={},s=n.createContext(i);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:t},e.children)}},122122:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/pointcut-9d730f4070f82f7c21e17a6f48f014bb.webp"},199671:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/workflows/aspects/addchangeaspect/index","title":"Add Change Aspect","description":"Modifies a given property value.","source":"@site/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/workflows/aspects/addchangeaspect/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/workflows/aspects/addchangeaspect","slug":"/usercube/integration-guide/toolkit/xml-configuration/workflows/aspects/addchangeaspect/","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/workflows/aspects/addchangeaspect/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/workflows/aspects/addchangeaspect/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSidebar","previous":{"title":"Aspects","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/workflows/aspects/"},"next":{"title":"Assert Value Aspect","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/workflows/aspects/assertvalueaspect/"}}');var i=r(474848),s=r(28453);const o={},d="Add Change Aspect",c={},l=[{value:"Examples",id:"examples",level:2},{value:"Accept Null Value",id:"accept-null-value",level:3},{value:"Properties",id:"properties",level:2},{value:"Child Element: PointCut",id:"child-element-pointcut",level:2}];function a(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"add-change-aspect",children:"Add Change Aspect"})}),"\n",(0,i.jsx)(t.p,{children:"Modifies a given property value."}),"\n",(0,i.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(t.p,{children:["The following example computes a new value for the property ",(0,i.jsx)(t.code,{children:"IsDraft"})," from the ",(0,i.jsx)(t.code,{children:"Directory_User"})," entity type. The new value is always ",(0,i.jsx)(t.code,{children:"true"}),". The pointcuts define when the value change must happen."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n<AddChangeAspect Identifier="Directory_UserRecord_AddChange_IsDraft" Binding="Workflow_Directory_User:Directory_User.IsDraft" ExpressionBinding="Workflow_Directory_User:Directory_User" Expression="C#:record:return true;">\n    <PointCut Activity="Directory_User_NewInternal:PersistDraft" ActivityState="PersistOnlyResources-Invoked" Mode="Before" TemplateTransformation="NewInternalWorkflowIsReviewRequired" />    <PointCut Activity="Directory_User_NewExternal:PersistDraft" ActivityState="PersistOnlyResources-Invoked" Mode="Before" TemplateTransformation="NewExternalWorkflowIsReviewRequired" /></AddChangeAspect>\n\n'})}),"\n",(0,i.jsx)(t.h3,{id:"accept-null-value",children:"Accept Null Value"}),"\n",(0,i.jsxs)(t.p,{children:["The following example computes a new value for the ",(0,i.jsx)(t.code,{children:"Card"})," property in users' records, considering ",(0,i.jsx)(t.code,{children:"null"})," as a value. Instead of being ignored, a ",(0,i.jsx)(t.code,{children:"null"})," value returned by ",(0,i.jsx)(t.code,{children:"Expression"})," will replace the old value."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n<AddChangeAspect Identifier="AddChangeAspect_Self_PersonRecord_Card" Binding="Workflow_Person:Person.PersonRecords.Card" AcceptNullValueExpression="C#:record:return true;" ExpressionBinding="Workflow_Person:Person.PersonRecords" Expression="C#:record:\n        if(!string.IsNullOrEmpty(record.Card))\n        {\n            return record.Card;\n        }\n        return null;" >    <PointCut Activity="Self_DataUpdate:Request" ActivityState="Action-Executed" Mode="After" /></AddChangeAspect>\n\n'})}),"\n",(0,i.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Property"}),(0,i.jsx)(t.th,{children:"Details"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Binding   required"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Binding whose difference with ",(0,i.jsx)(t.code,{children:"ExpressionBinding"})," defines the property to be changed."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Identifier   required"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Unique identifier of the aspect."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"AcceptNullValueExpression   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   C# expression returning a boolean, ",(0,i.jsx)(t.code,{children:"true"})," to consider ",(0,i.jsx)(t.code,{children:"null"})," for the new value returned by ",(0,i.jsx)(t.code,{children:"Expression"}),". By default, ",(0,i.jsx)(t.code,{children:"null"})," values are ignored."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Expression   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   C# expression returning a new value for the property to be changed.    ",(0,i.jsx)(t.strong,{children:"Note:"})," this property can also be defined by a binding via ",(0,i.jsx)(t.code,{children:"ExpressionBinding"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ExpressionBinding   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Binding:   - that defines the variable type used in the potential expressions specified in the aspect;   - whose difference with ",(0,i.jsx)(t.code,{children:"Binding"})," defines the property involved in the aspect.   ",(0,i.jsx)(t.strong,{children:"Note:"})," required when handling the property of multi-valued objects, for example records, to make sure to modify the property in all records and not only in one."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"IfExpression   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Expression that conditions the aspect execution. See the ",(0,i.jsx)(t.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/expressions/",children:"Expressions"})," topic for additional information."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Priority   default value: 0"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    Int32   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Execution priority among all aspects. At a given activity state, the aspect with the highest priority will be triggered first.   ",(0,i.jsx)(t.strong,{children:"Note:"})," the priority can be a negative value."]})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"child-element-pointcut",children:"Child Element: PointCut"}),"\n",(0,i.jsxs)(t.p,{children:["A pointcut is a mechanism telling Identity Manager when to execute the linked ",(0,i.jsx)(t.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/workflows/aspects/",children:"Aspects"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"The position of the pointcut is specified by an activity state and a mode (before or after)."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"pointcut Schema",src:r(122122).A+"",width:"4282",height:"562"})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Property"}),(0,i.jsx)(t.th,{children:"Details"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Activity   required"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Identifier of the activity whose specified state triggers the aspect."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ActivityState   required"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    Enumeration   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Identifier of the activity state that triggers the aspect."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Mode   default value: 0"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    PointCutMode   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Mode defining when exactly the aspect is triggered around the specified workflow's activity state.   ",(0,i.jsx)(t.code,{children:"0"})," - ",(0,i.jsx)(t.strong,{children:"Before"}),": the aspect will be executed on entry to the specified activity state, regardless of the transition used.   ",(0,i.jsx)(t.code,{children:"1"})," - ",(0,i.jsx)(t.strong,{children:"After"}),": the aspect will be executed on exit from the specified activity state, regardless of the transition used."]})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);