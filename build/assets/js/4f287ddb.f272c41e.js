"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[501356],{28453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>d});var t=n(296540);const r={},s=t.createContext(r);function o(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:i},e.children)}},71262:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>d,default:()=>a,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/provisioning/rolemapping/index","title":"Role Mapping","description":"Defines a naming rule to create a single role in a specific category based on a property.","source":"@site/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/provisioning/rolemapping/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/provisioning/rolemapping","slug":"/usercube/integration-guide/toolkit/xml-configuration/provisioning/rolemapping/","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/provisioning/rolemapping/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/provisioning/rolemapping/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSidebar","previous":{"title":"Risk","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/provisioning/risk/"},"next":{"title":"Single Role","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/provisioning/singlerole/"}}');var r=n(474848),s=n(28453);const o={},d="Role Mapping",l={},c=[{value:"Examples",id:"examples",level:2},{value:"Additional condition",id:"additional-condition",level:3},{value:"Properties",id:"properties",level:2},{value:"Child Element: Rule",id:"child-element-rule",level:2},{value:"Child Element: Item",id:"child-element-item",level:2},{value:"Properties",id:"properties-1",level:3}];function h(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"role-mapping",children:"Role Mapping"})}),"\n",(0,r.jsx)(i.p,{children:"Defines a naming rule to create a single role in a specific category based on a property.\nA navigation rule will also be created by the naming rule, giving the property to the target user when the created single role is assigned to this user."}),"\n",(0,r.jsx)(i.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(i.h3,{id:"additional-condition",children:"Additional condition"}),"\n",(0,r.jsxs)(i.p,{children:["The following example uses ",(0,r.jsx)(i.code,{children:"WhereExpression"})," to condition the application of the rule."]}),"\n",(0,r.jsx)(i.p,{children:"NETWRIX recommends using this property only when the properties from the rule items do not suffice."}),"\n",(0,r.jsxs)(i.p,{children:["Here the naming convention says that we should create a single role for each group (",(0,r.jsx)(i.code,{children:"memberOf"})," value) whose ",(0,r.jsx)(i.code,{children:"dn"})," starts with ",(0,r.jsx)(i.code,{children:"SG_"}),"and whose dn's second part (between two ",(0,r.jsx)(i.code,{children:"_"}),") is made of three characters."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:'\n<RoleMapping Identifier="AD_dn" Policy="Default" Property="AD_Entry:memberOf" ResourceType="AD_Entry_NominativeUser" WhereExpression="C#:resource:return resource.dn?.Split(\'_\')[1].Length == 3;" >    <Rule>        <Item Property="AD_Entry:dn" Operator="StartWith" Value="SG_"/>    </Rule></RoleMapping>\n\n'})}),"\n",(0,r.jsx)(i.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Property"}),(0,r.jsx)(i.th,{children:"Details"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"ApprovalRequired   default value: false"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    Boolean   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Indicates that the generated role must be approved before being used by a policy."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"ApprovalWorkflowType   default value: None"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    ProvisioningPolicyApprovalWorkflow   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Indicates the number of validation to give to a manual role (from 0 to 3 inclusive). The value 4 is used when a manual assignment cannot be performed."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Category   optional"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    Int64   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Identifier of the category."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"CategoryDisplayNameBinding   optional"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    Int64   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Defines the binding used to compute the category display name."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"CategoryDisplayNameExpression   optional"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    String   ",(0,r.jsx)(i.strong,{children:"Description"}),"   References the C# or literal expression used to compute the category display name. See the ",(0,r.jsx)(i.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/expressions/",children:"Expressions"})," topic for additional information."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"CategoryIdentifierBinding   optional"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    Int64   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Binding used to compute the category identifier."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"CategoryIdentifierExpression   optional"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    String   ",(0,r.jsx)(i.strong,{children:"Description"}),"   C# or literal expression used to compute the category identifier. See the ",(0,r.jsx)(i.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/expressions/",children:"Expressions"})," topic for additional information."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"CommentActivationOnApproveInReview   default value: Inherited"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    CommentActivationWithInherited   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Indicates if a comment is enabled when reviewing a request of the role and deciding to approve it.   ",(0,r.jsx)(i.code,{children:"0"})," - Disabled   ",(0,r.jsx)(i.code,{children:"1"})," - Optional   ",(0,r.jsx)(i.code,{children:"2"})," - Required   ",(0,r.jsx)(i.code,{children:"3"})," - Inherited: comment activation in the associated policy."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"CommentActivationOnDeclineInReview   default value: Inherited"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    CommentActivationWithInherited   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Indicates if a comment is enabled when reviewing a request of the role and deciding to refuse it.   ",(0,r.jsx)(i.code,{children:"0"})," - Disabled   ",(0,r.jsx)(i.code,{children:"1"})," - Optional   ",(0,r.jsx)(i.code,{children:"2"})," - Required   ",(0,r.jsx)(i.code,{children:"3"})," - Inherited: comment activation in the associated policy."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"CommentActivationOnDeleteGapInReconciliation   default value: Inherited"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    CommentActivationWithInherited   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Indicates if a comment is enabled when reviewing a non-conforming assignment of the role and deciding to delete it.   ",(0,r.jsx)(i.code,{children:"0"})," - Disabled   ",(0,r.jsx)(i.code,{children:"1"})," - Optional   ",(0,r.jsx)(i.code,{children:"2"})," - Required   ",(0,r.jsx)(i.code,{children:"3"})," - Inherited: comment activation in the associated policy."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"CommentActivationOnKeepGapInReconciliation   default value: Inherited"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    CommentActivationWithInherited   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Indicates if a comment is enabled when reviewing a non-conforming assignment of the role and deciding to keep it.   ",(0,r.jsx)(i.code,{children:"0"})," - Disabled   ",(0,r.jsx)(i.code,{children:"1"})," - Optional   ",(0,r.jsx)(i.code,{children:"2"})," - Required   ",(0,r.jsx)(i.code,{children:"3"})," - Inherited: comment activation in the associated policy."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"DisplayNameBinding   optional"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    Int64   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Defines the binding used to compute the role display name."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"DisplayNameExpression   optional"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    String   ",(0,r.jsx)(i.strong,{children:"Description"}),"   References the C# or literal expression used to compute the role display name. See the ",(0,r.jsx)(i.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/expressions/",children:"Expressions"})," topic for additional information."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"HideOnSimplifiedView   default value: false"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    Boolean   ",(0,r.jsx)(i.strong,{children:"Description"}),"   ",(0,r.jsx)(i.code,{children:"true"})," to hide this role in the basket simplified view. This flag is applied only on automatic assignments."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Identifier   required"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    String   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Identifier of the role mapping."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IdentifierBinding   optional"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    Int64   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Binding used to compute the role identifier."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IdentifierExpression   optional"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    String   ",(0,r.jsx)(i.strong,{children:"Description"}),"   C# or literal expression used to compute the role identifier. See the ",(0,r.jsx)(i.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/expressions/",children:"Expressions"})," topic for additional information."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"ImplicitApproval   default value: 0"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    Byte   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Indicates if the validation steps of the single role can be skipped.   ",(0,r.jsx)(i.code,{children:"0"})," - Inherited: implicit approval value in the associated policy.   ",(0,r.jsx)(i.code,{children:"1"})," - Explicit: all the workflow steps must be approved.   ",(0,r.jsx)(i.code,{children:"2"})," - Implicit: the workflow steps can be skipped if the requester has enough permissions."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"ParentCategoryIdentifierBinding   optional"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    Int64   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Defines the binding used to compute the parent category."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"ParentCategoryIdentifierExpression   optional"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    String   ",(0,r.jsx)(i.strong,{children:"Description"}),"   References the C# or literal expression used to compute the parent category. See the ",(0,r.jsx)(i.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/expressions/",children:"Expressions"})," topic for additional information."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Policy   required"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    Int64   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Identifier of the policy that the rule is part of."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Property   required"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    Int64   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Property on which the naming rule will be applied."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"ResourceType   required"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    Int64   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Resource type on which the naming rule will be applied."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"RolePolicy   optional"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    Int64   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Identifier of the policy used for the roles created by the naming rule."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"WhereExpression   optional"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    String   ",(0,r.jsx)(i.strong,{children:"Description"}),"   C# expression returning a boolean, used to condition the application of the naming convention. See the ",(0,r.jsx)(i.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/expressions/",children:"Expressions"})," topic for additional information."]})]})]})]}),"\n",(0,r.jsx)(i.h2,{id:"child-element-rule",children:"Child Element: Rule"}),"\n",(0,r.jsx)(i.p,{children:"Represent the sets of conditions which will determine the enforcement of the naming rule."}),"\n",(0,r.jsx)(i.h2,{id:"child-element-item",children:"Child Element: Item"}),"\n",(0,r.jsx)(i.p,{children:"Represents one of the conditions used to determine the enforcement of the naming rule."}),"\n",(0,r.jsx)(i.h3,{id:"properties-1",children:"Properties"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Property"}),(0,r.jsx)(i.th,{children:"Details"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Operator   default value: 0"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    QueryComparisonOperator   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Operator used in the condition for the naming rule enforcement."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Property   required"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    Int64   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Property on which the condition for the naming rule enforcement is based."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Value   optional"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.strong,{children:"Type"}),"    String   ",(0,r.jsx)(i.strong,{children:"Description"}),"   Value used in the condition for the naming rule enforcement."]})]})]})]})]})}function a(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);