"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[592517],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(296540);const r={},s=a.createContext(r);function o(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(s.Provider,{value:n},e.children)}},586741:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"groupid/api/datasource/parsecs","title":"Parse a Connection String","description":"This API parses the connection string given in one line format.","source":"@site/docs/groupid/groupid/api/datasource/parsecs.md","sourceDirName":"groupid/api/datasource","slug":"/groupid/api/datasource/parsecs","permalink":"/docs/groupid/groupid/api/datasource/parsecs","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/groupid/groupid/api/datasource/parsecs.md","tags":[],"version":"current","frontMatter":{},"sidebar":"groupIdSidebar","previous":{"title":"Get Metadata of Data Source by Server Type and ID","permalink":"/docs/groupid/groupid/api/datasource/getmdtypest"},"next":{"title":"Update a Data Source","permalink":"/docs/groupid/groupid/api/datasource/updateds"}}');var r=t(474848),s=t(28453);const o={},i="Parse a Connection String",c={},d=[{value:"Endpoint",id:"endpoint",level:2},{value:"HTTP Method",id:"http-method",level:2},{value:"Sample Request Syntax",id:"sample-request-syntax",level:4},{value:"Sample Response Syntax",id:"sample-response-syntax",level:4}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"parse-a-connection-string",children:"Parse a Connection String"})}),"\n",(0,r.jsx)(n.p,{children:"This API parses the connection string given in one line format."}),"\n",(0,r.jsx)(n.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://machinename:4443/GroupIDDataService/api/DataSource/ParseConnectionString",children:"https://machinename:4443/GroupIDDataService/api/DataSource/ParseConnectionString"})}),"\n",(0,r.jsx)(n.h2,{id:"http-method",children:"HTTP Method"}),"\n",(0,r.jsx)(n.p,{children:"POST"}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-syntax",children:"Sample Request Syntax"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"{  \n\xa0\xa0\xa0\xa0\"connectionString\": \"Data Source='MSSQL';Initial Catalog=ExternalDB;Password='password123';User ID='sa';Integrated Security=false;\",  \n\xa0\xa0\xa0\xa0\"dataSourceType\": 3  \n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-syntax",children:"Sample Response Syntax"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{  \n\xa0\xa0\xa0\xa0"ConnectionString": "\'MSSQL\'",  \n\xa0\xa0\xa0\xa0"Database": "ExternalDB",  \n\xa0\xa0\xa0\xa0"Password": "\'password123\'",  \n\xa0\xa0\xa0\xa0"UserName": "\'sa\'",  \n\xa0\xa0\xa0\xa0"WindowsAuthentication": "true"  \n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);