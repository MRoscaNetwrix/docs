"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[625097],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var r=t(296540);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},873143:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"groupid/managementshell/scheduling/getschedule","title":"Get-Schedule","description":"The commandlet Get-Schedule retrieves the scheduled jobs created in the identity store connected to the current instance of the Management Shell. By default, this cmdlet returns all the jobs available irrespective of the following:","source":"@site/docs/groupid/groupid/managementshell/scheduling/getschedule.md","sourceDirName":"groupid/managementshell/scheduling","slug":"/groupid/managementshell/scheduling/getschedule","permalink":"/docs/groupid/groupid/managementshell/scheduling/getschedule","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/groupid/groupid/managementshell/scheduling/getschedule.md","tags":[],"version":"current","frontMatter":{},"sidebar":"groupIdSidebar","previous":{"title":"Set the $Credentials Environment Variable","permalink":"/docs/groupid/groupid/managementshell/parameters/setthecredential"},"next":{"title":"Get-TargetSchedules","permalink":"/docs/groupid/groupid/managementshell/scheduling/gettargetschedule"}}');var i=t(474848),s=t(28453);const a={},l="Get-Schedule",d={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Required Parameter",id:"required-parameter",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"get-schedule",children:"Get-Schedule"})}),"\n",(0,i.jsx)(n.p,{children:"The commandlet Get-Schedule retrieves the scheduled jobs created in the identity store connected to the current instance of the Management Shell. By default, this cmdlet returns all the jobs available irrespective of the following:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"whether the identity store with which they belong is enabled."}),"\n",(0,i.jsx)(n.li,{children:"whether the jobs are enabled."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This commandlet can also filter the job list if provided with the filtration parameters such as JobType, TriggerType or HavingNotifications. It also accepts a MatchingCriteria parameter that determines whether the criteria are to be joined on the AND basis or OR basis."}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Get-Schedule [-ScheduleNames <String[]>]  \n[-IdentityStoreNames <String[]>]  \n[-JobTypes <JobType[]>]  \n[-TriggerTypes <TriggerType[]>]  \n[-HavingNotifications <Boolean>]  \n[-MatchingCriteria <JoiningOperator>]  \n[-PreventEnumeration]  \n[-IdentityStoreId <Int32>]  \n[-SecurityToken <CustomClaimsPrincipal>]  \n[-WarningAction <ActionPreference>]  \n[-InformationAction <ActionPreference>]  \n[-WarningVariable <String>]  \n[-InformationVariable <String>]  \n[-PipelineVariable <String>]  \n[<CommonParameters>]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"required-parameter",children:"Required Parameter"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example 1:"}),"\n",(0,i.jsx)(n.p,{children:"This example retrieves all the scheduled jobs created in the connected identity store."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Get-Schedule\n"})}),"\n",(0,i.jsx)(n.p,{children:"Example 2:"}),"\n",(0,i.jsx)(n.p,{children:"This example retrieves those Group Usage Service \u2013 GUS job(s) that have monthly trigger and MatchingCriteria on the And basis."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Get-Schedule -JobType GUS -TriggerType RunMonthly -MatchingCriteria And\n"})}),"\n",(0,i.jsx)(n.p,{children:"Example 3:"}),"\n",(0,i.jsx)(n.p,{children:"This example retrieves the scheduled job with GUS1 name."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Get-Schedule -ScheduleName GUS1\n"})}),"\n",(0,i.jsx)(n.p,{children:"Example 4:"}),"\n",(0,i.jsx)(n.p,{children:"This example retrieves the two scheduled jobs \u2013 GUS1 and GLM6 \u2013through the pipeline operator."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"'GUS1','GLM6' | Get-Schedule\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);