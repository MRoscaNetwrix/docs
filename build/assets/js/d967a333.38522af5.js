"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[941705],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>d});var r=t(296540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}},389970:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"groupid/managementshell/scheduling/setschedule","title":"Set-Schedule","description":"The commandlet Set-Schedule modifies the attributes and settings of a schedule in the identity store connected to the current instance of the Management Shell.","source":"@site/docs/groupid/groupid/managementshell/scheduling/setschedule.md","sourceDirName":"groupid/managementshell/scheduling","slug":"/groupid/managementshell/scheduling/setschedule","permalink":"/docs/groupid/groupid/managementshell/scheduling/setschedule","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/groupid/groupid/managementshell/scheduling/setschedule.md","tags":[],"version":"current","frontMatter":{},"sidebar":"groupIdSidebar","previous":{"title":"Remove-Schedule","permalink":"/docs/groupid/groupid/managementshell/scheduling/removeschedule"},"next":{"title":"Stop-Schedule","permalink":"/docs/groupid/groupid/managementshell/scheduling/stopschedule"}}');var s=t(474848),i=t(28453);const a={},d="Set-Schedule",l={},o=[{value:"Syntax",id:"syntax",level:2},{value:"Required Parameter",id:"required-parameter",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"set-schedule",children:"Set-Schedule"})}),"\n",(0,s.jsx)(n.p,{children:"The commandlet Set-Schedule modifies the attributes and settings of a schedule in the identity store connected to the current instance of the Management Shell."}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Set-Schedule  \n-ScheduleName <string>  \n[-NewName <string>]  \n[-TargetOperation {Add | Remove}] [-Targets <string[]>]  \n[-Credential <pscredential>]  \n[-UserName <string>]  \n[-Password <string>]  \n[-SetNotifications <bool>]  \n[-Recepients <string[]>]  \n[-SendToOwners <bool>]  \n[-NotificationSendingCriteria {Always | OnSuccess | OnFailure | OnMembershipChanged}]  \n[-Enabled <bool>]  \n[-TriggerOperation {add | remove single by id | remove by type | remove all}]  \n[-TriggerId <int>]  \n[-TriggerType {Event | Time | Daily | Weekly | Monthly | MonthlyDOW | Idle | Registration | Boot | Logon | SessionStateChange | Custom}]  \n[-StartTime <datetime>]  \n[-MonthDate <int>]  \n[-YearMonths {January | February | March | April | May | June | July | August | September | October | November | December | AllMonths}]  \n[-MonthWeek {FirstWeek | SecondWeek | ThirdWeek | FourthWeek | LastWeek | AllWeeks}]  \n[-WeekDays {Sunday | Monday | Tuesday | Wednesday | Thursday | Friday | Saturday | AllDays}]  \n[-DaysInterval <int>]  \n[-WeeksInterval <int>]  \n[-Repeat]  \n[-RepeatInterval <int>]  \n[-RepeatDuration <int>]  \n[-EndDate <datetime>]  \n[-TriggerDisabled]  \n[-KillAtDurationEnd]  \n[-IncludeAllContainers]  \n[-IncludeSpecifiedContainers]  \n[-MessagingSystems <string[]>]  \n[-IncludeAllMessagingServers]  \n[-IncludeSpecifiedMessagingServers]  \n[<CommonParameters>]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"required-parameter",children:"Required Parameter"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"ScheduleName"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example 1:"}),"\n",(0,s.jsx)(n.p,{children:"This example renames a schedule from GUS1 to GUS1-renamed."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Set-Schedule -ScheduleName GUS1 -NewName GUS1_renamed\n"})}),"\n",(0,s.jsx)(n.p,{children:"Example 2:"}),"\n",(0,s.jsx)(n.p,{children:"This example updates the authentication information of GUS1 schedule."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Set-Schedule -SscheduleName GUS1 -Credential $creds\n"})}),"\n",(0,s.jsx)(n.p,{children:"Example 3:"}),"\n",(0,s.jsx)(n.p,{children:"This example removes OU targets from smm4 schedule."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Set-Schedule -ScheduleName smm4_ -TargetOperation Remove -Targets 'OU=ArslanAhmadOU,OU=WorkingOU,DC=pucit,DC=local', 'OU=CustomRole,OU=WorkingOU,DC=pucit,DC=local', 'OU=CustomRole2,OU=WorkingOU,DC=pucit,DC=local'\n"})}),"\n",(0,s.jsx)(n.p,{children:"Example 4:"}),"\n",(0,s.jsx)(n.p,{children:"This example modifies smm4_ schedule by removing its targets."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Set-Schedule -ScheduleName smm4_ -TargetOperation Remove -Targets 'CN=STest1Group,OU=ArslanAhmadOU,OU=WorkingOU,DC=pucit,DC=local', 'OU=CustomRole2,OU=WorkingOU,DC=pucit,DC=local'\n"})}),"\n",(0,s.jsx)(n.p,{children:"Example 5:"}),"\n",(0,s.jsx)(n.p,{children:"This example clears configured notification settings of a schedule smm4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Set-Schedule -ScheduleName smm4_ -SetNotifications $false\n"})}),"\n",(0,s.jsx)(n.p,{children:"Example 6:"}),"\n",(0,s.jsxs)(n.p,{children:["This example changes notification settings of a schedule smm4. It sets notification to be sent to ",(0,s.jsx)(n.a,{href:"mailto:recep1@gid.com",children:"recep1@gid.com"})," every time the job is run."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Set-Schedule -ScheduleName smm4_ -SetNotifications $true -Recepients 'recep1@gid.com' -NotificationSendingCriteria Always\n"})}),"\n",(0,s.jsx)(n.p,{children:"Example 7:"}),"\n",(0,s.jsx)(n.p,{children:"This example adds a monthly trigger for smm4 schedule. It is repeated every 10 minutes for 1 hour on 23rd of March, August and September at 16:56."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Set-Schedule -ScheduleName smm4_ -TriggerOperation Add -TriggerType Monthly -StartTime '16:56' -MonthDate 23 -YearMonths 'March,August,September' -Repeat -RepeatInterval 10 -RepeatDuration 60\n"})}),"\n",(0,s.jsx)(n.p,{children:"Example 8:"}),"\n",(0,s.jsx)(n.p,{children:"This example adds a monthly repeating trigger for smm4_ schedule and has an end date. It stops if it runs at the duration end."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Set-Schedule -ScheduleName smm4_ -TriggerOperation Add -TriggerType Monthly -StartTime '16:56' -MonthDate 23 -YearMonths 'March,August,September' -Repeat -RepeatInterval 10 -RepeatDuration 60 -EndDate '2020/03/29' \u2013KillAtDurationEnd\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);