"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[688329],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var s=t(296540);const r={},a=s.createContext(r);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:n},e.children)}},167730:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"threatprevention/requirements/dbmaintenance","title":"Database Maintenance Feature Requirements","description":"All operations to configure database maintenance on the Database Maintenance Window are executed by the Enterprise Manager. Therefore, either the SQL Server account supplied during Threat Prevention installation or the Windows account configured to run the Enterprise Manager (for Windows Authentication to the SQL Server) must have enough rights to execute the Database Maintenance feature.","source":"@site/docs/threatprevention/threatprevention/requirements/dbmaintenance.md","sourceDirName":"threatprevention/requirements","slug":"/threatprevention/requirements/dbmaintenance","permalink":"/docs/threatprevention/threatprevention/requirements/dbmaintenance","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/threatprevention/threatprevention/requirements/dbmaintenance.md","tags":[],"version":"current","frontMatter":{},"sidebar":"threatPreventionSidebar","previous":{"title":"Application Server Requirements","permalink":"/docs/threatprevention/threatprevention/requirements/application"},"next":{"title":"EPE Rest Site Requirements","permalink":"/docs/threatprevention/threatprevention/requirements/eperestsite"}}');var r=t(474848),a=t(28453);const i={},o="Database Maintenance Feature Requirements",d={},c=[{value:"Less Privilege Model for NVMonitorData Database Permission",id:"less-privilege-model-for-nvmonitordata-database-permission",level:2},{value:"Sample Script to Grant Database Maintenance Rights",id:"sample-script-to-grant-database-maintenance-rights",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"database-maintenance-feature-requirements",children:"Database Maintenance Feature Requirements"})}),"\n",(0,r.jsxs)(n.p,{children:["All operations to configure database maintenance on the ",(0,r.jsx)(n.a,{href:"/docs/threatprevention/threatprevention/admin/configuration/databasemaintenance/overview",children:"Database Maintenance Window"})," are executed by the Enterprise Manager. Therefore, either the SQL Server account supplied during Threat Prevention installation or the Windows account configured to run the Enterprise Manager (for Windows Authentication to the SQL Server) must have enough rights to execute the Database Maintenance feature."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"NOTE:"})," If the account used to run Database Maintenance is changed, it is necessary to manually delete the DBMaintenance SQL Agent Job in the SQL Server Management Studio."]}),"\n",(0,r.jsx)(n.p,{children:"Permissions Summary"}),"\n",(0,r.jsx)(n.p,{children:"The database user must have the following rights to run Database Maintenance:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Read/Write permissions in the NVMonitorData database"}),"\n",(0,r.jsx)(n.li,{children:"Read/Write permissions in the NVMonitorConfig database"}),"\n",(0,r.jsx)(n.li,{children:"Query SQL Agent status"}),"\n",(0,r.jsx)(n.li,{children:"Create/Delete/Modify SQL Agent job"}),"\n",(0,r.jsx)(n.li,{children:"Query Database size information"}),"\n",(0,r.jsx)(n.li,{children:"Execute sp_updatestats for the NVMonitorData database"}),"\n",(0,r.jsx)(n.li,{children:"Create Server Link"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Database Permissions"}),"\n",(0,r.jsx)(n.p,{children:"The following rights are required to run database maintenance:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"In the master database:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"VIEW SERVER STATE permission"}),"\n",(0,r.jsx)(n.li,{children:"ALTER ANY LOGIN permission"}),"\n",(0,r.jsx)(n.li,{children:"ALTER ANY LINKED SERVER permission"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"In the msdb database:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"SQLAgentOperatorRole role"}),"\n",(0,r.jsx)(n.li,{children:"Permission to select from msdb.dbo.sysjobs"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"In the NVMonitorConfig database:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"db_datareader role"}),"\n",(0,r.jsx)(n.li,{children:"db_datawriter role"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"In the NVMonitorData database:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Be owner of this database"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"NOTE:"})," There is a least privilege option for this requirement. See the ",(0,r.jsx)(n.a,{href:"#Less-Privilege-Model-for-NVMonitorData-Database-Permission",children:"Less Privilege Model for NVMonitorData Database Permission"})," topic for additional information."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See the ",(0,r.jsx)(n.a,{href:"/docs/threatprevention/threatprevention/admin/overview#database-components",children:"Database Components"})," topic for a discussion of these databases."]}),"\n",(0,r.jsx)(n.p,{children:"Archive Database Permissions"}),"\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.strong,{children:"Move"})," option is selected on the ",(0,r.jsx)(n.a,{href:"/docs/threatprevention/threatprevention/admin/configuration/databasemaintenance/archive",children:"Archive Data"})," tab of the Database Maintenance window, an additional account must be provided for the destination server/database. This account must have rights to:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create the database on the specified server"}),"\n",(0,r.jsx)(n.li,{children:"Modify the schema"}),"\n",(0,r.jsx)(n.li,{children:"Read/write data from the archive database"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"less-privilege-model-for-nvmonitordata-database-permission",children:"Less Privilege Model for NVMonitorData Database Permission"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"NOTE:"})," If this less privileged model is used, then the last step in the Database Maintenance process, executing sp_updatestats, will fail. However, all other steps in the process will complete successfully and all data will be deleted/moved as configured."]}),"\n",(0,r.jsx)(n.p,{children:"If it is not possible to grant the \u2018user\u2019 owner rights to the NVMonitorData database, grant the following instead:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"db_datareader role"}),"\n",(0,r.jsx)(n.li,{children:"db_datawriter role"}),"\n",(0,r.jsx)(n.li,{children:"ALTER ON SCHEMA :: dbo"}),"\n",(0,r.jsx)(n.li,{children:"Execute"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"sample-script-to-grant-database-maintenance-rights",children:"Sample Script to Grant Database Maintenance Rights"}),"\n",(0,r.jsx)(n.p,{children:"Here is a sample script to give the necessary rights for Database Maintenance."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"/*\xa0  \n*\xa0\xa0Script creates user with a set of minimum required rights to run\xa0  \n*\xa0\xa0Database Maintenance in StealthINTERCEPT (now Threat Prevention) product version 4.1 or newer  \n*\xa0\xa0\xa0  \n*\xa0\xa0Prerequisites: Corresponding Windows account must already exist  \n*\xa0\xa0\xa0  \n*/\xa0  \ndeclare @usr varchar (50) = 'DomainName\\UserName';\xa0  \ndeclare\xa0  \n@q varchar(8000),  \n@id int;\xa0\xa0  \nbegin -- CLEAN\xa0  \nuse NVMonitorData;  \nif exists(select 1 from sys.database_principals where name = @usr)  \nbegin  \nset @q = 'exec sp_dropuser [' + @usr +']';  \nexec(@q);  \nend;\xa0  \nuse NVMonitorConfig;  \nif exists(select 1 from sys.database_principals where name = @usr)  \nbegin\xa0\xa0\xa0\xa0  \nset @q = 'exec sp_dropuser [' + @usr + ']';  \nexec(@q);  \nend;\xa0  \nuse master;  \nif exists(select 1 from sys.database_principals where name = @usr)  \nbegin\xa0\xa0\xa0\xa0  \nset @q = 'exec sp_dropuser [' + @usr + ']';  \nexec(@q);  \nend;\xa0  \nuse msdb;  \nif exists(select 1 from msdb.sys.database_principals where name = @usr)  \nbegin\xa0\xa0\xa0  \nset @q = 'exec sp_dropuser [' + @usr + ']';  \nexec(@q);  \nend;\xa0  \nif exists(select * from master.sys.server_principals where name = @usr)  \nbegin\xa0\xa0\xa0  \nwhile(1=1)  \nbegin  \nset @id = null;  \nselect @id=session_id from master.sys.dm_exec_sessions where login_name = @usr;  \nif @id is null  \nbreak;\xa0  \nset @q = 'kill '+ cast(@id as varchar);  \nexec(@q);  \nend;\xa0  \nexec('drop login [' + @usr + ']');  \nend;  \nend;\xa0  \nset @q = 'CREATE LOGIN [' + @usr + '] FROM WINDOWS WITH DEFAULT_DATABASE = [NVMonitorData]'  \nexec(@q);\xa0  \nuse master;  \nset @q = 'CREATE USER [' + @usr + '] FOR LOGIN [' + @usr + ']';  \nexec(@q);  \nset @q = 'GRANT VIEW SERVER STATE TO [' + @usr + ']';  \nexec(@q);  \nset @q = 'GRANT ALTER ANY LOGIN TO [' + @usr + ']';  \nexec(@q);  \nset @q = 'GRANT ALTER ANY LINKED SERVER TO [' + @usr + ']';  \nexec(@q);\xa0  \nuse msdb;  \nset @q = 'CREATE USER ['+ @usr + '] FOR LOGIN [' + @usr + ']';  \nexec(@q);  \nset @q = 'exec sp_addrolemember ''SQLAgentOperatorRole'',[' + @usr + ']';  \nexec(@q);  \nset @q = 'GRANT select ON msdb.dbo.sysjobs TO [' + @usr + ']';  \nexec(@q);\xa0  \nuse NVMonitorConfig;  \n-- Uncomment next line on error: The login already has an account under a different user name.  \n-- exec sp_changedbowner 'sa'\xa0  \nset @q = 'CREATE USER [' + @usr + '] FOR LOGIN [' + @usr + ']';  \nexec(@q);  \nset @q = 'exec sp_addrolemember ''db_datareader'',['+@usr+']';  \nexec(@q);  \nset @q = 'exec sp_addrolemember ''db_datawriter'',['+@usr+']';  \nexec(@q);\xa0  \nuse NVMonitorData;  \n/*  \n* To use this list of DB permissions the issue with 'sp_updatestats' should be resolved first  \n*  \n-- Uncomment next line on error: The login already has an account under a different user name.  \n-- exec sp_changedbowner 'sa'  \nset @q = 'CREATE USER [' + @usr + '] FOR LOGIN [' + @usr + '];';  \nexec(@q);  \nset @q = 'exec sp_addrolemember ''db_datareader'',['+@usr+']';  \nexec(@q);  \nset @q = 'exec sp_addrolemember ''db_datawriter'',['+@usr+']';  \nexec(@q);  \nset @q = 'GRANT ALTER ON SCHEMA::dbo TO ['+ @usr +']';  \nexec(@q);\xa0  \nset @q = 'GRANT EXECUTE TO ['+ @usr +']';  \nexec(@q);  \n*/\xa0  \nset @q = 'ALTER AUTHORIZATION ON DATABASE::NVMonitorData TO [' + @usr + ']'  \nexec(@q);\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"CAUTION:"})," Errors may occur if this script designates an existing user for granting Less Privilege Model permissions for database maintenance. This happens because the user is directed to be dropped and subsequently recreated."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"RECOMMENDED:"})})," Rather than using this script as it is, create a dedicated role for this user with required permission based on the recommended best practices."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);