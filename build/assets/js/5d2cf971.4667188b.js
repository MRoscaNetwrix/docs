"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[580342],{28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>a});var i=r(296540);const n={},s=i.createContext(n);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(s.Provider,{value:t},e.children)}},619313:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/deployconfigurationtask/index","title":"Deploy Configuration Task","description":"From a folder, retrieves all configuration xml files to calculate the configuration items to insert, update or delete.","source":"@site/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/deployconfigurationtask/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/deployconfigurationtask","slug":"/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/deployconfigurationtask/","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/deployconfigurationtask/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/deployconfigurationtask/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"Compute Role Model Task","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/computerolemodeltask/"},"next":{"title":"Fulfill Task","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/fulfilltask/"}}');var n=r(474848),s=r(28453);const o={},a="Deploy Configuration Task",c={},l=[{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"deploy-configuration-task",children:"Deploy Configuration Task"})}),"\n",(0,n.jsx)(t.p,{children:"From a folder, retrieves all configuration xml files to calculate the configuration items to insert, update or delete."}),"\n",(0,n.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'\n  <DeployConfigurationTask Identifier="Configuration" DisplayName_L1="Configuration" ConfigurationDirectory="C:/Usercube/Conf"/>\n\n'})}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Property"}),(0,n.jsx)(t.th,{children:"Details"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"ConfigurationDirectory   required"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    String   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Directory of the configuration to import"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"DisplayName_L1   required"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    String   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Display name of the task in language 1 (up to 16)."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"GeneratedCodeNamespace   optional"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    String   ",(0,n.jsx)(t.strong,{children:"Description"}),"   The namespace of the generated code (entities + writer)."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"GeneratedCodePath   optional"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    String   ",(0,n.jsx)(t.strong,{children:"Description"}),"   The path of the generated code (entities + writer)."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"GeneratedFile   optional"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    String   ",(0,n.jsx)(t.strong,{children:"Description"}),"   The path of the xml file in which all the configuration is generated by the scaffoldings."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Identifier   optional"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    String   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Unique identifier of the task."]})]})]})]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);