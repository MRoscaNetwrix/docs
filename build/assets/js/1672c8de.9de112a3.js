"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[803281],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(296540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}},890117:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>g,frontMatter:()=>o,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"groupid/managementshell/group/setgroup","title":"Set-Group","description":"The Set-Group commandlet modifies an unmanaged group in directory. However, you can use this commandlet to modify those parameters of a Smart Group that are native attributes of an unmanaged group in Directory. For modifying Smart Group-specific attributes, you can use the Set-SmartGroup commandlet.","source":"@site/docs/groupid/groupid/managementshell/group/setgroup.md","sourceDirName":"groupid/managementshell/group","slug":"/groupid/managementshell/group/setgroup","permalink":"/docs/groupid/groupid/managementshell/group/setgroup","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/groupid/groupid/managementshell/group/setgroup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"groupIdSidebar","previous":{"title":"Renew-Group","permalink":"/docs/groupid/groupid/managementshell/group/renewgroup"},"next":{"title":"Clear-MessagingServer","permalink":"/docs/groupid/groupid/managementshell/identitystore/clearmessagingserver"}}');var i=t(474848),s=t(28453);const o={},a="Set-Group",d={},u=[{value:"Syntax",id:"syntax",level:2},{value:"Required Parameter",id:"required-parameter",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"set-group",children:"Set-Group"})}),"\n",(0,i.jsxs)(n.p,{children:["The Set-Group commandlet modifies an unmanaged group in directory. However, you can use this commandlet to modify those parameters of a Smart Group that are native attributes of an unmanaged group in Directory. For modifying Smart Group-specific attributes, you can use the ",(0,i.jsx)(n.a,{href:"/docs/groupid/groupid/managementshell/smartgroup/setsmartgroup",children:"Set-SmartGroup"})," commandlet."]}),"\n",(0,i.jsx)(n.p,{children:"You can view events related to this commandlet in Directory Manager portal, against the History node in the left panel."}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Set-Group  \n-Identity <string>  \n[-ExtendGroupLife]  \n[-ExpirationPolicy <int>]  \n[-MsExchCoManagedByLink <string[]>]  \n[-IsExpired <string>]  \n[-GroupScope <string>]  \n[-Type <string>]  \n[-Prefix <string>]  \n[-SecurityType <string>]  \n[-ManagedBy <string[]>]  \n[-MaxSendSize <int>]  \n[-AcceptMessagesOnlyFrom <string[]>]  \n[-RejectMessagesFrom <string[]>]  \n[-AcceptMessagesOnlyFromGroups <string[]>]  \n[-RejectMessagesFromGroup <string[]>]  \n[-AdditionalOwners <string[]>]  \n[-NotifyOptOutAdditionalOwners <string[]>]  \n[-ExpansionServer <string>]  \n[-BypassOwnersPolicy <string>]  \n[-MsExchRequireAuthToSendTo <string>]  \n[-HiddenFromAddressListEnabled <string>]  \n[-SendOofMessageToOriginatorEnabled <string>]  \n[-HideMembershipFromAddressListEnabled <string>]  \n[-ReportToManagerEnabled <string>]  \n[-ReportToOriginatorEnabled <string>]  \n[-UpdateMembershipByManagerEnabled <string>]  \n[-Add <hashtable[]>]  \n[-Remove <hashtable[]>]  \n[-Replace <hashtable[]>]  \n[-Clear <string[]>]  \n[-Department <string>]  \n[-Company <string>]  \n[-Assistant <string>]  \n[-HomePage <string>]  \n[-Alias <string>]  \n[-EmailAddress <string>]  \n[-Description <string>]  \n[-Notes <string>]  \n[-AdministrativeNotes <string>]  \n[-DisplayName <string>]  \n[-SimpleDisplayName <string>]  \n[-CustomAttribute1 <string>]  \n[-CustomAttribute2 <string>]  \n[-CustomAttribute3 <string>]  \n[-CustomAttribute4 <string>]  \n[-CustomAttribute5 <string>]  \n[-CustomAttribute6 <string>]  \n[-CustomAttribute7 <string>]  \n[-CustomAttribute8 <string>]  \n[-CustomAttribute9 <string>]  \n[-CustomAttribute10 <string>]  \n[-CustomAttribute11 <string>]  \n[-CustomAttribute12 <string>]  \n[-CustomAttribute13 <string>]  \n[-CustomAttribute14 <string>]  \n[-CustomAttribute15 <string>]  \n[-Delimiter <string>]  \n[-IdentityStoreId <int>]  \n[-SecurityToken <CustomClaimsPrincipal>]  \n[-Credential <pscredential>]  \n[<CommonParameters>]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"required-parameter",children:"Required Parameter"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Identity"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example 1:"}),"\n",(0,i.jsx)(n.p,{children:"The following command changes the expiration policy of the Training group to 60 days and assigns a manager to the group, using the credentials of current user logged-on to the identity store."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'Set-Group -Identity "CN=Training,OU=Recruiting,DC=HR,DC=Imanami,DC=US" -ExpirationPolicy "60" -ExtendGroupLife -ManagedBy "CN=John Smith,CN=Users,DC=HR,DC=Imanami,DC=US"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Example 2:"}),"\n",(0,i.jsxs)(n.p,{children:["The following command expires the group Training, using the credentials set in the $Credentials environment variable. See the ",(0,i.jsx)(n.a,{href:"/docs/groupid/groupid/managementshell/parameters/setthecredential",children:"Set the $Credentials Environment Variable"})," topic for setting credentials in an environment variable."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'Set-Group -Identity "CN=Training,OU=Recruiting,DC=HR,DC=Imanami,DC=US" -IsExpired True -Credential $Cred\n'})}),"\n",(0,i.jsx)(n.p,{children:"Example 3:"}),"\n",(0,i.jsx)(n.p,{children:"The following command gets all groups in the container Recruiting, clears their additional owner lists and sets their expiration policy to Never Expire. The OUT-NULL commandlet has been used to prevent the retrieved groups information from appearing on the console."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'Get-Group -searchcontainer "OU=Recruiting,DC=HR,DC=Imanami,DC=US" | Set-Group -AdditionalOwners "" -ExpirationPolicy "0" -ExtendGroupLife | OUT-NULL\n'})}),"\n",(0,i.jsx)(n.p,{children:"Example 4:"}),"\n",(0,i.jsx)(n.p,{children:"The following command removes two additional owners from the Training group and adds three new additional owners to the group and excludes an additional owner from receiving e-mail notifications."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'Set-Group -Identity "CN=Training,OU=Recruiting,DC=HR,DC=Imanami,DC=US" -Remove @{AdditionalOwners = "CN=Roger_Manson,OU=ResignedStaff,DC=HR,DC=Imanami,DC=US","KillenEdward"} -Add @{AdditionalOwners = "RobinSoto","MeganFox","DollyChan"} -NotifyOptOutAdditionalOwners "RobinSoto"\n'})})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);