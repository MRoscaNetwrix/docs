"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1964],{28453:(e,o,t)=>{t.d(o,{R:()=>r,x:()=>c});var a=t(296540);const n={},i=a.createContext(n);function r(e){const o=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(i.Provider,{value:o},e.children)}},471266:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>s});const a=JSON.parse('{"id":"policypak/leastprivilege/securerun/avoiduac","title":"Creating Rules to Avoid UAC Prompts and Other Dialogs","description":"Over time, once SecureRun is on, you will likely still get some application attempting to update in the background, which will cause a pop-up explaining a blocking attempt.","source":"@site/docs/policypak/policypak/leastprivilege/securerun/avoiduac.md","sourceDirName":"policypak/leastprivilege/securerun","slug":"/policypak/leastprivilege/securerun/avoiduac","permalink":"/docs/policypak/policypak/leastprivilege/securerun/avoiduac","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/policypak/policypak/leastprivilege/securerun/avoiduac.md","tags":[],"version":"current","frontMatter":{},"sidebar":"policyPakSidebar","previous":{"title":"How can I allow \\"Inline commands\\" blocked by SecureRun when a random path or filename is created each time?","permalink":"/docs/policypak/policypak/leastprivilege/securerun/allowinlinecommands"},"next":{"title":"Least Privilege Manager and SecureRun Implementation Best Practices","permalink":"/docs/policypak/policypak/leastprivilege/securerun/bestpractices"}}');var n=t(474848),i=t(28453);const r={},c="Creating Rules to Avoid UAC Prompts and Other Dialogs",l={},s=[];function p(e){const o={a:"a",h1:"h1",header:"header",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.header,{children:(0,n.jsx)(o.h1,{id:"creating-rules-to-avoid-uac-prompts-and-other-dialogs",children:"Creating Rules to Avoid UAC Prompts and Other Dialogs"})}),"\n",(0,n.jsx)(o.p,{children:"Over time, once SecureRun is on, you will likely still get some application attempting to update in the background, which will cause a pop-up explaining a blocking attempt."}),"\n",(0,n.jsx)(o.p,{children:"Once you have learned which programs are causing the pop-ups, you can decide to create an Allow and Log rule, an Elevate rule, or a Deny rule. The rule type you choose depends on the application and what you\u2019re trying to do."}),"\n",(0,n.jsx)(o.p,{children:"When SecureRun is turned on, the typical action needed is Allow and Log through a command line rule. For instance, to allow Java to attempt to keep updating, you would set a Path Condition and set a rule to Allow and Log a command line."}),"\n",(0,n.jsx)(o.p,{children:"![A screenshot of a computer"}),"\n",(0,n.jsx)(o.p,{children:"Description automatically generated](/img/product_docs/policypak/policypak/leastprivilege/securerun/creating_rules_to_avoid_uac.jpg)"}),"\n",(0,n.jsxs)(o.p,{children:["The example below show a Combo rule enabling OneDriveSetup.exe to keep running (",(0,n.jsx)(o.strong,{children:"Path Condition"})," and ",(0,n.jsx)(o.strong,{children:"Command-line Condition"}),") with the Allow and Log action."]}),"\n",(0,n.jsxs)(o.p,{children:["For more information on Combo rules, see ",(0,n.jsx)(o.a,{href:"/docs/policypak/policypak/leastprivilege/bestpractices/rules/executablecombo",children:"Creating and Using Executable Combo Rules"})]}),"\n",(0,n.jsx)(o.p,{children:"![A screenshot of a computer"}),"\n",(0,n.jsx)(o.p,{children:"Description automatically generated](/img/product_docs/policypak/policypak/leastprivilege/securerun/creating_rules_to_avoid_uac.webp)"}),"\n",(0,n.jsx)(o.p,{children:"![A screenshot of a computer"}),"\n",(0,n.jsx)(o.p,{children:"Description automatically generated](/img/product_docs/policypak/policypak/leastprivilege/securerun/creating_rules_to_avoid_uac_1.jpg)"}),"\n",(0,n.jsx)(o.p,{children:"After the rules are created, you should not see pop-ups from installers with rules in place."})]})}function u(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);