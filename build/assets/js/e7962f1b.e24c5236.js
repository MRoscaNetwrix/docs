"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[510567],{28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>d});var n=r(296540);const i={},s=n.createContext(i);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:t},e.children)}},279208:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/metadata/entitypropertyexpression/index","title":"Entity Property Expression","description":"An entity property expression is a property computed from a binding and/or C# or literal expressions. See the Expressions topic for additional information.","source":"@site/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/metadata/entitypropertyexpression/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/metadata/entitypropertyexpression","slug":"/usercube/integration-guide/toolkit/xml-configuration/metadata/entitypropertyexpression/","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/metadata/entitypropertyexpression/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/metadata/entitypropertyexpression/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSidebar","previous":{"title":"Entity Association","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/metadata/entityassociation/"},"next":{"title":"Entity Type","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/metadata/entitytype/"}}');var i=r(474848),s=r(28453);const o={},d="Entity Property Expression",c={},a=[{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"entity-property-expression",children:"Entity Property Expression"})}),"\n",(0,i.jsxs)(t.p,{children:["An entity property expression is a property computed from a binding and/or C# or literal expressions. See the ",(0,i.jsx)(t.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/expressions/",children:"Expressions"})," topic for additional information."]}),"\n",(0,i.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(t.p,{children:"The following example computes the record display name."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n<EntityPropertyExpression Identifier="Directory_UserRecord_InternalDisplayName" Expression="C#:person:return person.LastName + " " + person.FirstName;"\n    EntityType="Directory_UserRecord" Property="InternalDisplayName" />\n\n'})}),"\n",(0,i.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Property"}),(0,i.jsx)(t.th,{children:"Details"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Binding   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,i.jsx)(t.strong,{children:"Description"}),"   References the binding used to compute the result."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"EntityType   required"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Identifier of the referenced entity type"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Expression   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   References the C# or literal expression used to compute the result. See the ",(0,i.jsx)(t.a,{href:"/docs/usercube/usercube/integration-guide/toolkit/expressions/",children:"Expressions"})," topic for additional information."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Identifier   required"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Unique identifier of the expression."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Priority   default value: 0"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    Int32   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Specifies the execution priority."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Property   required"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Identifier of the referenced entity property"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"PropertyCriteria   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,i.jsx)(t.strong,{children:"Description"}),"   References the property criteria used to compute navigation properties."]})]})]})]})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);