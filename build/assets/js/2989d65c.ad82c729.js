"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[902835],{28453:(e,r,s)=>{s.d(r,{R:()=>t,x:()=>o});var n=s(296540);const i={},a=n.createContext(i);function t(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),n.createElement(a.Provider,{value:r},e.children)}},792122:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>t,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"groupid/managementshell/identitystore/getavailablemessagingservers","title":"Get-AvailableMessagingServers","description":"The commandlet Get-AvailableMessagingServers retrieves the messaging server(s) available for the configured messaging provider.","source":"@site/docs/groupid/groupid/managementshell/identitystore/getavailablemessagingservers.md","sourceDirName":"groupid/managementshell/identitystore","slug":"/groupid/managementshell/identitystore/getavailablemessagingservers","permalink":"/docs/groupid/groupid/managementshell/identitystore/getavailablemessagingservers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/groupid/groupid/managementshell/identitystore/getavailablemessagingservers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"groupIdSidebar","previous":{"title":"Clear-SmtpServer","permalink":"/docs/groupid/groupid/managementshell/identitystore/clearsmtpserver"},"next":{"title":"Get-Client","permalink":"/docs/groupid/groupid/managementshell/identitystore/getclient"}}');var i=s(474848),a=s(28453);const t={},o="Get-AvailableMessagingServers",d={},l=[{value:"Syntax",id:"syntax",level:2},{value:"Required Parameters",id:"required-parameters",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"get-availablemessagingservers",children:"Get-AvailableMessagingServers"})}),"\n",(0,i.jsx)(r.p,{children:"The commandlet Get-AvailableMessagingServers retrieves the messaging server(s) available for the configured messaging provider."}),"\n",(0,i.jsx)(r.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"Get-AvailableMessagingServers  \n-IdentityStoreName <string>  \n-Provider {o365 | gsuite | exchange2013 | exchange2016 | exchange2019}  \n-UserName <string>  \n[-Password <string>]  \n<CommonParameters>]  \nGet-AvailableMessagingServers  \n-IdentityStoreName <string>  \n-Provider {o365 | gsuite | exchange2013 | exchange2016 | exchange2019}  \n-Credential <pscredential>  \n[<CommonParameters>]\n"})}),"\n",(0,i.jsx)(r.h2,{id:"required-parameters",children:"Required Parameters"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"IdentityStoreName"}),"\n",(0,i.jsx)(r.li,{children:"Provider"}),"\n",(0,i.jsx)(r.li,{children:"Credential"}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"Example 1:"}),"\n",(0,i.jsx)(r.p,{children:"This example retrieves the available messaging server(s) configured in AdStore1 identity store for Exchange 2013 messaging provider."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"Get-AvailableMessagingServers -IdentityStoreName AdStore1 -Provider exchange2013 -UserName administrator -Password password123 -Domain pucit.local\n"})}),"\n",(0,i.jsx)(r.p,{children:"Example 2:"}),"\n",(0,i.jsx)(r.p,{children:"This example retrieves the available messaging server(s) configured in Adstore1 identity store for Office365 messaging provider."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"Get-AvailableMessagingServers -IdentityStoreName AdStore1 -Provider o365 -UserName admin@mydomain.onmicrosoft.com -Password password123 -Domain mydomain.onmicrosoft.com -AppId 'eeeeeeee-aaaa-dddd-bbbb-cccccccccccc'\n"})}),"\n",(0,i.jsx)(r.p,{children:"Example 3:"}),"\n",(0,i.jsx)(r.p,{children:"This example retrieves the available messaging server(s) in AdStore1 identity store for GSuite (Google Apps) messaging provider."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"Get-AvailableMessagingServers -IdentityStoreName AdStore1 -Provider gsuite -UserName svcaccount@myproject-219211.iam.gserviceaccount.com -AdminUsername 'arslan@mydomain.com' -P12CertificatePath 'C:\\Keys\\gsuite\\key.p12'\n"})})]})}function g(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);