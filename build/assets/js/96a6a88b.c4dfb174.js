"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[650890],{28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var r=s(296540);const n={},i=r.createContext(n);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(i.Provider,{value:t},e.children)}},926862:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/connectors/passwordresetsettings/index","title":"Password Reset Settings","description":"This set of password reset settings contains the configuration to perform password reset operations such as change, reset, etc.","source":"@site/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/connectors/passwordresetsettings/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/connectors/passwordresetsettings","slug":"/usercube/integration-guide/toolkit/xml-configuration/connectors/passwordresetsettings/","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/connectors/passwordresetsettings/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/connectors/passwordresetsettings/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"Entity Type Mapping","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/connectors/entitytypemapping/"},"next":{"title":"Resource Type Mappings","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/connectors/resourcetypemappings/"}}');var n=s(474848),i=s(28453);const o={},a="Password Reset Settings",d={},c=[{value:"Examples",id:"examples",level:2},{value:"Password length and counts",id:"password-length-and-counts",level:3},{value:"Properties",id:"properties",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"password-reset-settings",children:"Password Reset Settings"})}),"\n",(0,n.jsx)(t.p,{children:"This set of password reset settings contains the configuration to perform password reset operations such as change, reset, etc."}),"\n",(0,n.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.p,{children:"The following example declares a password reset settings."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'\n    <PasswordResetSettings Identifier="default" BeneficiaryEmailBinding="AssignedResourceType:Owner.Directory_User:MainRecord.Mail"\n        BeneficiaryFullNameBinding="AssignedResourceType:Owner.Directory_User:MainRecord.InternalDisplayName"\n        NotifiedEmailBinding="AssignedResourceType:Owner.Directory_User:MainRecord.Organization.Manager.MainRecord.Mail"\n        NotifiedFullNameBinding="AssignedResourceType:Owner.Directory_User:MainRecord.Organization.Manager.MainRecord.InternalDisplayName"\n        Mode="1" DefaultPassword="Usercube@2019" MustChange="true"\n        AutoGenerate="false" DisableNotifications="false" GeneratedLength="12" />\n\n'})}),"\n",(0,n.jsx)(t.h3,{id:"password-length-and-counts",children:"Password length and counts"}),"\n",(0,n.jsx)(t.p,{children:"The following example makes Identity Manager generate a password with at least 12 characters in total, at least 8 lowercase characters, 4 uppercase characters, 2 digits and 2 symbols."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'\n<PasswordResetSettings AutoGenerate="true" GeneratedLength="12" GeneratedLowerCaseCharsCount="8" GeneratedUpperCaseCharsCount="4" GeneratedDigitCharsCount="2" GeneratedSymbolCharsCount="2"/>\n\n'})}),"\n",(0,n.jsx)(t.p,{children:"As the total of all counts (16) is greater than the length (12), the password length will be the count total (16)."}),"\n",(0,n.jsx)(t.p,{children:"The following example makes Identity Manager\xa0generate a password with at least 12 characters in total, at least 8 lowercase characters, 4 uppercase characters, 2 digits and 2 symbols."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'\n<PasswordResetSettings AutoGenerate="true" GeneratedLength="8" GeneratedLowerCaseCharsCount="1" GeneratedUpperCaseCharsCount="1" GeneratedDigitCharsCount="1" GeneratedSymbolCharsCount="1"/>\n\n'})}),"\n",(0,n.jsx)(t.p,{children:"As the total of all counts (4) is lower than the length (8), the password will be generated with 8 characters, among them 1 lowercase character, 1 uppercase character, 1 digit, 1 symbol, and 4 more random characters."}),"\n",(0,n.jsxs)(t.p,{children:["The generated password's strength can also be checked via a regular expression (regex) through ",(0,n.jsx)(t.code,{children:"StrengthCheck"}),". Thus, the following example makes Identity Manager\xa0generate a password with at least 9 characters including at least one digit, one lowercase letter, one uppercase and one special character."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"\n<PasswordResetSettings AutoGenerate=\"true\" StrengthCheck=\"'^..........*$','^.*[0-9].*$', '^.*[a-z].*$', '^.*[A-Z].*$', '^.*[^A-Za-z0-9].*$'\"/>\n\n"})}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Property"}),(0,n.jsx)(t.th,{children:"Details"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"AutoGenerate   default value: false"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    Boolean   ",(0,n.jsx)(t.strong,{children:"Description"}),"   ",(0,n.jsx)(t.code,{children:"true"})," to make Identity Manager generate the password automatically."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"BeneficiaryEmailBinding   optional"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Binding to the email address property whose password is to be reset."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"BeneficiaryFullNameBinding   optional"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Binding to the full name property of the user(s) whose password is to be reset."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"DefaultPassword   optional"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    String   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Default password to set when ",(0,n.jsx)(t.code,{children:"AutoGenerate"})," is set to ",(0,n.jsx)(t.code,{children:"false"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"DisableNotifications   default value: false"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    Boolean   ",(0,n.jsx)(t.strong,{children:"Description"}),"   ",(0,n.jsx)(t.code,{children:"true"})," to disable the mailing of notifications concerning password reset."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"GeneratedDigitCharsCount   default value: 2"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    Int32   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Number of digit characters in the password generated by Identity Manager\xa0when ",(0,n.jsx)(t.code,{children:"AutoGenerate"})," is set to ",(0,n.jsx)(t.code,{children:"true"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"GeneratedLength   default value: 12"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    Int32   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Length of the password generated by Identity Manager\xa0when ",(0,n.jsx)(t.code,{children:"AutoGenerate"})," is set to ",(0,n.jsx)(t.code,{children:"true"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"GeneratedLowerCaseCharsCount   default value: 6"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    Int32   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Number of lower case characters in the password generated by Identity Manager\xa0when ",(0,n.jsx)(t.code,{children:"AutoGenerate"})," is set to ",(0,n.jsx)(t.code,{children:"true"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"GeneratedSymbolCharsCount   default value: 2"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    Int32   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Number of symbol characters in the password generated by Identity Manager\xa0when ",(0,n.jsx)(t.code,{children:"AutoGenerate"})," is set to ",(0,n.jsx)(t.code,{children:"true"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"GeneratedUpperCaseCharsCount   default value: 2"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    Int32   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Number of upper case characters in the password generated by Identity Manager\xa0when ",(0,n.jsx)(t.code,{children:"AutoGenerate"})," is set to ",(0,n.jsx)(t.code,{children:"true"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Identifier   required"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    String   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Identifier of the set of password reset settings."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Mode   default value: 0"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Mode used by the password reset service.   ",(0,n.jsx)(t.code,{children:"0"})," - Disabled.   ",(0,n.jsx)(t.code,{children:"1"})," - One-Way.   ",(0,n.jsx)(t.code,{children:"2"})," - Two-Way."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"MustChange   default value: false"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    Boolean   ",(0,n.jsx)(t.strong,{children:"Description"}),"   ",(0,n.jsx)(t.code,{children:"true"})," to force users to modify their passwords on the first login."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"NotificationCC   optional"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    String   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Email address to set as CC recipient of all password reset notifications."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"NotifiedEmailBinding   optional"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Binding to the email address property of the person to be notified."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"NotifiedFullNameBinding   optional"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Binding to the full name property of the person to be notified."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"StrengthCheck   optional"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Type"}),"    String   ",(0,n.jsx)(t.strong,{children:"Description"}),"   Regular expression (regex) that generated passwords must match, when ",(0,n.jsx)(t.code,{children:"AutoGenerate"})," is set to ",(0,n.jsx)(t.code,{children:"true"}),".   ",(0,n.jsx)(t.strong,{children:"Note:"})," the strength of passwords set manually by users can be configured via ",(0,n.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/metadata/settings/passwordtestssetting/",children:" Password Tests Setting "}),"."]})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);