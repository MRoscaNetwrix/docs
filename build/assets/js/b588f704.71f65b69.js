"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[782145],{28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>l});var n=r(296540);const s={},i=n.createContext(s);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(i.Provider,{value:t},e.children)}},258794:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/metadata/settings/selectpersonasbyfilterqueryhandlersetting/index","title":"Select Personas by Filter Query Handler Setting","description":"This setting is used to filter the entity type used by authentication mechanism.","source":"@site/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/metadata/settings/selectpersonasbyfilterqueryhandlersetting/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/metadata/settings/selectpersonasbyfilterqueryhandlersetting","slug":"/usercube/integration-guide/toolkit/xml-configuration/metadata/settings/selectpersonasbyfilterqueryhandlersetting/","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/metadata/settings/selectpersonasbyfilterqueryhandlersetting/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/metadata/settings/selectpersonasbyfilterqueryhandlersetting/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"Select All Performed by Association Query Handler Setting","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/metadata/settings/selectallperformedbyassociationqueryhandlersetting/"},"next":{"title":"Select User by Identity Query Handler Setting","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/metadata/settings/selectuserbyidentityqueryhandlersetting/"}}');var s=r(474848),i=r(28453);const o={},l="Select Personas by Filter Query Handler Setting",a={},d=[{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"select-personas-by-filter-query-handler-setting",children:"Select Personas by Filter Query Handler Setting"})}),"\n",(0,s.jsx)(t.p,{children:"This setting is used to filter the entity type used by authentication mechanism."}),"\n",(0,s.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(t.p,{children:["Code attributes enclosed with ",(0,s.jsx)(t.code,{children:"<>"})," need to be replaced with a custom value before entering the script in the command line."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'\xa0\xa0\xa0\xa0<SelectPersonasByFilterQueryHandlerSetting ResourceDisplayNameProperty="AD_Entry:displayName" PersonTypeFilterProperty="AD_Entry:objectCategory" PersonTypeFilter="Person" />\n'})}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Property"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Identifier   default value: SelectPersonasByFilterQueryHandler"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Unique identifier of the setting."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"MailProperty   optional"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsxs)(t.td,{children:["Defines the mail property.  ",(0,s.jsx)(t.strong,{children:"NOTE:"})," Required to receive the email for two-way password reset, when relevant."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"OwnerPhotoTagProperty   optional"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Defines the photo tag property."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"PersonTypeFilter   optional"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsxs)(t.td,{children:["Defines the value of the property ",(0,s.jsx)(t.code,{children:"PersonTypeFilterProperty"})," that needs to be matched to get elements."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"PersonTypeFilterProperty   optional"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Defines the filter property."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"PhotoProperty   optional"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Defines the photo property."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"ResourceDisplayNameProperty   optional"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Represents the display property."})]})]})]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);