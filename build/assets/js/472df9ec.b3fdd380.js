"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[210237],{28453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>o});var s=n(296540);const t={},i=s.createContext(t);function a(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:r},e.children)}},528083:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"groupid/admincenter/general/concepts","title":"Group Management Concepts","description":"To make the best of Directory Manager, you must be familiar with the following group management concepts:","source":"@site/docs/groupid/groupid/admincenter/general/concepts.md","sourceDirName":"groupid/admincenter/general","slug":"/groupid/admincenter/general/concepts","permalink":"/docs/groupid/groupid/admincenter/general/concepts","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/groupid/groupid/admincenter/general/concepts.md","tags":[],"version":"current","frontMatter":{},"sidebar":"groupIdSidebar","previous":{"title":"Change your Password","permalink":"/docs/groupid/groupid/admincenter/general/changepassword"},"next":{"title":"Dashboard","permalink":"/docs/groupid/groupid/admincenter/general/dashboard"}}');var t=n(474848),i=n(28453);const a={},o="Group Management Concepts",l={},c=[{value:"Group Classification",id:"group-classification",level:2},{value:"Unmanaged Groups",id:"unmanaged-groups",level:3},{value:"Smart Groups",id:"smart-groups",level:3},{value:"Dynasties",id:"dynasties",level:3},{value:"The Group-by Field Determines Child Groups",id:"the-group-by-field-determines-child-groups",level:4},{value:"Built-in Updates",id:"built-in-updates",level:4},{value:"The Parent-child Relationship",id:"the-parent-child-relationship",level:4},{value:"Dynasty Types",id:"dynasty-types",level:4},{value:"Group Types",id:"group-types",level:2},{value:"Distribution Groups",id:"distribution-groups",level:3},{value:"Security Groups",id:"security-groups",level:3},{value:"Group Scope",id:"group-scope",level:2},{value:"Universal",id:"universal",level:3},{value:"Global",id:"global",level:3},{value:"Domain Local",id:"domain-local",level:3},{value:"Group Security Types",id:"group-security-types",level:2}];function d(e){const r={a:"a",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"group-management-concepts",children:"Group Management Concepts"})}),"\n",(0,t.jsx)(r.p,{children:"To make the best of Directory Manager, you must be familiar with the following group management concepts:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#Group-Classification",children:"Group Classification"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#Group-Types",children:"Group Types"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#Group-Scope",children:"Group Scope"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#Group-Security-Types",children:"Group Security Types"})}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"group-classification",children:"Group Classification"}),"\n",(0,t.jsx)(r.p,{children:"Using Directory Manager, you can manage the following three kinds of groups:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#Unmanaged-Groups",children:"Unmanaged Groups"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#Smart-Groups",children:"Smart Groups"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#Dynasties",children:"Dynasties"})}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"unmanaged-groups",children:"Unmanaged Groups"}),"\n",(0,t.jsx)(r.p,{children:"An unmanaged group, also called a static group, is a group you normally create in a directory, for example, by using the Active Directory Users and Computers console. Though such groups can be created using the Directory Manager portal and Management Shell,\nDirectory Manager does not support dynamic updates to them. Any changes to the membership have to be updated manually."}),"\n",(0,t.jsx)(r.h3,{id:"smart-groups",children:"Smart Groups"}),"\n",(0,t.jsx)(r.p,{children:"A Smart Group is one that dynamically maintains its membership based on rules. These rules are applied in the form of a user-defined query, such as an LDAP query. This query is defined once and scheduled for membership update using a Smart Group Update\nschedule. When the schedule runs, it applies the defined rules to the directory and fetches matching records to update the group's memberships."}),"\n",(0,t.jsx)(r.p,{children:"In this way, Smart Groups are automatically updated whenever the user information changes in the directory. This automated group management allows administrators to easily maintain large distribution lists and security groups without having to manually\nadd or remove members."}),"\n",(0,t.jsx)(r.h3,{id:"dynasties",children:"Dynasties"}),"\n",(0,t.jsx)(r.p,{children:"A Dynasty is a Smart Group that creates and manages other Smart Groups using information in the directory. Dynasties help you manage large distribution lists by creating hierarchical group structures that represent your organization. The Smart Groups\nthat the Dynasty creates are called child groups and become members of their respective parent Dynasty."}),"\n",(0,t.jsx)(r.p,{children:"A Dynasty retrieves data from the directory on the same pattern as a Smart Group does, but it has its own mechanism of dividing the query results into child groups."}),"\n",(0,t.jsx)(r.h4,{id:"the-group-by-field-determines-child-groups",children:"The Group-by Field Determines Child Groups"}),"\n",(0,t.jsx)(r.p,{children:"When you create a Dynasty, you specify a query and a field, referred to as the group-by field. The group-by field is used to divide the query results into groups."}),"\n",(0,t.jsx)(r.p,{children:"For example, if you set \u2018department\u2019 as the group-by field, then each distinct value for the \u2018department\u2019 field is returned, for instance, Sales, Marketing, and Human Resources. Thus, a Dynasty with the group-by field set to \u2018department\u2019 creates child\ngroups for each distinct value: Sales, Marketing, and Human Resources."}),"\n",(0,t.jsx)(r.h4,{id:"built-in-updates",children:"Built-in Updates"}),"\n",(0,t.jsx)(r.p,{children:"Directory Manager keeps the Dynasty active in two ways:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"By adding new child groups as new values are returned for the group-by field."}),"\n",(0,t.jsx)(r.li,{children:"By removing existing child groups as previous values of the group-by field no longer exist in the directory."}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"Thus, as new values of the \u2018department\u2019 field appear, new groups are created, and as old values disappear, the corresponding child groups are deleted."}),"\n",(0,t.jsx)(r.p,{children:"The same process occurs with the membership of each child group. When a user\u2019s department changes from Sales to Marketing, for example, the user is removed from the Sales child group and added to the Marketing child group."}),"\n",(0,t.jsx)(r.h4,{id:"the-parent-child-relationship",children:"The Parent-child Relationship"}),"\n",(0,t.jsx)(r.p,{children:"Dynasty children inherit their parent's characteristics and properties, such as group type, group security, expiry policy, owner, delivery restrictions, message size restrictions and more. Inheritance saves administrators incalculable time through\nthe systematic application of predefined properties to new groups."}),"\n",(0,t.jsx)(r.p,{children:"You can modify the values of all inherited attributes for a child, except the expiry policy. Child Dynasties always inherit the expiry policy from the parent Dynasty and it can only be modified at the parent level."}),"\n",(0,t.jsx)(r.h4,{id:"dynasty-types",children:"Dynasty Types"}),"\n",(0,t.jsx)(r.p,{children:"Directory Manager provides the following templates for creating Dynasties:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Organizational - To create a Smart Group for every distinct company, then for each department within a company, and finally for each title in a department."}),"\n",(0,t.jsx)(r.li,{children:"Geographical - To create a Smart Group for every distinct country, then for each state within a country, and finally for each city within a state."}),"\n",(0,t.jsx)(r.li,{children:"Managerial - To either create separate Smart Groups for the direct reports of each manager or add all direct reports of the top manager and sub-level managers to a single group."}),"\n",(0,t.jsx)(r.li,{children:"Custom - To begin with a blank Dynasty and select your own group-by attributes."}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"These templates provide predefined group-by attributes for creating Dynasty levels. You can also define custom group-by attributes to expand the Dynasty levels to suit your organizational model. You can also combine an external data source with the\ntemplates to provide extended criteria for determining group membership."}),"\n",(0,t.jsx)(r.h2,{id:"group-types",children:"Group Types"}),"\n",(0,t.jsx)(r.p,{children:"Groups fall into two functional categories: distribution groups and security groups."}),"\n",(0,t.jsx)(r.h3,{id:"distribution-groups",children:"Distribution Groups"}),"\n",(0,t.jsx)(r.p,{children:"Distribution groups, also called distribution lists, are designed to combine users together so that you can send emails (via a mail server) to a group rather than individually to each user in the group."}),"\n",(0,t.jsx)(r.p,{children:"Distribution groups can be used only with email applications, such as Microsoft Exchange. These groups are not security-enabled, which means that they cannot be listed in discretionary access control lists (DACLs). If you need a group for controlling\naccess to shared resources, create a security group."}),"\n",(0,t.jsx)(r.h3,{id:"security-groups",children:"Security Groups"}),"\n",(0,t.jsx)(r.p,{children:"Security groups provide an efficient way to assign access to resources on your network. Using security groups, you can:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Assign user rights - User rights are assigned to security groups to determine what members of that group can do within the scope of a domain (or forest). For example, a user who is added to the Backup Operators group can back-up and restore files and directories located\non each domain controller in the domain. By being a member of this group, you inherit the user rights assigned to the group."}),"\n",(0,t.jsx)(r.li,{children:"Assign permissions to resources - This is different from user rights because user rights apply across an entire domain versus permissions that are directed to a specific entity. Permissions determine who can access the resource and the level of access, such as Full Control or Read-only."}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"Security groups can also be used as a distribution group in Exchange. These are known as security-enabled distribution groups."}),"\n",(0,t.jsx)(r.h2,{id:"group-scope",children:"Group Scope"}),"\n",(0,t.jsx)(r.p,{children:"Groups are characterized by a scope that identifies the extent to which the group is applied in a domain or forest. The boundary, or reach, of a group scope is also determined by the domain functional level of the domain in which it resides."}),"\n",(0,t.jsx)(r.p,{children:"A group\u2019s scope determines:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"the domains from where members can be added to the group"}),"\n",(0,t.jsx)(r.li,{children:"the domains where the group can be used to grant permissions"}),"\n",(0,t.jsx)(r.li,{children:"the domains where the group can be nested in other groups"}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"A group can be of universal, global, or domain local scope."}),"\n",(0,t.jsx)(r.h3,{id:"universal",children:"Universal"}),"\n",(0,t.jsx)(r.p,{children:"Use groups with universal scope to consolidate groups that span domains. To do this, add the accounts to groups with global scope, and then nest these groups within groups that have universal scope. When you use this strategy, any membership changes\nin the groups that have global scope do not affect the groups with universal scope."}),"\n",(0,t.jsx)(r.p,{children:"Do not change the membership of a group with universal scope frequently, because membership changes cause the entire membership of the group to be replicated to every global catalog in the forest."}),"\n",(0,t.jsx)(r.h3,{id:"global",children:"Global"}),"\n",(0,t.jsx)(r.p,{children:"Use groups with global scope to manage directory objects that require daily maintenance, such as user and computer accounts. Because groups with global scope are not replicated outside their own domain, you can change accounts in a group having global\nscope frequently without generating replication traffic to the global catalog."}),"\n",(0,t.jsx)(r.p,{children:"As a best practice, you should use global groups or universal groups rather than domain local groups when you specify permissions on domain directory objects that are replicated to the global catalog."}),"\n",(0,t.jsx)(r.p,{children:"A global group can contain users, computers, and groups from the same domain but not universal groups."}),"\n",(0,t.jsx)(r.h3,{id:"domain-local",children:"Domain Local"}),"\n",(0,t.jsx)(r.p,{children:"Groups with domain local scope help you define and manage access to resources within a single domain. For example, to give five users access to a printer, you can add all five user accounts in the printer permissions list."}),"\n",(0,t.jsx)(r.p,{children:"A domain local group can contain users, computers, global groups, and universal groups from any domain in the forest and any trusted domain, as well as domain local groups from the same domain. Such a group can be a member of any domain local group\nin the same domain."}),"\n",(0,t.jsx)(r.h2,{id:"group-security-types",children:"Group Security Types"}),"\n",(0,t.jsx)(r.p,{children:"A group\u2019s security type determines how non-members can access the group and become its members. Directory Manager provides three security types:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Private - to restrict access to the group to members selected by the group owner. Only the owner can add or remove members from the group. Requests to join or leave the group cannot be submitted."}),"\n",(0,t.jsx)(r.li,{children:"Semi-Private - to restrict access to the group to members selected by the group owner. However, requests to join or leave the group can be sent to the owner."}),"\n",(0,t.jsx)(r.li,{children:"Public - to allow all users to access the group. Users can join or leave the group at will and do not require any permissions to do so. The administrator can configure email notifications to be sent to the group owner when a user joins or leaves the group."}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);