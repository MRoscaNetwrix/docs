"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[567232],{28453:(e,i,o)=>{o.d(i,{R:()=>r,x:()=>c});var n=o(296540);const t={},l=n.createContext(t);function r(e){const i=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(l.Provider,{value:i},e.children)}},952015:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>s});const n=JSON.parse('{"id":"threatprevention/api/policy","title":"Policy APIs","description":"Policies are used in Threat Prevention to define the objects and events to be monitored or blocked in your environment, where to monitor on the network, and when to monitor.","source":"@site/docs/threatprevention/threatprevention/api/policy.md","sourceDirName":"threatprevention/api","slug":"/threatprevention/api/policy","permalink":"/docs/threatprevention/threatprevention/api/policy","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/threatprevention/threatprevention/api/policy.md","tags":[],"version":"current","frontMatter":{},"sidebar":"threatPreventionSidebar","previous":{"title":"PowerShell API\xa0Integration","permalink":"/docs/threatprevention/threatprevention/api/overview"},"next":{"title":"Netwrix Threat Manager APIs","permalink":"/docs/threatprevention/threatprevention/api/threatmanager"}}');var t=o(474848),l=o(28453);const r={},c="Policy APIs",a={},s=[{value:"Get Policy",id:"get-policy",level:2},{value:"Enable or Disable a Policy",id:"enable-or-disable-a-policy",level:2},{value:"Delete a Policy",id:"delete-a-policy",level:2},{value:"Add or Modify Policies",id:"add-or-modify-policies",level:2},{value:"Export Policies to an XML File",id:"export-policies-to-an-xml-file",level:3},{value:"Import Policies from an XML File",id:"import-policies-from-an-xml-file",level:3}];function d(e){const i={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"policy-apis",children:"Policy APIs"})}),"\n",(0,t.jsx)(i.p,{children:"Policies are used in Threat Prevention to define the objects and events to be monitored or blocked in your environment, where to monitor on the network, and when to monitor."}),"\n",(0,t.jsx)(i.p,{children:"You can use APIs to perform the following functions:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Get Policy"}),"\n",(0,t.jsx)(i.li,{children:"Enable or Disable a Policy"}),"\n",(0,t.jsx)(i.li,{children:"Delete a Policy"}),"\n",(0,t.jsx)(i.li,{children:"Add or Modify Policies"}),"\n",(0,t.jsx)(i.li,{children:"Export Policies to an XML File"}),"\n",(0,t.jsx)(i.li,{children:"Import Policies from an XML File"}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"get-policy",children:"Get Policy"}),"\n",(0,t.jsxs)(i.p,{children:["The ",(0,t.jsx)(i.code,{children:"Get-SIPolicy"})," command is used to return a list of policy names, the GUID, and their associated policy ID numbers."]}),"\n",(0,t.jsx)(i.h2,{id:"enable-or-disable-a-policy",children:"Enable or Disable a Policy"}),"\n",(0,t.jsxs)(i.p,{children:["The ",(0,t.jsx)(i.code,{children:"Enable-SIPolicy"})," command is used to enable or disable a policy using the policy ID retrieved in the ",(0,t.jsx)(i.code,{children:"Get-SIPolicy"})," command. Both the following parameters are required:"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"PolicyID [uint32] \u2013 Policy ID"}),"\n",(0,t.jsxs)(i.li,{children:["Enable [Bool]","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"1 to enable"}),"\n",(0,t.jsx)(i.li,{children:"0 to disable"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"Example of an enable policy command:"}),"\n",(0,t.jsx)(i.p,{children:'Enable-SIPolicy -PolicyID "255" \u2013Enable 1'}),"\n",(0,t.jsx)(i.p,{children:"Example of a disable policy command:"}),"\n",(0,t.jsx)(i.p,{children:'Enable-SIPolicy -PolicyID "255" -Enable 0'}),"\n",(0,t.jsx)(i.h2,{id:"delete-a-policy",children:"Delete a Policy"}),"\n",(0,t.jsxs)(i.p,{children:["The ",(0,t.jsx)(i.code,{children:"Remove-SIPolicy"})," command is used to delete a policy using the policy ID retrieved in the ",(0,t.jsx)(i.code,{children:"Get-SIPolicy"})," command. The following parameter is required:"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"PolicyID [uint32] \u2013 Policy ID"}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"Example of a delete policy command:"}),"\n",(0,t.jsx)(i.p,{children:'Remove-SIPolicy -PolicyID "255"'}),"\n",(0,t.jsx)(i.h2,{id:"add-or-modify-policies",children:"Add or Modify Policies"}),"\n",(0,t.jsxs)(i.p,{children:["The ",(0,t.jsx)(i.code,{children:"Export-SIPolicy"})," and",(0,t.jsx)(i.code,{children:" Import-SIPolicy"})," commands can be used to export and edit the XML file of an existing policy, and then import (add or replace) the edited policy. See the ",(0,t.jsx)(i.a,{href:"/docs/threatprevention/threatprevention/api/overview#not-a-policy-xml-expert",children:"Not a Policy XML Expert"})," topic for additional information on policy layout and how to make changes to the XML."]}),"\n",(0,t.jsx)(i.h3,{id:"export-policies-to-an-xml-file",children:"Export Policies to an XML File"}),"\n",(0,t.jsxs)(i.p,{children:["The ",(0,t.jsx)(i.code,{children:"Export-SIPolicy"})," command retrieves the specified policy or policies as an XML file from Threat Prevention into PowerShell or a specified location if you use PowerShell file redirection. The data produced by this command is identical in format to that produced by the Administration Console export function. See the ",(0,t.jsx)(i.a,{href:"/docs/threatprevention/threatprevention/admin/tools/exportpoliciestemplates",children:"Export Policies and Templates Window"})," topic for additional information."]}),"\n",(0,t.jsx)(i.p,{children:"The following parameter(s) are required:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"PolicyIDs [String] \u2013 List of comma separated policy IDs"}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"Example of multiple policy exports that are displayed in the PowerShell Console:"}),"\n",(0,t.jsx)(i.p,{children:'Export-SIPolicy -PolicyIDs "111,222,33,555"'}),"\n",(0,t.jsx)(i.p,{children:"Example of a single policy export to a file:"}),"\n",(0,t.jsx)(i.p,{children:'Export-SIPolicy -PolicyIDs "255" >>c:\\Import\\ExampleExport1.xml'}),"\n",(0,t.jsx)(i.h3,{id:"import-policies-from-an-xml-file",children:"Import Policies from an XML File"}),"\n",(0,t.jsxs)(i.p,{children:["The ",(0,t.jsx)(i.code,{children:"Import-SIPolicy"})," command imports a policy into the Enterprise Manager from an external XML file. This command is used to replace/modify an existing policy or create a new one. The data produced by this command is identical in format to that produced by the Administration Console import function. See the ",(0,t.jsx)(i.a,{href:"/docs/threatprevention/threatprevention/admin/tools/import",children:"Import Window"})," topic for additional information."]}),"\n",(0,t.jsxs)(i.p,{children:["During the import process, the ",(0,t.jsx)(i.code,{children:"Import-SIPolicy"}),"command checks existing policy GUIDs against the GUIDs in the XML file. One of the following actions occur:"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"XML file GUID matches existing policy \u2013 Updates the existing policy to match the new XML settings and fields"}),"\n",(0,t.jsx)(i.li,{children:"XML file GUID does not match any existing policies \u2013 New policy is created according to the XML parameters. It is created with a system generated GUID and Policy ID; the system discards the GUID and Policy ID from the source XML."}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"NOTE:"})," If an existing policy and a new policy in the pending XML import file share the same policy name, an error is displayed and the existing policy remains unchanged."]}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.em,{children:(0,t.jsx)(i.strong,{children:"RECOMMENDED:"})})," Provide a unique, descriptive name for any new policies."]}),"\n",(0,t.jsx)(i.p,{children:"The following parameter is required:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"FileName [String] \u2013 Path to file with valid XML content"}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:["Policies exported from the ",(0,t.jsx)(i.a,{href:"/docs/threatprevention/threatprevention/admin/policies/overview",children:"Policies Interface"})," have the option to be password protected. When importing these policies, the following parameter is required along with the FileName:"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Pwd [String] \u2013 Password if importing a policy that was exported from the Administration Console with a password"}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"Example of adding an import XML file:"}),"\n",(0,t.jsx)(i.p,{children:'Import-SIPolicy -FileName "c:\\Import\\ExampleImport2.xml"'}),"\n",(0,t.jsx)(i.p,{children:"The API returns as output the PolicyID, GUID, and Policy Name of the policy that has been updated or created. If a new policy was created, it is up to the user to capture the Policy ID and Policy GUID assigned by Threat Prevention in order to later access that policy."}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.em,{children:"Remember,"}),"  the Policy ID and Policy GUID is not the same as those in the source XML file. Use the ",(0,t.jsx)(i.code,{children:"Get-SIPolicy"})," API call to find the newly created policy and its associated GUID and Policy ID by the name."]})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);