"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[768029],{28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(296540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},194843:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"usercube/integration-guide/network-configuration/index","title":"Network Configuration","description":"Identity Manager\'s network technical configuration includes:","source":"@site/docs/usercube_saas/usercube/integration-guide/network-configuration/index.md","sourceDirName":"usercube/integration-guide/network-configuration","slug":"/usercube/integration-guide/network-configuration/","permalink":"/docs/usercube_saas/usercube/integration-guide/network-configuration/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/network-configuration/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"References: Logs","permalink":"/docs/usercube_saas/usercube/integration-guide/monitoring/references/"},"next":{"title":"Agent Configuration","permalink":"/docs/usercube_saas/usercube/integration-guide/network-configuration/agent-configuration/"}}');var s=i(474848),r=i(28453);const o={},a="Network Configuration",c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Write Settings",id:"write-settings",level:2},{value:"Sets, sections and values",id:"sets-sections-and-values",level:3},{value:"Configuration files",id:"configuration-files",level:3},{value:"Reminder",id:"reminder",level:4},{value:"Environment variables",id:"environment-variables",level:3},{value:"Manage Several Environments",id:"manage-several-environments",level:2},{value:"Using files",id:"using-files",level:3},{value:"Using environment variables",id:"using-environment-variables",level:3},{value:"Configuration stages",id:"configuration-stages",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"network-configuration",children:"Network Configuration"})}),"\n",(0,s.jsx)(n.p,{children:"Identity Manager's network technical configuration includes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Database connection"}),"\n",(0,s.jsx)(n.li,{children:"Managed systems connection"}),"\n",(0,s.jsx)(n.li,{children:"Synchronization and fulfillment processes"}),"\n",(0,s.jsx)(n.li,{children:"End-user authentication"}),"\n",(0,s.jsx)(n.li,{children:"Logging"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(n.p,{children:"Configuration settings are saved in configuration files or in the host system's environment variables."}),"\n",(0,s.jsx)(n.p,{children:"Configuration settings are detailed further in the following sections:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Server configuration, including connection to the database and end-user authentication. See the ",(0,s.jsx)(n.a,{href:"/docs/usercube_saas/usercube/integration-guide/network-configuration/server-configuration/",children:"Server Configuration"})," topic for additional information."]}),"\n",(0,s.jsxs)(n.li,{children:["Agent configuration, including connection to the managed systems. See the ",(0,s.jsx)(n.a,{href:"/docs/usercube_saas/usercube/integration-guide/network-configuration/agent-configuration/",children:"\nAgent Configuration\n"})," topic for additional information."]}),"\n",(0,s.jsxs)(n.li,{children:["Monitoring, indicating how to set up monitoring for Identity Manager. See the ",(0,s.jsx)(n.a,{href:"/docs/usercube_saas/usercube/integration-guide/monitoring/",children:"\nMonitoring\n"}),"topic for additional information."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"write-settings",children:"Write Settings"}),"\n",(0,s.jsx)(n.p,{children:"How to write settings for the network configuration."}),"\n",(0,s.jsx)(n.h3,{id:"sets-sections-and-values",children:"Sets, sections and values"}),"\n",(0,s.jsx)(n.p,{children:"Configuration setting values are organized by functionality into three sets:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["The Server's appsettings set gathers general-purpose settings for the Server (including database connection and end-user authentication). See the ",(0,s.jsx)(n.a,{href:"/docs/usercube_saas/usercube/integration-guide/network-configuration/server-configuration/",children:"Server Configuration"})," topic for additional information."]}),"\n",(0,s.jsxs)(n.li,{children:["The Agent's appsettings set gathers general-purpose settings for the Agent executable process. See the ",(0,s.jsx)(n.a,{href:"/docs/usercube_saas/usercube/integration-guide/network-configuration/agent-configuration/appsettings/",children:"Application Settings"})," topic for additional information."]}),"\n",(0,s.jsxs)(n.li,{children:["The appsettings.agent set gathers settings for the Agent's connection to the managed systems. See the ",(0,s.jsx)(n.a,{href:"/docs/usercube_saas/usercube/integration-guide/network-configuration/agent-configuration/appsettings-agent/",children:"appsettings.agent"})," topic for additional information."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Each set can be seen as a ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Tree_(data_structure)",children:"tree-like structure"})," where leaves are a name-value pair: the name of the setting and the value of the setting."]}),"\n",(0,s.jsx)(n.p,{children:"Within a Configuration Set Tree, settings are organized into meaningful sections which can be further organized into subsections, leading to a tree-like structure where sections are nodes. For example, settings involving end-user authentication are gathered in the Authentication section, containing another subsection for every authentication method such as OpenId or OAuth."}),"\n",(0,s.jsx)(n.p,{children:"This means that every setting value either belongs to the settings root node or to a section, itself belonging to a parent section."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"tree like structure",src:i(803361).A+"",width:"1555",height:"797"})}),"\n",(0,s.jsx)(n.h3,{id:"configuration-files",children:"Configuration files"}),"\n",(0,s.jsxs)(n.p,{children:["Settings can be written as ",(0,s.jsx)(n.code,{children:"json"})," objects stored in ",(0,s.jsx)(n.code,{children:".json"})," files in the Server or Agent working directory."]}),"\n",(0,s.jsx)(n.p,{children:"Relevant files for the Server can be found in the Server working directory:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"appsettings.json"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Relevant files for the Agent can be found in its working directory:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"appsettings.json"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"appsettings.agent.json"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"appsettings.encrypted.agent.json"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"appsettings.cyberArk.agent.json"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Each setting file is organized into several sections as shown in the Sets, Sections and values diagram. See the ",(0,s.jsx)(n.a,{href:"/docs/usercube_saas/usercube/integration-guide/architecture/",children:"\nArchitecture\n"})," topic for additional information."]}),"\n",(0,s.jsxs)(n.p,{children:["Each section's name matches a top level attribute of the file's ",(0,s.jsx)(n.code,{children:"json"})," object."]}),"\n",(0,s.jsx)(n.p,{children:"The section content is written as the matching attribute's value which can be broken down into a set of setting attributes and subsection attributes."}),"\n",(0,s.jsx)(n.p,{children:"Each subsection can then be broken down into more setting attributes and deeper nested subsections."}),"\n",(0,s.jsxs)(n.p,{children:["Code attributes enclosed with ",(0,s.jsx)(n.code,{children:"<>"})," need to be replaced with a custom value before entering the script in the command line."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'settings.example.json  \n{  \n\xa0\xa0\xa0"sectionA": {  \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0"subsectionnameA1":{  \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0"settingnameA11":"settingA11value",  \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0"settingnameA12":"settingA12value"  \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0},  \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0"settingnameA2": "settingvalueA2",  \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0},  \n\xa0\xa0\xa0"sectionB": {  \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0"settingnameB1": "settingB1value",  \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0"settingnameB2": "settingB2value"  \n\xa0\xa0\xa0}  \n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In Integrated-agent mode, agent configuration is written to the Server's ",(0,s.jsx)(n.code,{children:"appsettings.json"})," file. See the ",(0,s.jsx)(n.a,{href:"/docs/usercube_saas/usercube/installation-guide/overview/",children:"\nOverview\n"})," topic for additional information."]}),"\n",(0,s.jsx)(n.h4,{id:"reminder",children:"Reminder"}),"\n",(0,s.jsxs)(n.p,{children:["The backslash character ",(0,s.jsx)(n.code,{children:"\\"})," is an escape character in a JSON file. An error will appear when parsing the JSON file if the backslash is followed by a non-escapable character. To use a backslash in a string, it must be escaped by another backslash."]}),"\n",(0,s.jsxs)(n.p,{children:["In this example, the value for the attribute Password will be parsed as ",(0,s.jsx)(n.code,{children:"<pass\\word>"}),":"]}),"\n",(0,s.jsxs)(n.p,{children:["Code attributes enclosed with ",(0,s.jsx)(n.code,{children:"<>"})," need to be replaced with a custom value before entering the script in the command line."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{  \n\xa0\xa0\xa0\xa0"Password": "<pass\\\\word>"  \n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"environment-variables",children:"Environment variables"}),"\n",(0,s.jsx)(n.p,{children:"Alternatively, settings can be stored as environment variables on Identity Manager's host system."}),"\n",(0,s.jsxs)(n.p,{children:["Each setting value is stored as the value of an environment variable whose name is the concatenation of all the ancestor sections and the setting name separated by ",(0,s.jsx)(n.strong,{children:"__"})," (two underscores)."]}),"\n",(0,s.jsxs)(n.p,{children:["Here is an example showing how to construct a setting environment variable name from its matching ",(0,s.jsx)(n.code,{children:"json"})," file."]}),"\n",(0,s.jsxs)(n.p,{children:["Code attributes enclosed with ",(0,s.jsx)(n.code,{children:"<>"})," need to be replaced with a custom value before entering the script in the command line."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{  \n\xa0\xa0\xa0\xa0"Scheduler": {  \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0"Enabled": true,  \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0"LockFilePath": "../Temp/scheduler.lock"  \n\xa0\xa0\xa0\xa0},  \n\xa0\xa0\xa0\xa0"Swagger": {  \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0"Enabled": true  \n\xa0\xa0\xa0\xa0}  \n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"The name becomes Scheduler__Enabled, Scheduler__LockFilePath and Swagger__Enabled."}),"\n",(0,s.jsx)(n.h2,{id:"manage-several-environments",children:"Manage Several Environments"}),"\n",(0,s.jsx)(n.p,{children:"How to manage several network environments."}),"\n",(0,s.jsx)(n.h3,{id:"using-files",children:"Using files"}),"\n",(0,s.jsx)(n.p,{children:"Every setting value can be overwritten to fit a specific environment."}),"\n",(0,s.jsx)(n.p,{children:"The environment within which Identity Manager\xa0runs is set by the system environment variable ASPNETCORE_ENVIRONMENT. The default value is Production. Usual examples include Development, Staging, and Production."}),"\n",(0,s.jsx)(n.p,{children:"To overwrite setting values for a specific environment, one can write environment-specific configuration files."}),"\n",(0,s.jsxs)(n.p,{children:["For every appsettings.",(0,s.jsx)(n.code,{children:"<xxx>"}),".json file, an appsettings.",(0,s.jsx)(n.code,{children:"<xxx>"}),".",(0,s.jsx)(n.code,{children:"<environment>"}),".json can be created where ",(0,s.jsx)(n.code,{children:"<environment>"})," is the name of the relevant environment matching the ASPNETCORE_ENVIRONMENT value."]}),"\n",(0,s.jsxs)(n.p,{children:["The appsettings.",(0,s.jsx)(n.code,{children:"<xxx>"}),".",(0,s.jsx)(n.code,{children:"<environment>"}),".json file has the exact same section/attribute/subsection shape as the main appsettings file."]}),"\n",(0,s.jsx)(n.p,{children:"Identity Manager's configuration will be the result of merging both files."}),"\n",(0,s.jsxs)(n.p,{children:["Should a setting be written in both files, Identity Manager will use the appsettings.",(0,s.jsx)(n.code,{children:"<xxx>"}),".",(0,s.jsx)(n.code,{children:"<environment>"}),".json value."]}),"\n",(0,s.jsx)(n.p,{children:"Leveraging this priority mechanism is how one can override a setting value to match a particular environment. Another mechanism can be used: using environment variables."}),"\n",(0,s.jsx)(n.h3,{id:"using-environment-variables",children:"Using environment variables"}),"\n",(0,s.jsx)(n.p,{children:"Setting values can also be stored as environment variables on Identity Manager's host system. Environment-variables-stored setting values have priority over json-file-stored setting values. Here is how to use this mechanism to handle multiple environments."}),"\n",(0,s.jsxs)(n.p,{children:["In the web.config file, an ",(0,s.jsx)(n.code,{children:"<environmentVariable>"})," element in the node ",(0,s.jsx)(n.code,{children:"<configuration>"})," > ",(0,s.jsx)(n.code,{children:"<system.webServer>"})," > ",(0,s.jsx)(n.code,{children:"<aspNetCore>"})," > ",(0,s.jsx)(n.code,{children:"<environmentVariables>"})," is used to set a setting value for the application."]}),"\n",(0,s.jsx)(n.h3,{id:"configuration-stages",children:"Configuration stages"}),"\n",(0,s.jsx)(n.p,{children:"Configuration encompasses:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The Server configuration with a connection to the database and end-user authentication. See the ",(0,s.jsx)(n.a,{href:"/docs/usercube_saas/usercube/integration-guide/network-configuration/server-configuration/",children:"Server Configuration"})," topic for additional information."]}),"\n",(0,s.jsxs)(n.li,{children:["The Agent configuration with a connection to the managed systems. See the ",(0,s.jsx)(n.a,{href:"/docs/usercube_saas/usercube/integration-guide/network-configuration/agent-configuration/",children:"\nAgent Configuration\n"}),"topic for additional information."]}),"\n",(0,s.jsxs)(n.li,{children:["The Logger configuration. See the ",(0,s.jsx)(n.a,{href:"/docs/usercube_saas/usercube/integration-guide/monitoring/",children:"\nMonitoring\n"}),"topic for additional information."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},803361:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/tree-like-structure-78ae3b3616b9d98254ee59b9e77c2a27.webp"}}]);