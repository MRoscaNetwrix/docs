"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[327613],{28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>i});var t=r(296540);const s={},l=t.createContext(s);function o(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(l.Provider,{value:n},e.children)}},545462:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"groupid/managementshell/user/getuserenrollment","title":"Get-UserEnrollment","description":"The commandlet Get-UserEnrollment retrieves enrollment information of a user.","source":"@site/docs/groupid/groupid/managementshell/user/getuserenrollment.md","sourceDirName":"groupid/managementshell/user","slug":"/groupid/managementshell/user/getuserenrollment","permalink":"/docs/groupid/groupid/managementshell/user/getuserenrollment","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/groupid/groupid/managementshell/user/getuserenrollment.md","tags":[],"version":"current","frontMatter":{},"sidebar":"groupIdSidebar","previous":{"title":"Get-User","permalink":"/docs/groupid/groupid/managementshell/user/getuser"},"next":{"title":"New-User","permalink":"/docs/groupid/groupid/managementshell/user/newuser"}}');var s=r(474848),l=r(28453);const o={},i="Get-UserEnrollment",d={},a=[{value:"Syntax",id:"syntax",level:2},{value:"Required Parameter",id:"required-parameter",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"get-userenrollment",children:"Get-UserEnrollment"})}),"\n",(0,s.jsx)(n.p,{children:"The commandlet Get-UserEnrollment retrieves enrollment information of a user."}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Get-UserEnrollment  \n-Identity <string>  \n[-EnrollmentTypes {None | Mobile | SecurityQuestions | Email | Authenticator | LinkAccount | Yubikey | WindowsHello | All | Any}]  \n[<CommonParameters>]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"required-parameter",children:"Required Parameter"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Identity"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example 1:"}),"\n",(0,s.jsx)(n.p,{children:"If a user is enrolled, this cmdlet will enlist the authentication type(s) the user is enrolled with."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Get-UserEnrollment -Identity euser1\n"})}),"\n",(0,s.jsx)(n.p,{children:"Example 2:"}),"\n",(0,s.jsx)(n.p,{children:"Check whether the specified user is enrolled with the specified enrollment type(s)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Get-UserEnrollment -Identity euser1 -EnrollmentTypes SecurityQuestions, Email\n"})}),"\n",(0,s.jsx)(n.p,{children:"Example 3:"}),"\n",(0,s.jsx)(n.p,{children:"This example gets user enrollment information through the pipeline operator."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"'euser1', 'euser2' | Get-UserEnrollment\n"})})]})}function c(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);