"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[110349],{28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>d});var n=r(296540);const s={},a=n.createContext(s);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(a.Provider,{value:t},e.children)}},934317:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>c,frontMatter:()=>i,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"groupid/portal/group/properties/dynastyoptions","title":"Group properties - Dynasty Options tab","description":"Directory Managerprovides advanced options that you can use to enhance the Dynasty structure and its membership. You can:","source":"@site/docs/groupid/groupid/portal/group/properties/dynastyoptions.md","sourceDirName":"groupid/portal/group/properties","slug":"/groupid/portal/group/properties/dynastyoptions","permalink":"/docs/groupid/groupid/portal/group/properties/dynastyoptions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/groupid/groupid/portal/group/properties/dynastyoptions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"groupIdSidebar","previous":{"title":"Group properties - Delivery Restrictions tab","permalink":"/docs/groupid/groupid/portal/group/properties/deliveryrestrictions"},"next":{"title":"Group properties - Email tab","permalink":"/docs/groupid/groupid/portal/group/properties/email"}}');var s=r(474848),a=r(28453);const i={},d="Group properties - Dynasty Options tab",o={},h=[{value:"For an Organizational/Geographical/Custom Dynasty",id:"for-an-organizationalgeographicalcustom-dynasty",level:2},{value:"For a Managerial Dynasty",id:"for-a-managerial-dynasty",level:2}];function l(e){const t={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"group-properties---dynasty-options-tab",children:"Group properties - Dynasty Options tab"})}),"\n",(0,s.jsx)(t.p,{children:"Directory Managerprovides advanced options that you can use to enhance the Dynasty structure and its membership. You can:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Modify the attributes an Organizational/Geographical/Custom Dynasty is build on"}),"\n",(0,s.jsx)(t.li,{children:"Modify the structure of a managerial Dynasty"}),"\n",(0,s.jsx)(t.li,{children:"Edit the template used to generate the alias and display names of child groups"}),"\n",(0,s.jsx)(t.li,{children:"Control the attribute inheritance behavior"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Your changes will be reflected on the next update of the Dynasty."}),"\n",(0,s.jsx)(t.p,{children:"NOTE: Advanced Dynasty options are available for Dynasties of the parent and middle level, but not for the leaf level."}),"\n",(0,s.jsx)(t.h2,{id:"for-an-organizationalgeographicalcustom-dynasty",children:"For an Organizational/Geographical/Custom Dynasty"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Alias Template"})}),"\n",(0,s.jsxs)(t.p,{children:["This setting generates the alias names of child groups. ",(0,s.jsx)(t.strong,{children:"%GROUPBY%"})," is replaced with the actual value of the ",(0,s.jsx)(t.a,{href:"#Attributes",children:"Attributes"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"If Exchange Server is the designated messaging system for the identity store, the alias length is limited to 64 characters and must be unique to the forest. For other messaging systems, the alias length must not exceed the number of characters supported\nby the respective messaging system."}),"\n",(0,s.jsx)(t.p,{children:"Also, the alias must not contain characters that are invalid for the configured messaging system. The following table lists the valid characters the supported messaging systems."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Messaging System"}),(0,s.jsx)(t.th,{children:"Valid Characters"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Exchange Server 2013, Exchange Server 2016, Exchange Server 2019"}),(0,s.jsxs)(t.td,{children:["- Uppercase letters (A\u2013Z) - Lowercase letters (a\u2013z) - Numeric digits (0\u20139) - Special characters: ",(0,s.jsx)(t.code,{children:"#"}),", ",(0,s.jsx)(t.code,{children:"$"}),", ",(0,s.jsx)(t.code,{children:"%"}),", ",(0,s.jsx)(t.code,{children:"&"}),", ",(0,s.jsx)(t.code,{children:"'"}),", ",(0,s.jsx)(t.code,{children:"*"}),", ",(0,s.jsx)(t.code,{children:"+"}),", ",(0,s.jsx)(t.code,{children:"-"}),", ",(0,s.jsx)(t.code,{children:"/"}),", ",(0,s.jsx)(t.code,{children:"="}),", ",(0,s.jsx)(t.code,{children:"?"}),", ",(0,s.jsx)(t.code,{children:"^"}),", ",(0,s.jsx)(t.code,{children:"_"}),", ",(0,s.jsx)(t.code,{children:"`"}),", ",(0,s.jsx)(t.code,{children:"\\{"}),", ",(0,s.jsx)(t.code,{children:"|"}),", ",(0,s.jsx)(t.code,{children:"\\}"}),", ",(0,s.jsx)(t.code,{children:"~"})," - Periods (",(0,s.jsx)(t.code,{children:"."}),") are allowed, but each must be preceded and followed by at least one other valid character"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"All other messaging systems"}),(0,s.jsx)(t.td,{children:"- Uppercase letters (A\u2013Z) - Lowercase letters (a\u2013z) - Numeric digits (0\u20139)"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Display Name Template"})}),"\n",(0,s.jsxs)(t.p,{children:["The template to use to generate the display names of the child groups. ",(0,s.jsx)(t.strong,{children:"%GROUPBY%"})," is replaced with the actual value of the",(0,s.jsx)(t.a,{href:"#Attributes",children:"Attributes"}),"."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Attributes"})}),"\n",(0,s.jsxs)(t.p,{children:["Dynasties create Smart Groups for each distinct value of each attribute listed in the ",(0,s.jsx)(t.strong,{children:"Attributes"})," area."]}),"\n",(0,s.jsx)(t.p,{children:"You can view and change the attributes for parent and middle Dynasties."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Click ",(0,s.jsx)(t.strong,{children:"Add"})," to select a new attribute to add a new level to the Dynasty."]}),"\n",(0,s.jsxs)(t.li,{children:["Select an attribute and click ",(0,s.jsx)(t.strong,{children:"Edit"})," to modify it."]}),"\n",(0,s.jsxs)(t.li,{children:["Click ",(0,s.jsx)(t.strong,{children:"Remove"})," to remove the selected attribute."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["See the ",(0,s.jsx)(t.a,{href:"/docs/groupid/groupid/portal/group/dynasty/dynastyoptionsorggeocus",children:"Dynasty Options page"})," for details."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Inheritance"})}),"\n",(0,s.jsx)(t.p,{children:"Use this setting to specify when Dynasty children inherit attributes. Options are:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Inherit on creation"}),": Dynasty children will inherit the attributes\u2019 values only when the Dynasty is created. Moreover, whenever a new child group is created, it will inherit the attributes\u2019 values."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Always inherit"}),": Dynasty children will inherit the attributes\u2019 values every time the parent Dynasty is updated."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Never inherit"}),": Dynasty children will never inherit attribute values from the parent."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The attributes to be inherited are specified at the identity store level. See Dynasty Settings."}),"\n",(0,s.jsx)(t.p,{children:"When, for a child Dynasty, you change the value of an inherited attribute, the new value may or may not persist, depending on the inheritance option selected for the parent Dynasty. Here is an example:"}),"\n",(0,s.jsx)(t.p,{children:"Suppose the administrator has set the managedBy attribute for inheritance."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["With the ",(0,s.jsx)(t.strong,{children:"Always inherit"})," option selected for the parent Dynasty, any modifications made to the value of the managedBy attribute for a child Dynasty will be replaced with the value of the managedBy attribute set for the parent Dynasty,\nwhenever the Dynasty is updated."]}),"\n",(0,s.jsxs)(t.li,{children:["With the ",(0,s.jsx)(t.strong,{children:"Never inherit"})," option selected, any modifications made to the value of the managedBy attribute for a child Dynasty will persist after update"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"for-a-managerial-dynasty",children:"For a Managerial Dynasty"}),"\n",(0,s.jsx)(t.p,{children:"Top Manager, Include manager as member, Set manager as owner, Create a Flat managerial list, Exclude nested lists of direct reports, Create groups in same container as manager, Create groups in this container"}),"\n",(0,s.jsx)(t.p,{children:"When you create a managerial Dynasty, you specify a Dynasty structure that determines how query results are grouped."}),"\n",(0,s.jsx)(t.p,{children:"For example, you specify whether you want to create a separate Smart Group for the direct reports of the top manager and sub-level managers, or add all direct reports of the top manager and sub-level managers as members of a single group."}),"\n",(0,s.jsxs)(t.p,{children:["You can view and change these structure options for parent and middle Dynasties. For details, see the ",(0,s.jsx)(t.a,{href:"/docs/groupid/groupid/portal/group/dynasty/dynastyoptionsmanagerial",children:"Dynasty Options page (Managerial Dynasty)"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["NOTE: (1) If the ",(0,s.jsx)(t.strong,{children:"Set manager as owner"})," check box is selected, the ",(0,s.jsx)(t.strong,{children:"Always inherit"})," option is set for ",(0,s.jsx)(t.a,{href:"#Inheritance",children:"Inheritance"}),", and the managedBy attribute is specified for inheritance, the ",(0,s.jsx)(t.strong,{children:"Set manager as owner"})," option takes priority over the managedBy attribute inheritance. Hence, the manager of a child Dynasty would be set as its respective primary owner.",(0,s.jsx)(t.br,{}),"\n","(2) When you clear the ",(0,s.jsx)(t.strong,{children:"Set manager as owner"})," check box, the manager set as the primary owner of a parent Dynasty will not be removed. However, when the Dynasty is updated, the primary owner of a child Dynasty may be updated,\ndepending on the Dynasty inheritance options. For example, if the ",(0,s.jsx)(t.strong,{children:"Always inherit"})," option is set for ",(0,s.jsx)(t.a,{href:"#Inheritance",children:"Inheritance"})," and the managedBy attribute is specified for inheritance, the primary owner of the parent\nDynasty would be set as the primary owner for all child Dynasties, replacing their respective primary owners."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Attributes"})}),"\n",(0,s.jsx)(t.p,{children:"Set a custom attribute to create a managerial lineage in the context of this attribute."}),"\n",(0,s.jsxs)(t.p,{children:["See the ",(0,s.jsx)(t.a,{href:"/docs/groupid/groupid/portal/group/dynasty/dynastyoptionsmanagerial",children:"Dynasty Options page (Managerial Dynasty)"}),"for a discussion on attributes."]}),"\n",(0,s.jsx)(t.p,{children:"In addition to the scenarios discussed, the following also apply on Dynasty update:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Specify the \u2018XadditionalManager\u2019 attribute in addition to the \u2018Manager\u2019 attribute for a parent managerial Dynasty."}),"\n",(0,s.jsx)(t.p,{children:"On update, new child Dynasties are created with respect to the additional manager attribute data and added in their respective managers\u2019 direct reports and additional manager's direct reports."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Remove the \u2018XadditionalManager\u2019 attribute for a parent managerial Dynasty."}),"\n",(0,s.jsx)(t.p,{children:"On update, the direct reports of users created with respect to the additional manager attribute data are removed from their respective managers\u2019 and additional managers\u2019 direct reports."}),"\n",(0,s.jsx)(t.p,{children:"If the Delete Empty and Orphan Dynasty children setting is applied, direct reports of users created due to the additional manager\nattribute data are not only removed from their respective managers\u2019 and additional managers\u2019 direct reports; they also get deleted."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Alias Template"})}),"\n",(0,s.jsxs)(t.p,{children:["This setting is used to generate the alias names of the Dynasty's child groups. ",(0,s.jsx)(t.strong,{children:"%MANAGER%"})," is replaced with the alias of the manager being processed. Normally, the mailnickname attribute is used to store the alias. However, if\nthis attribute is not set, then ",(0,s.jsx)(t.strong,{children:"%MANAGER%"})," is replaced with the display name of the manager."]}),"\n",(0,s.jsxs)(t.p,{children:["To use an attribute other than mailNickname for generating the alias for child groups, update the ",(0,s.jsx)(t.strong,{children:"%MANAGER%"})," statement with the desired attribute name. Note that the value of the attribute must be unique."]}),"\n",(0,s.jsx)(t.p,{children:"Example using the cn attribute:"}),"\n",(0,s.jsx)(t.p,{children:"%MANAGER.cn%"}),"\n",(0,s.jsx)(t.p,{children:"Example using the name attribute:"}),"\n",(0,s.jsx)(t.p,{children:"%MANAGER.name%"}),"\n",(0,s.jsx)(t.p,{children:"If Exchange Server is the designated messaging system for the identity store, the alias length is limited to 64 characters and must be unique to the forest. For other messaging systems, the alias length must not exceed the number of characters supported\nby the respective messaging system."}),"\n",(0,s.jsx)(t.p,{children:"Also, the alias must not contain characters that are invalid for the configured messaging system. The following table lists the valid characters the supported messaging systems."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Messaging System"}),(0,s.jsx)(t.th,{children:"Valid Characters"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Exchange Server 2013, Exchange Server 2016, Exchange Server 2019"}),(0,s.jsxs)(t.td,{children:["- Uppercase letters (",(0,s.jsx)(t.code,{children:"A\u2013Z"}),") - Lowercase letters (",(0,s.jsx)(t.code,{children:"a\u2013z"}),") - Numeric digits (",(0,s.jsx)(t.code,{children:"0\u20139"}),") - Special characters: ",(0,s.jsx)(t.code,{children:"#"}),", ",(0,s.jsx)(t.code,{children:"$"}),", ",(0,s.jsx)(t.code,{children:"%"}),", ",(0,s.jsx)(t.code,{children:"&"}),", ",(0,s.jsx)(t.code,{children:"'"}),", ",(0,s.jsx)(t.code,{children:"*"}),", ",(0,s.jsx)(t.code,{children:"+"}),", ",(0,s.jsx)(t.code,{children:"-"}),", ",(0,s.jsx)(t.code,{children:"/"}),", ",(0,s.jsx)(t.code,{children:"="}),", ",(0,s.jsx)(t.code,{children:"?"}),", ",(0,s.jsx)(t.code,{children:"^"}),", ",(0,s.jsx)(t.code,{children:"_"}),", ",(0,s.jsx)(t.code,{children:"`"}),", ",(0,s.jsx)(t.code,{children:"\\{"}),", ",(0,s.jsx)(t.code,{children:"|"}),", ",(0,s.jsx)(t.code,{children:"\\}"}),", ",(0,s.jsx)(t.code,{children:"~"})," - Periods (",(0,s.jsx)(t.code,{children:"."}),") are allowed in aliases, but each must be preceded and followed by at least one other valid character"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"All other messaging systems"}),(0,s.jsxs)(t.td,{children:["- Uppercase letters (",(0,s.jsx)(t.code,{children:"A\u2013Z"}),") - Lowercase letters (",(0,s.jsx)(t.code,{children:"a\u2013z"}),") - Numeric digits (",(0,s.jsx)(t.code,{children:"0\u20139"}),")"]})]})]})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Display Name Template"})}),"\n",(0,s.jsxs)(t.p,{children:["The template is used to generate the display names of the Dynasty's child groups. ",(0,s.jsx)(t.strong,{children:"%MANAGER%"})," is replaced with the display name of the manager being processed. To use an attribute other than displayName to name the child groups,\nupdate the ",(0,s.jsx)(t.strong,{children:"%MANAGER%"})," statement with the desired attribute name. Note that the value of the attribute must be unique."]}),"\n",(0,s.jsx)(t.p,{children:"Example using the cn attribute:"}),"\n",(0,s.jsx)(t.p,{children:"%MANAGER.cn%"}),"\n",(0,s.jsx)(t.p,{children:"Example using the name attribute:"}),"\n",(0,s.jsx)(t.p,{children:"%MANAGER.name%"}),"\n",(0,s.jsxs)(t.p,{children:["NOTE: For a managerial Dynasty, the ",(0,s.jsx)(t.strong,{children:"%MANAGER%"})," variable for the alias and display name templates must be the same. The selected attribute must be a string and cannot include characters that are not supported in pre-Windows 2000 group names."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Inheritance"})}),"\n",(0,s.jsxs)(t.p,{children:["See ",(0,s.jsx)(t.a,{href:"#Inheritance",children:"Inheritance"})," section on this page."]})]})}function c(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);