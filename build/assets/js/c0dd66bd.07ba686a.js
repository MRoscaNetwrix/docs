"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[72900],{28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(296540);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}},698329:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"groupid/portal/group/dynasty/dynastyoptionsmanagerial","title":"Dynasty Options page (Managerial Dynasty)","description":"On the Dynasty Options page, select whether you want to create separate Smart Groups for the direct reports of the top manager and sub-level managers, or add all direct reports of the top manager and sub-level managers as members","source":"@site/docs/groupid/groupid/portal/group/dynasty/dynastyoptionsmanagerial.md","sourceDirName":"groupid/portal/group/dynasty","slug":"/groupid/portal/group/dynasty/dynastyoptionsmanagerial","permalink":"/docs/groupid/groupid/portal/group/dynasty/dynastyoptionsmanagerial","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/groupid/groupid/portal/group/dynasty/dynastyoptionsmanagerial.md","tags":[],"version":"current","frontMatter":{},"sidebar":"groupIdSidebar","previous":{"title":"General - Microsoft Entra ID","permalink":"/docs/groupid/groupid/portal/group/dynasty/azure/general"},"next":{"title":"Dynasty Options page","permalink":"/docs/groupid/groupid/portal/group/dynasty/dynastyoptionsorggeocus"}}');var a=r(474848),s=r(28453);const i={},o="Dynasty Options page (Managerial Dynasty)",l={},c=[];function h(e){const n={a:"a",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"dynasty-options-page-managerial-dynasty",children:"Dynasty Options page (Managerial Dynasty)"})}),"\n",(0,a.jsxs)(n.p,{children:["On the ",(0,a.jsx)(n.strong,{children:"Dynasty Options"})," page, select whether you want to create separate Smart Groups for the direct reports of the top manager and sub-level managers, or add all direct reports of the top manager and sub-level managers as members\nof a single group. In any case, you must specify a top manager to work as the starting point for the Dynasty."]}),"\n",(0,a.jsx)(n.p,{children:"On the Dynasty Options page:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Use the ",(0,a.jsx)(n.strong,{children:"Top Manager"})," field to specify the top-level manager, and thus, the start location for the Dynasty."]}),"\n",(0,a.jsxs)(n.p,{children:["Click the ellipsis button and use the ",(0,a.jsx)(n.a,{href:"/docs/groupid/groupid/portal/search/find",children:"Find Dialog Box"})," to select a top manager."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Select an option from ",(0,a.jsx)(n.strong,{children:"Dynasty Type"})," to specify the type of managerial Dynasty you want to create."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Managerial List"})}),"\n",(0,a.jsx)(n.p,{children:"Construct a managerial Dynasty structure by first creating a Smart Group containing all direct reports of the top-level manager as members, then creating separate Smart Groups for the direct reports (with their respective direct reports\nas members). This Dynasty structure continues till a Smart Group is created for all managers and sub-managers with their respective direct reports as members."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example:"})}),"\n",(0,a.jsx)(n.p,{children:"Take the following data set:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Paul is the top manager with three direct reports: Sam, Eric and Don."}),"\n",(0,a.jsx)(n.li,{children:"Sam has two direct reports, Peter and Sean."}),"\n",(0,a.jsx)(n.li,{children:"Eric has no direct report."}),"\n",(0,a.jsx)(n.li,{children:"Don has three direct reports: Ashley, Jason and Tanya."}),"\n",(0,a.jsx)(n.li,{children:"Jason has a direct report, April."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Directory Manager would create a Dynasty with the following child groups:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Direct reports of Paul"}),"\n",(0,a.jsx)(n.p,{children:"Members: Sam, Eric, Don"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Direct reports of Sam"}),"\n",(0,a.jsx)(n.p,{children:"Members: Peter, Sean"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Direct reports of Don"}),"\n",(0,a.jsx)(n.p,{children:"Members: Ashley, Jason, Tanya"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Direct reports of Jason"}),"\n",(0,a.jsx)(n.p,{children:"Members: April"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Flat Managerial List"})}),"\n",(0,a.jsx)(n.p,{children:"A flat managerial list is one in which all direct reports of the top manager and sub-level managers are added as members of a single group; no separate groups are created for different levels of managers."}),"\n",(0,a.jsx)(n.p,{children:"Referring the data set used for a Managerial List, a flat managerial list would consist of one Smart Group for Paul, with all users as members."}),"\n",(0,a.jsx)(n.p,{children:"On selecting this option button, some options on this page get disabled since they do not apply to a flat managerial list."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Recursive Flat Managerial List"})}),"\n",(0,a.jsx)(n.p,{children:"Use a recursive flat managerial list to create a Smart Group for each manager and sub-manager. For members, each group would contain the respective manager\u2019s direct reports, the direct reports of those direct reports, thus continuing till the nth level."}),"\n",(0,a.jsx)(n.p,{children:"Referring to the data set used for a Managerial List, the following child groups will be created:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Direct reports of Paul"}),"\n",(0,a.jsx)(n.p,{children:"Members: Sam, Eric, Don, Peter, Sean, Ashley, Jason, Tanya, April"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Direct reports of Sam"}),"\n",(0,a.jsx)(n.p,{children:"Members: Peter, Sean"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Direct reports of Don"}),"\n",(0,a.jsx)(n.p,{children:"Members: Ashley, Jason, Tanya, April"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Direct reports of Jason"}),"\n",(0,a.jsx)(n.p,{children:"Members: April"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["On the ",(0,a.jsx)(n.a,{href:"/docs/groupid/groupid/portal/group/querydesigner/overview",children:"Query Designer"})," page, you can also specify a criterion to filter the managers for whom you want to create child groups in the Dynasty."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Select the ",(0,a.jsx)(n.strong,{children:"Include manager as member"})," check box to include the manager as a member of their group along with their direct reports, while creating groups for the managerial structure. With this check box selected, the manager receives a copy of any email sent to the direct reports group."]}),"\n",(0,a.jsx)(n.p,{children:"By default, this check box is not selected, indicating that the manager of each level of direct reports is not included in their respective group."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Select the ",(0,a.jsx)(n.strong,{children:"Set Manager as owner"})," check box to set the top manager as the primary owner of the parent Dynasty."]}),"\n",(0,a.jsxs)(n.p,{children:["On the ",(0,a.jsx)(n.strong,{children:"Owners"})," page of the wizard, the top manager would be displayed as the primary owner. If you change it, the new recipient would be the owner, even with the ",(0,a.jsx)(n.strong,{children:"Set manager as owner"})," check box selected."]}),"\n",(0,a.jsx)(n.p,{children:"In case the Dynasty is not a flat managerial Dynasty, the manager of each child Dynasty will be set as its respective owner."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["For a hierarchical managerial Dynasty, by default, the Dynasty structure adds a sub-level manager\u2019s Smart Groups in the membership of the top-level manager\u2019s Smart Groups. Select the ",(0,a.jsx)(n.strong,{children:"Exclude nested lists of direct reports"})," check box to exclude them from the membership."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Specify a container for creating child groups. Options are:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Create groups in same container as manager"}),": to create groups in the container the top-level manager resides in."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Create groups in this container"}),": to specify a container or organizational unit for the child groups to be created in. Click ",(0,a.jsx)(n.strong,{children:"Browse"})," next to the ",(0,a.jsx)(n.strong,{children:"Child Dynasty Container"})," box to specify a container."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"You can create a managerial Dynasty based on any attribute."}),"\n",(0,a.jsxs)(n.p,{children:["Use the ",(0,a.jsx)(n.strong,{children:"Attributes"})," area to set a custom attribute, such as the XAdditonalManager attribute, to create a managerial lineage in the context of this attribute."]}),"\n",(0,a.jsx)(n.p,{children:"By default, the \u2018Manager\u2019 attribute is selected to create a managerial lineage. This attribute involves the collaboration of two attributes: manager and direct reports, to create the Dynasty\u2019s hierarchical structure."}),"\n",(0,a.jsx)(n.p,{children:"Some examples of a managerial Dynasty with a different set of attributes are give below:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["To add another attribute, click ",(0,a.jsx)(n.strong,{children:"Add"})," and select the required attribute."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["To remove an attribute, select it and click ",(0,a.jsx)(n.strong,{children:"Remove"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["To replace an attribute, select it and click ",(0,a.jsx)(n.strong,{children:"Edit"}),". Select another attribute as a replacement and click ",(0,a.jsx)(n.strong,{children:"OK"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Specify the \u2018XadditionalManager\u2019 attribute in addition to the \u2018Manager\u2019 attribute to create a managerial lineage"}),"\n",(0,a.jsx)(n.p,{children:"Here \u2018Manager\u2019 is the primary attribute to create the managerial lineage.)"}),"\n",(0,a.jsx)(n.p,{children:"You select a top manager to create the Dynasty. The managerial hierarchy for this manager in a provider (such as Active Directory) is as follows:"}),"\n",(0,a.jsx)(n.p,{children:"Top manager: Alan"}),"\n",(0,a.jsx)(n.p,{children:"Alan is the manager of John, Jane, and Josephine"}),"\n",(0,a.jsx)(n.p,{children:"John is the manager of Mark and Martin"}),"\n",(0,a.jsx)(n.p,{children:"Mark is the manager of Sophia and Martin is the manager of Sarah"}),"\n",(0,a.jsx)(n.p,{children:"John is also the additional manager of Sophia and Sarah"}),"\n",(0,a.jsx)(n.p,{children:"When the Dynasty is updated:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"\u2018TestManagerial1\u2019 is the parent Dynasty with child Dynasties such as:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Direct reports of John"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Direct reports of Mark"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Direct reports of Martin"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Direct reports of Sophia"}),"\n",(0,a.jsx)(n.p,{children:"(This child Dynasty will be a part of the Direct reports of John and Direct reports of Mark, since John is the additional manager and Mark is the primary manager.)"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Direct reports of Sarah"}),"\n",(0,a.jsx)(n.p,{children:"(This child Dynasty will be a part of the Direct reports of Martin.)"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"If no user is set as additional manager, no child Dynasty will be created with the additional manager attribute."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Specify a single attribute, \u2018XadditionalManager\u2019"}),"\n",(0,a.jsx)(n.p,{children:"Suppose the managerial hierarchy for the top manager in a provider (such as Active Directory) is as follows:"}),"\n",(0,a.jsx)(n.p,{children:"Top manager: Alan"}),"\n",(0,a.jsx)(n.p,{children:"Alan is the additional manager of John, Jane, and Josephine"}),"\n",(0,a.jsx)(n.p,{children:"John is the additional manager of Mark and Martin"}),"\n",(0,a.jsx)(n.p,{children:"Mark is the additional manager of Sophia and Martin is the additional manager of Sarah"}),"\n",(0,a.jsx)(n.p,{children:"When the Dynasty is updated:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u2018TestManagerial1\u2019 is the parent Dynasty with child Dynasties such as:"}),"\n",(0,a.jsx)(n.li,{children:"Direct reports of John"}),"\n",(0,a.jsx)(n.li,{children:"Direct reports of Mark"}),"\n",(0,a.jsx)(n.li,{children:"Direct reports of Martin"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"When Alan is not the additional manager of any user, the parent Dynasty would be created without any child Dynasties."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Specify a custom attribute, \u2018customattribute1\u2019"}),"\n",(0,a.jsx)(n.p,{children:"Let\u2019s take employeeID as the custom attribute. Data will be as:"}),"\n",(0,a.jsx)(n.p,{children:"Top manager: Alan with EmployeeId 1"}),"\n",(0,a.jsx)(n.p,{children:"John (EmpID: 2, CA: 1); Jane (EmpID: 3, CA: 1); Josephine (EmpID: 4, CA: 1)"}),"\n",(0,a.jsx)(n.p,{children:"Mark (EmpID: 5, CA: 2); Martin (EmpID: 6, CA: 2)"}),"\n",(0,a.jsx)(n.p,{children:"Sophia (EmpID: 7, CA: 5); Sarah (EmpID: 8, CA: 6)"}),"\n",(0,a.jsx)(n.p,{children:"When the Dynasty is updated:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"\u2018TestManagerial1\u2019 is the parent Dynasty with child Dynasties such as:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Direct reports of John (having Mark and Martin)"}),"\n",(0,a.jsx)(n.li,{children:"Direct reports of Mark (having Sophia)"}),"\n",(0,a.jsx)(n.li,{children:"Direct reports of Martin (having Sarah)"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Specify multiple attributes \u2013 \u2018Manager\u2019, \u2018XadditionalManager\u2019 and \u2018customattribute1\u2019"}),"\n",(0,a.jsx)(n.p,{children:"Direct reports for users created with respect to additional manager and custom attribute 1 are added in their respective managers and additional managers according to the custom attribute 1 data."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Click ",(0,a.jsx)(n.strong,{children:"Next"}),"."]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}}}]);