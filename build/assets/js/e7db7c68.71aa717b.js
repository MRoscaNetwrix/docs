"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[765601],{28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>s});var i=n(296540);const o={},r=i.createContext(o);function l(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(r.Provider,{value:t},e.children)}},28722:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"policypak/troubleshooting/clientsideextension/rollback","title":"How to Rollback CSE version from newer to older using PowerShell","description":"How To Implement:","source":"@site/docs/policypak/policypak/troubleshooting/clientsideextension/rollback.md","sourceDirName":"policypak/troubleshooting/clientsideextension","slug":"/policypak/troubleshooting/clientsideextension/rollback","permalink":"/docs/policypak/policypak/troubleshooting/clientsideextension/rollback","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/policypak/policypak/troubleshooting/clientsideextension/rollback.md","tags":[],"version":"current","frontMatter":{},"sidebar":"policyPakSidebar","previous":{"title":"What are the advanced CSE troubleshooting registry debugging items?","permalink":"/docs/policypak/policypak/troubleshooting/clientsideextension/registrydebug"},"next":{"title":"SYSPREP Error with Endpoint Policy Manager Client-Side Extension","permalink":"/docs/policypak/policypak/troubleshooting/clientsideextension/syspreperror"}}');var o=n(474848),r=n(28453);const l={},s="How to Rollback CSE version from newer to older using PowerShell",a={},c=[{value:"How To Implement:",id:"how-to-implement",level:2},{value:"What This Script Does:",id:"what-this-script-does",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"how-to-rollback-cse-version-from-newer-to-older-using-powershell",children:"How to Rollback CSE version from newer to older using PowerShell"})}),"\n",(0,o.jsx)(t.h2,{id:"how-to-implement",children:"How To Implement:"}),"\n",(0,o.jsx)(t.p,{children:"Use\xa0PowerShell or PowerShell ISE running as Administrator to run the PowerShell script below on the target machine where you would like the Netwrix Endpoint Policy Manager (formerly PolicyPak) CSE (Client-Side Extension) to be rolled back."}),"\n",(0,o.jsx)(t.h2,{id:"what-this-script-does",children:"What This Script Does:"}),"\n",(0,o.jsxs)(t.p,{children:["This script will check to see if the CSE version currently installed on a computer matches the version defined under the\xa0$OldVersion\xa0variable, OR\xa0if there is no CSE currently installed, if either of these conditions is evaluated to TRUE then\xa0the CSE version as defined by the\xa0$URL variable will be downloaded to ",(0,o.jsx)(t.code,{children:'"C:\\Temp\\PP_CSE"'}),"\xa0and installed on the computer.\xa0If any CSE version other than the version specified under the $OldVersion variable is installed on the computer then the script will exit without doing anything."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'#### Start of Script  \n#### Purpose: This script rolls the PolicyPak Client-Side Extension back from ($OldVersion) 20.8.2543 to ($NewVersion) 20.7.2513.  \n#### Inspired by and uses portions of script submitted by Jacob Hill  \nSet-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass -Force  \n$software = "PolicyPak Client-Side Extension"  \n$installed = (Get-ItemProperty HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Where { $_.DisplayName -eq $software }) -ne $null  \n$OldVersion = "20.8.2543"  \n$fileName = "PolicyPak Client-Side Extension x64-2513.msi" # $Filename should match the name of the file you uploaded.  \n$URL = "https://s3.amazonaws.com/0PolicyPakSupport/OldBuilds/$fileName" # $URL = Direct download link to MSI installer  \n$dir = "C:\\Temp\\PP_CSE\\"  \n$logfile = $dir+"cse_rollback.log"  \n$OutPath = $dir+$fileName  \n# TIMESTAMP FUNCTION: Usage: Write-Output "$(Get-TimeStamp) Text goes here" | Out-file C:\\log.txt -append  \nfunction Get-TimeStamp {  \n\xa0\xa0return "[{0:MM/dd/yyyy} {0:HH:mm:ss}]" -f (Get-Date)  \n}  \nFunction Install-Correct-Version {  \n\xa0\xa0Write-Output "$(Get-TimeStamp) Install-Correct-Version Process started, downloading new CSE installation file." | Out-file $logfile -append  \n\xa0\xa0(New-Object Net.WebClient).DownloadFile($URL, "$OutPath")  \n\xa0\xa0Write-Output "$(Get-TimeStamp) Starting MSI installation." | Out-file $logfile -append  \n\xa0\xa0Start-Process C:\\Windows\\System32\\msiexec.exe -Wait -ArgumentList "/i `"$outPath`" /qn /L*V `"$dir\\CSE_install.log`"" -NoNewWindow  \n\xa0\xa0$NewVersion = (Get-ItemProperty HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Where { $_.DisplayName -eq $software }).DisplayVersion  \n\xa0\xa0Write-Output "$(Get-TimeStamp) Installation complete! Version $newVersion installed." | Out-file $logfile -append  \n\xa0\xa0Return  \n}  \n# Create the storage directory if it does not exist.  \nIf ((Test-Path -Path $dir) -eq $false)  \n{  \n\xa0\xa0New-Item -Path $dir -ItemType directory  \n\xa0\xa0Write-Output "$(Get-TimeStamp) Created the $dir directory." | Out-file $logfile -append  \n}  \nIf(-Not $installed)  \n{  \n\xa0\xa0Write-Output "$(Get-TimeStamp) \'$software\' is NOT installed." | Out-file $logfile -append  \n\xa0\xa0Install-Correct-Version  \n\xa0\xa0Return  \n}  \nelse  \n{  \n\xa0\xa0Write-Output "$(Get-TimeStamp) \'$software\' IS installed. Checking version." | Out-file $logfile -append  \n\xa0\xa0$version = (Get-ItemProperty HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Where { $_.DisplayName -eq $software }).DisplayVersion  \n\xa0\xa0if ($version -eq $OldVersion)  \n\xa0\xa0{  \n\xa0\xa0\xa0\xa0Write-Output "$(Get-TimeStamp) Old version $version is installed. Uninstalling problematic version." | Out-file $logfile -append  \n\xa0\xa0\xa0\xa0# REPLACE - replace the MSI uninstall code. The MSI code can be obtained by running the following command in PowerShell:  \n\xa0\xa0\xa0\xa0# (Get-ItemProperty HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Where { $_.DisplayName -eq "PolicyPak Client-Side Extension" }).UninstallString  \n\xa0\xa0\xa0\xa0# For example the uninstall String for CSE version 2543 is: "MsiExec.exe /X{B3A3F160-51B6-41FD-9D89-054DA19C09B7}"  \n\xa0\xa0\xa0\xa0Start-Process C:\\Windows\\System32\\msiexec.exe -Wait -ArgumentList "/x {B3A3F160-51B6-41FD-9D89-054DA19C09B7} /q" -NoNewWindow  \n\xa0\xa0\xa0\xa0Write-Output "$(Get-TimeStamp) Uninstall complete. Now installing correct version." | Out-file $logfile -append  \n\xa0\xa0\xa0\xa0Install-Correct-Version  \n\xa0\xa0\xa0\xa0Return  \n\xa0\xa0}  \n\xa0\xa0else  \n\xa0\xa0{  \n\xa0\xa0Write-Output "$(Get-TimeStamp) CSE Version $version is installed. No further action necessary" | Out-file $logfile -append  \n\xa0\xa0Return  \n\xa0\xa0}  \n}  \nWrite-Output "$(Get-TimeStamp) *** Rollback PolicyPak CSE Process Finished ***" | Out-file $logfile -append  \n#### End of Script\n'})}),"\n",(0,o.jsx)(t.p,{children:"Troubleshooting:"}),"\n",(0,o.jsxs)(t.p,{children:["Logs for the Rollback process and MSI install process can both be found in ",(0,o.jsx)(t.code,{children:'"C:\\Temp\\PP_CSE"'})," once the script has executed."]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);