"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[961256],{28453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>a});var n=i(296540);const o={},r=n.createContext(o);function s(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(r.Provider,{value:t},e.children)}},462138:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"groupid/managementshell/identitystore/setnotifications","title":"Set-Notifications","description":"Use the Set-Notifications commandlet to modify the notification settings of an identity store.","source":"@site/docs/groupid/groupid/managementshell/identitystore/setnotifications.md","sourceDirName":"groupid/managementshell/identitystore","slug":"/groupid/managementshell/identitystore/setnotifications","permalink":"/docs/groupid/groupid/managementshell/identitystore/setnotifications","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/groupid/groupid/managementshell/identitystore/setnotifications.md","tags":[],"version":"current","frontMatter":{},"sidebar":"groupIdSidebar","previous":{"title":"Set-MessagingServer","permalink":"/docs/groupid/groupid/managementshell/identitystore/setmessagingserver"},"next":{"title":"Set-SmtpServer","permalink":"/docs/groupid/groupid/managementshell/identitystore/setsmtpserver"}}');var o=i(474848),r=i(28453);const s={},a="Set-Notifications",c={},d=[{value:"Syntax",id:"syntax",level:2},{value:"Required Parameter",id:"required-parameter",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"set-notifications",children:"Set-Notifications"})}),"\n",(0,o.jsx)(t.p,{children:"Use the Set-Notifications commandlet to modify the notification settings of an identity store."}),"\n",(0,o.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"Set-Notifications  \n-IdentityStoreName <string>  \n[-PrimaryRecepients <string[]>]  \n[-CarbonCopy <string[]>]  \n[-NotifyLoggedInUsers <bool>]  \n[-NotifyOwners <bool>]  \n[-NotifyModifiedObject <bool>]  \n[-NotifyPublicGroupOwner <bool>]  \n[-NotifyAddedMembers <bool>]  \n[-PasswordPortalUrl <string>]  \n[-NotifyUserGroupJoinML <bool>]  \n[-NotifyUserGroupLeaveML <bool>]  \n[-XDaysBeforeLeaveNotificationML <int>]  \n[-NotifyUserGroupJoinMB <bool>]  \n[-NotifyUserGroupLeaveMB <bool>]  \n[-XDaysBeforeLeaveNotificationMB <int>]  \n[<CommonParameters>]\n"})}),"\n",(0,o.jsx)(t.h2,{id:"required-parameter",children:"Required Parameter"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"IdentitySoreName"}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"Example 1:"}),"\n",(0,o.jsx)(t.p,{children:"This example sets the primary and carbon copy (CC) recipients of the notifications for the AdStore9 identity store. Additionally, it also sets the group owners / managers and public group owners as the notification recipients."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"Set-Notifications -IdentityStoreName AdStore9 -PrimaryRecepients 'euser1@pucit.local', 'euser2@pucit.local' -CarbonCopy 'exmb1@pucit.local' -NotifyOwners $true -NotifyPublicGroupOwner $true\n"})}),"\n",(0,o.jsx)(t.p,{children:"Example 2:"}),"\n",(0,o.jsx)(t.p,{children:"This example configures recipients for membership lifecycle notifications i.e. it notifies the user upon joining a group and intimates the user before 7 days it is removed as a member from the group."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"Set-Notifications -IdentityStoreName AdStore9 -NotifyUserGroupJoinML $true -XDaysBeforeLeaveNotificationML 7\n"})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);