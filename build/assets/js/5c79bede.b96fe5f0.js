"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[79541],{28453:(e,s,r)=>{r.d(s,{R:()=>c,x:()=>d});var t=r(296540);const n={},a=t.createContext(n);function c(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),t.createElement(a.Provider,{value:s},e.children)}},767540:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>i,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"usercube/integration-guide/executables/references/passwordgenerator/index","title":"Usercube-PasswordGenerator","description":"Example","source":"@site/docs/usercube/usercube/integration-guide/executables/references/passwordgenerator/index.md","sourceDirName":"usercube/integration-guide/executables/references/passwordgenerator","slug":"/usercube/integration-guide/executables/references/passwordgenerator/","permalink":"/docs/usercube/usercube/integration-guide/executables/references/passwordgenerator/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube/usercube/integration-guide/executables/references/passwordgenerator/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSidebar","previous":{"title":"Usercube-New-OpenIDSecret","permalink":"/docs/usercube/usercube/integration-guide/executables/references/new-openidsecret/"},"next":{"title":"Usercube-Prepare-Synchronization","permalink":"/docs/usercube/usercube/integration-guide/executables/references/prepare-synchronization/"}}');var n=r(474848),a=r(28453);const c={},d="Usercube-PasswordGenerator",i={},o=[{value:"Example",id:"example",level:2},{value:"Manually generate a password",id:"manually-generate-a-password",level:3},{value:"Arguments",id:"arguments",level:2}];function l(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"usercube-passwordgenerator",children:"Usercube-PasswordGenerator"})}),"\n",(0,n.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(s.h3,{id:"manually-generate-a-password",children:"Manually generate a password"}),"\n",(0,n.jsx)(s.p,{children:"Consider an external system that is fulfilled manually and requires a new password."}),"\n",(0,n.jsx)(s.p,{children:"To avoid writing the password in any file while still choosing a cryptographically secure password, we generate it just before using it."}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:"--auto-generate true --digit-chars 2 --lower-case-chars 6 --symbol-chars 2 --upper-case-chars 2"})}),"\n",(0,n.jsx)(s.h2,{id:"arguments",children:"Arguments"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Argument Name"}),(0,n.jsx)(s.th,{children:"Details"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--default-password   required if auto-generate is false"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    String   ",(0,n.jsx)(s.strong,{children:"Description"})," Specifies the default password used when ",(0,n.jsx)(s.code,{children:"--auto-generate"})," is false.   ",(0,n.jsx)(s.strong,{children:"Example"}),"   Set default password to password:   ",(0,n.jsx)(s.code,{children:"--default-password password"}),"."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--auto-generate   default value: false"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    No Value   ",(0,n.jsx)(s.strong,{children:"Description"})," Specifies if the password should be the default password or generated automatically.   ",(0,n.jsx)(s.strong,{children:"Example"}),"   Use default password:   ",(0,n.jsx)(s.code,{children:"--auto-generate false"}),"."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--digit-chars   default value: 0"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    Integer   ",(0,n.jsx)(s.strong,{children:"Description"})," Specifies the number of digits in the generated password. If the value is strictly positive, additional digits may be generated if ",(0,n.jsx)(s.code,{children:"--generated-length"})," is higher than the sum of ",(0,n.jsx)(s.code,{children:"--digit-chars"}),", ",(0,n.jsx)(s.code,{children:"--lower-chase-chars"}),", ",(0,n.jsx)(s.code,{children:"--symbol-chars"}),", and ",(0,n.jsx)(s.code,{children:"--upper-case-chars"}),".   ",(0,n.jsx)(s.strong,{children:"Example"}),"   Generate a password with 2 digits:   ",(0,n.jsx)(s.code,{children:"--digit-chars 2"}),"."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--generated-length   default value: 0"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    Integer   ",(0,n.jsx)(s.strong,{children:"Description"})," Specifies the length of the generated password. If it is lower than the sum of ",(0,n.jsx)(s.code,{children:"--digit-chars"}),", ",(0,n.jsx)(s.code,{children:"--lower-chase-chars"}),", ",(0,n.jsx)(s.code,{children:"--symbol-chars"}),", and ",(0,n.jsx)(s.code,{children:"--upper-case-chars"}),", the length of the generated password is equal to the sum. If it is higher than the sum of ",(0,n.jsx)(s.code,{children:"--digit-chars"}),", ",(0,n.jsx)(s.code,{children:"--lower-chase-chars"}),", ",(0,n.jsx)(s.code,{children:"--symbol-chars"}),", and ",(0,n.jsx)(s.code,{children:"--upper-case-chars"}),", extra characters of any type will be generated.   ",(0,n.jsx)(s.strong,{children:"Example"}),"   Set a password length of 12:   ",(0,n.jsx)(s.code,{children:"--generated-length 12"}),"."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--lower-case-chars   default value: 0"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    Integer   ",(0,n.jsx)(s.strong,{children:"Description"})," Specifies the number of lower case characters in the generated password. If the value is strictly positive, additional lower case characters may be generated if ",(0,n.jsx)(s.code,{children:"--generated-length"})," is higher than the sum of ",(0,n.jsx)(s.code,{children:"--digit-chars"}),", ",(0,n.jsx)(s.code,{children:"--lower-chase-chars"}),", ",(0,n.jsx)(s.code,{children:"--symbol-chars"}),", and ",(0,n.jsx)(s.code,{children:"--upper-case-chars"}),". If the sum of ",(0,n.jsx)(s.code,{children:"--digit-chars"}),", ",(0,n.jsx)(s.code,{children:"--lower-chase-chars"}),", ",(0,n.jsx)(s.code,{children:"--symbol-chars"}),", and ",(0,n.jsx)(s.code,{children:"--upper-case-chars"})," is 0, only lower case characters will be generated.   ",(0,n.jsx)(s.strong,{children:"Example"}),"   Generate a password with 6 lower case characters:   ",(0,n.jsx)(s.code,{children:"--lower-case-chars 6"}),"."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:'--strength-check   default value: "^.*"'}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    String   ",(0,n.jsx)(s.strong,{children:"Description"})," The regular expression to check the password strength. By default, any password passes the strength check.   ",(0,n.jsx)(s.strong,{children:"Example"}),"   Accept any password:   ",(0,n.jsx)(s.code,{children:"--strength-check ^.*"}),"."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--symbol-chars   default value: 0"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    Integer   ",(0,n.jsx)(s.strong,{children:"Description"})," Specifies the number of symbols in the generated password. If the value is strictly positive, additional symbols may be generated if ",(0,n.jsx)(s.code,{children:"--generated-length"})," is higher than the sum of ",(0,n.jsx)(s.code,{children:"--digit-chars"}),", ",(0,n.jsx)(s.code,{children:"--lower-chase-chars"}),", ",(0,n.jsx)(s.code,{children:"--symbol-chars"}),", and ",(0,n.jsx)(s.code,{children:"--upper-case-chars"}),".   ",(0,n.jsx)(s.strong,{children:"Example"}),"   Generate a password with 2 symbols:   ",(0,n.jsx)(s.code,{children:"--symbol-chars 2"}),"."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"--upper-case-chars   default value: 0"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.strong,{children:"Type"}),"    Integer   ",(0,n.jsx)(s.strong,{children:"Description"})," Specifies the number of upper case characters in the generated password. If the value is strictly positive, additional upper case characters may be generated if ",(0,n.jsx)(s.code,{children:"--generated-length"})," is higher than the sum of ",(0,n.jsx)(s.code,{children:"--digit-chars"}),", ",(0,n.jsx)(s.code,{children:"--lower-chase-chars"}),", ",(0,n.jsx)(s.code,{children:"--symbol-chars"}),", and ",(0,n.jsx)(s.code,{children:"--upper-case-chars"}),".   ",(0,n.jsx)(s.strong,{children:"Example"}),"   Generate a password with 2 upper case characters:   ",(0,n.jsx)(s.code,{children:"--upper-case-chars 2"}),"."]})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);