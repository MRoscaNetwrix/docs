"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[78401],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(296540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}},693626:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/agent/invokeexpressiontask/index","title":"Invoke Expression Task","description":"Launches on agent side a powershell script given as input.","source":"@site/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/agent/invokeexpressiontask/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/agent/invokeexpressiontask","slug":"/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/agent/invokeexpressiontask/","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/agent/invokeexpressiontask/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/agent/invokeexpressiontask/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"Invoke Aspects Task","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/agent/invokeaspectstask/"},"next":{"title":"Invoke Sql Command Task","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/agent/invokesqlcommandtask/"}}');var i=n(474848),r=n(28453);const o={},a="Invoke Expression Task",c={},l=[{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2}];function d(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"invoke-expression-task",children:"Invoke Expression Task"})}),"\n",(0,i.jsx)(t.p,{children:"Launches on agent side a powershell script given as input."}),"\n",(0,i.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n  <InvokeExpressionTask Identifier="MyScript" DisplayName_L1="My Script" Agent="Local" InputPath="C:/Scripts/myScript.ps1" OpenIdClient="Job"/>\n\n'})}),"\n",(0,i.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Property"}),(0,i.jsx)(t.th,{children:"Details"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"DisplayName_L1   required"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Display name of the task in language 1 (up to 16)."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Agent   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Identifier of the agent on which the job will be launched.   ",(0,i.jsx)(t.strong,{children:"Note:"})," when not specified, the task is to be launched on the server.   ",(0,i.jsx)(t.strong,{children:"Warning:"})," all jobs containing the task must be launched on the same agent or on the server."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ContinueOnError   default value: false"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    Boolean   ",(0,i.jsx)(t.strong,{children:"Description"}),"   ",(0,i.jsx)(t.code,{children:"true"})," if the execution of the Task returning an error should not stop the job machine state."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Identifier   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Unique identifier of the task."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"InputPath   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Defines the input path.   Alternative definition: If ",(0,i.jsx)(t.em,{children:"TaskType"})," is:   - ProvisionerWorkflowTask: Path of the JSON file,   - ConfigurationTask: Directory of the configuration to import,   - ApiCallTask: Path of the JSON file,   - SqlCmdTask: Path of the SQL file,"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"OpenIdClient   optional"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.strong,{children:"Type"}),"    String   ",(0,i.jsx)(t.strong,{children:"Description"}),"   Connection client for the task."]})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);