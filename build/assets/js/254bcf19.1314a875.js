"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[980611],{11112:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"usercube/integration-guide/tasks-jobs/how-tos/jobdaily/index","title":"Set up Complete Synchronization","description":"This guide shows how to build the job that will synchronize the appropriate connectors in complete mode.","source":"@site/docs/usercube_saas/usercube/integration-guide/tasks-jobs/how-tos/jobdaily/index.md","sourceDirName":"usercube/integration-guide/tasks-jobs/how-tos/jobdaily","slug":"/usercube/integration-guide/tasks-jobs/how-tos/jobdaily/","permalink":"/docs/usercube_saas/usercube/integration-guide/tasks-jobs/how-tos/jobdaily/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/tasks-jobs/how-tos/jobdaily/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"Configure the Fulfill Task for a Connector","permalink":"/docs/usercube_saas/usercube/integration-guide/tasks-jobs/how-tos/fulfillldap/"},"next":{"title":"Set Up Incremental Synchronization","permalink":"/docs/usercube_saas/usercube/integration-guide/tasks-jobs/how-tos/jobfast/"}}');var i=n(474848),r=n(28453);const s={},a="Set up Complete Synchronization",l={},c=[{value:"1. Objective",id:"1-objective",level:3},{value:"2. Create the Export task",id:"2-create-the-export-task",level:3},{value:"3. Create the Prepare Synchronization task",id:"3-create-the-prepare-synchronization-task",level:3},{value:"4. Create the Synchronization task",id:"4-create-the-synchronization-task",level:3},{value:"5. Create the UpdateEntityPropertyExpressions task",id:"5-create-the-updateentitypropertyexpressions-task",level:3},{value:"6. Create the ComputeCorrelationKey task",id:"6-create-the-computecorrelationkey-task",level:3},{value:"7. Create the ComputeRoleModel task",id:"7-create-the-computerolemodel-task",level:3},{value:"8. Create the GenerateProvisioningOrder task",id:"8-create-the-generateprovisioningorder-task",level:3},{value:"9. Create the Fulfill task",id:"9-create-the-fulfill-task",level:3},{value:"10. Create the UpdateClassification task",id:"10-create-the-updateclassification-task",level:3},{value:"11. Create the SetInternalUserProfiles task",id:"11-create-the-setinternaluserprofiles-task",level:3},{value:"12. Create the all-tasks job",id:"12-create-the-all-tasks-job",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"set-up-complete-synchronization",children:"Set up Complete Synchronization"})}),"\n",(0,i.jsx)(t.p,{children:"This guide shows how to build the job that will synchronize the appropriate connectors in complete mode."}),"\n",(0,i.jsx)(t.h3,{id:"1-objective",children:"1. Objective"}),"\n",(0,i.jsx)(t.p,{children:"Create a Synchronization Job in complete mode.\nThis job is used to check for and fix differences in the resources data after the incremental synchronizations."}),"\n",(0,i.jsxs)(t.p,{children:["The synchronization Job can be created automatically by a scaffolding.\nIt can create either a job for each connector and for each agent (see the ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createconnectorsynchrocomplete/",children:"Create Connector Synchro Complete"})," topic for additional information) or a job for all connectors for each agent (see the ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createagentsynchrocomplete/",children:"Create Agent Synchro Complete"})," topic for additional information)."]}),"\n",(0,i.jsx)(t.p,{children:'In the following example the Synchronization job for the Connector "AD" will be created.'}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n<Connector Identifier="AD" DisplayName_L1="AD" Agent="Local" />\n\n'})}),"\n",(0,i.jsx)(t.h3,{id:"2-create-the-export-task",children:"2. Create the Export task"}),"\n",(0,i.jsxs)(t.p,{children:["If a pre-treatment is needed, you must create an ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/agent/exporttask/",children:"\nExport Task\n"}),". Otherwise it is unnecessary.\nChoose the Export task corresponding to the connector.\nIf the Export uses the incremental mode, set IgnoreCookieFile to true."]}),"\n",(0,i.jsx)(t.p,{children:"All Export task have the ContinueOnError property.\nIt is advisable to begin with the value of True so that the task is not blocking for the Job."}),"\n",(0,i.jsx)(t.p,{children:"Example :"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n<ExportTask Identifier="AD_Export_Complete" Agent="Local" Connection="AD_Export" OpenIdClient="Job" DisplayName_L1="Export AD" DisplayName_L2="Export AD" ContinueOnError="1" IgnoreCookieFile="1"/>\n\n'})}),"\n",(0,i.jsx)(t.h3,{id:"3-create-the-prepare-synchronization-task",children:"3. Create the Prepare Synchronization task"}),"\n",(0,i.jsxs)(t.p,{children:["Create the Prepare Synchronization Task with the connector. Set ",(0,i.jsx)(t.code,{children:'SynchronizationMode="Complete"'})," , except for ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/agent/preparesynchronizationtask/",children:"\nPrepare Synchronization Task\n"})," which doesn't need this parameter. If it is a Synchronization Changes, or ActiveDirectory, you must precise it with the ",(0,i.jsx)(t.code,{children:"Type"})," attribute."]}),"\n",(0,i.jsx)(t.p,{children:"If the job contain Exports for the same connector add the a link between the PrepareSynchronization and the Export to check the final state of exports."}),"\n",(0,i.jsx)(t.p,{children:"Example :"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n<PrepareSynchronizationTask Type="ActiveDirectory" DisplayName_L1="AD - Prepare Synchronization (complete Mode)" DisplayName_L2="AD - Pr\ufffdparation de la synchronisation (mode complet)" Connector="AD" SynchronizationMode="Complete" Agent="Local" OpenIdClient="Job">  <TaskDependsOnTask ParentTask="AD_Export_Complete"/></PrepareSynchronizationTask>\n\n'})}),"\n",(0,i.jsxs)(t.p,{children:["See the ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/agent/preparesynchronizationtask/",children:"\nPrepare Synchronization Task\n"})," for additional information on the PrepareSynchronization task configuration."]}),"\n",(0,i.jsx)(t.h3,{id:"4-create-the-synchronization-task",children:"4. Create the Synchronization task"}),"\n",(0,i.jsxs)(t.p,{children:["Create the SynchronizeTask with the same ",(0,i.jsx)(t.code,{children:"Type"})," attribute as the PrepareSynchronizationTask.\nFor the complete mode the parameter DoNotDeleteChanges must not be present in the task configuration."]}),"\n",(0,i.jsx)(t.p,{children:"If the job contain Exports for the same connector add the a link between the Synchronization and the Export to check the final state of exports."}),"\n",(0,i.jsx)(t.p,{children:"Example :"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n<SynchronizeTask Type="ActiveDirectory" Identifier="AD_Synchronization" DisplayName_L1="AD - Synchronization" DisplayName_L2="AD - Synchronisation" Connector="AD">  <TaskDependsOnTask ParentTask="AD_Export_Complete"/></SynchronizeTask>\n\n'})}),"\n",(0,i.jsxs)(t.p,{children:["The Synchronization Validation Task is not needed , since it is managed by the ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/tasks-jobs/jobs/",children:"\nJobs\n"})," state machine."]}),"\n",(0,i.jsxs)(t.p,{children:["For more information on Synchronization task configuration : ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/synchronizetask/",children:"\nSynchronize Task\n"})]}),"\n",(0,i.jsx)(t.h3,{id:"5-create-the-updateentitypropertyexpressions-task",children:"5. Create the UpdateEntityPropertyExpressions task"}),"\n",(0,i.jsx)(t.p,{children:"Create the UpdateEntityPropertyExpressionsTask to compute expression properties of the given entityTypes or all entityTypes."}),"\n",(0,i.jsx)(t.p,{children:"Example :"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n<UpdateEntityPropertyExpressionsTask Identifier="All_ComputeAllProperties" DisplayName_L1="Overall - Computed Properties Refresh" DisplayName_L2="Global - Mise \ufffd jour des propri\ufffdt\ufffds calcul\ufffdes">    <TaskEntityType Identifier="AD_Entry"/></UpdateEntityPropertyExpressionsTask>\n\n'})}),"\n",(0,i.jsxs)(t.p,{children:["For more information on UpdateEntityPropertyExpressions Task configuration : ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/updateentitypropertyexpressionstask/",children:"UpdateEntityPropertyExpressionsTask"})]}),"\n",(0,i.jsx)(t.h3,{id:"6-create-the-computecorrelationkey-task",children:"6. Create the ComputeCorrelationKey task"}),"\n",(0,i.jsx)(t.p,{children:"Create the ComputeCorrelationKey Task to compute correlation keys of the given entityTypes or all entityTypes."}),"\n",(0,i.jsx)(t.p,{children:"Example :"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n<ComputeCorrelationKeysTask Identifier="All_CorrelationKeys" DisplayName_L1="All Correlation Keys" >\t<TaskEntityType Identifier="AD_Entry"/></ComputeCorrelationKeysTask>\n\n'})}),"\n",(0,i.jsxs)(t.p,{children:["For more information about the ComputeCorrelationKey task configuration: ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/computecorrelationkeystask/",children:"\nCompute Correlation Keys Task\n"})]}),"\n",(0,i.jsx)(t.h3,{id:"7-create-the-computerolemodel-task",children:"7. Create the ComputeRoleModel task"}),"\n",(0,i.jsx)(t.p,{children:"Create the ComputeRoleModel Task to create the provisioning order."}),"\n",(0,i.jsx)(t.p,{children:"Example :"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n<ComputeRoleModelTask Identifier="Directory_ComputeRoleModel" DisplayName_L1="Directory - Provisioning Orders Generation" DisplayName_L2="R\ufffdf\ufffdrentiel - Pr\ufffdparation des ordres de provisioning">  <TaskEntityType EntityType="Directory_User"/>  <TaskEntityType EntityType="Directory_Guest"/></ComputeRoleModelTask>\n\n'})}),"\n",(0,i.jsxs)(t.p,{children:["The TaskEntityType elements correspond to the sourceEntityTypes in the ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/provisioning/resourcetype/",children:"Resource Type"})," which have TargetEntityTypes that are part of the connector to provide."]}),"\n",(0,i.jsxs)(t.p,{children:["For more information on Compute Role Model task configuration: ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/computerolemodeltask/",children:"\nCompute Role Model Task\n"})]}),"\n",(0,i.jsx)(t.h3,{id:"8-create-the-generateprovisioningorder-task",children:"8. Create the GenerateProvisioningOrder task"}),"\n",(0,i.jsx)(t.p,{children:"Create the GenerateProvisioningOrder task. The GenerateProvisioningOrder task will recover all resources whose provisioningState is at 1 to build a list of JSON files containing all provisioning orders. The Connector is the same as the connector set in the PrepareSynchronization.\nThe ForceProvisioning parameter must not be set to true. It's the job state machine who launch this mode if necessary."}),"\n",(0,i.jsx)(t.p,{children:"Example :"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n<GenerateProvisioningOrdersTask Identifier="AD_Provisioning" DisplayName_L1="AD - Provisioning Orders Fetching" DisplayName_L2="AD - R\ufffdcup\ufffdration des ordres de provisioning" Connector="AD"/>\n\n'})}),"\n",(0,i.jsxs)(t.p,{children:["For more information on GenerateProvisioningOrder task configuration: ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/generateprovisioningorderstask/",children:"Generate Provisioning Orders Task"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"9-create-the-fulfill-task",children:"9. Create the Fulfill task"}),"\n",(0,i.jsx)(t.p,{children:"Create the Fulfill task."}),"\n",(0,i.jsx)(t.p,{children:"You must specify the right connection to fulfill the desired system."}),"\n",(0,i.jsx)(t.p,{children:"All fulfillment task have the ContinueOnError property.\nIt is advisable to begin with the value of True so that the task is not blocking for the Job.\nThe fulfill Tasks are directly depanding of GenerateProvisioningOrdersTask. If this task has not create a new provisioning order. The fulfillment must be not launch in the job."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n<FulfillTask Identifier="AD_Fulfill" DisplayName_L1="AD - Automated Provisioning" DisplayName_L2="AD - Alimentation automatique" Connector="AD" OpenIdClient="Job" Connection="AD_Fulfillment" Agent="Local" ContinueOnError="1">  <TaskDependsOnTask ParentTask="AD_Provisioning"/></FulfillTask>\n\n'})}),"\n",(0,i.jsx)(t.h3,{id:"10-create-the-updateclassification-task",children:"10. Create the UpdateClassification task"}),"\n",(0,i.jsxs)(t.p,{children:["Create the Update Classification Task. The resource Classification is needed if one or more ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/provisioning/resourceclassificationrule/",children:"\nResource Classification Rule\n"})," are configured for the connector."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n<UpdateClassificationTask Identifier="AD_Update_Classification" DisplayName_L1="AD - Update Users Classification" DisplayName_L2="AD - Mise \ufffd jour de la classification des comptes" >  <TaskEntityType EntityType="AD_Entry"/></UpdateClassificationTask>\n\n'})}),"\n",(0,i.jsxs)(t.p,{children:["For more information on Update Classification Task : ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/updateclassificationtask/",children:"\nUpdate Classification Task\n"})]}),"\n",(0,i.jsx)(t.h3,{id:"11-create-the-setinternaluserprofiles-task",children:"11. Create the SetInternalUserProfiles task"}),"\n",(0,i.jsxs)(t.p,{children:["Create the Set Internal User Profiles Task. The Profile Assignment is needed if one ore more ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/access-control/profilerulecontext/",children:"Profile Rule Context"})," are configured."]}),"\n",(0,i.jsx)(t.p,{children:"This Task is directly linked to a Fulfill parent. if the fulfillment has been completed with the state warning or if it was not started or no processing has been performed, launching this task becomes useless."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n<SetInternalUserProfilesTask Identifier="All_SetAllInternalUserProfiles" DisplayName_L1="Overall - Profiles Update" DisplayName_L2="Global - Mise \ufffd jour des profils">  <TaskEntityType EntityType="AD_Entry"/>  <TaskResourceType ResourceType="AD_Entry_NominativeUser"/>  <TaskDependsOnTask ParentTask="AD_Fulfill"/></SetInternalUserProfilesTask>\n\n'})}),"\n",(0,i.jsxs)(t.p,{children:["For more information on SetInternalUserProfiles Task configuration : ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/setinternaluserprofilestask/",children:"\nSet Internal User Profiles Task\n"})]}),"\n",(0,i.jsx)(t.h3,{id:"12-create-the-all-tasks-job",children:"12. Create the all-tasks job"}),"\n",(0,i.jsx)(t.p,{children:"Once the tasks created. You must create the job to launch all tasks."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'\n<Job Identifier="Job_AD_Complete" DisplayName_L1="AD Job\'s (Complete mode)" DisplayName_L2="Job de l\'AD (mode complet)" Agent="Local">  <ExportTask Identifier="AD_Export_Complete" Agent="Local" Connection="AD_Export_Delta" OpenIdClient="Job" DisplayName_L1="Export AD" DisplayName_L2="Export AD"/>  <PrepareSynchronizationTask Type="ActiveDirectory" DisplayName_L1="AD - Prepare Synchronization (complete Mode)" DisplayName_L2="AD - Pr\ufffdparation de la synchronisation (mode complet)" Connector="AD" SynchronizationMode="Complete" Agent="Local" OpenIdClient="Job">    <TaskDependsOnTask ParentTask="AD_Export_Complete"/>  </PrepareSynchronizationTask>  <SynchronizeTask Type="ActiveDirectory" Identifier="AD_Synchronization" DisplayName_L1="AD - Synchronization" DisplayName_L2="AD - Synchronisation" Connector="AD">    <TaskDependsOnTask ParentTask="AD_Export_Complete"/>  </SynchronizeTask>  <UpdateEntityPropertyExpressionsTask Identifier="All_ComputeAllProperties" DisplayName_L1="Overall - Computed Properties Refresh" DisplayName_L2="Global - Mise \ufffd jour des propri\ufffdt\ufffds calcul\ufffdes">    <TaskEntityType Identifier="AD_Entry"/>  </UpdateEntityPropertyExpressionsTask>  <ComputeCorrelationKeysTask Identifier="All_CorrelationKeys" DisplayName_L1="All Correlation Keys" >\t<TaskEntityType Identifier="AD_Entry"/>  </ComputeCorrelationKeysTask>  <ComputeRoleModelTask Identifier="Directory_ComputeRoleModel" DisplayName_L1="Directory - Provisioning Orders Generation" DisplayName_L2="R\ufffdf\ufffdrentiel - Pr\ufffdparation des ordres de provisioning">    <TaskEntityType EntityType="Directory_User"/>    <TaskEntityType EntityType="Directory_Guest"/>  </ComputeRoleModelTask>  <GenerateProvisioningOrdersTask Identifier="AD_Provisioning" DisplayName_L1="AD - Provisioning Orders Fetching" DisplayName_L2="AD - R\ufffdcup\ufffdration des ordres de provisioning" Connector="AD"/>  <FulfillTask Identifier="AD_Fulfill" DisplayName_L1="AD - Automated Provisioning" DisplayName_L2="AD - Alimentation automatique" Connector="AD" OpenIdClient="Job" Connection="AD_Fulfillment" Agent="Local"  ContinueOnError="1">    <TaskDependsOnTask ParentTask="AD_Provisioning"/>  </FulfillTask>  <UpdateClassificationTask Identifier="AD_Update_Classification" DisplayName_L1="AD - Update Users Classification" DisplayName_L2="AD - Mise \ufffd jour de la classification des comptes" >    <TaskEntityType EntityType="AD_Entry"/>  </UpdateClassificationTask>  <SetInternalUserProfilesTask Identifier="All_SetAllInternalUserProfiles" DisplayName_L1="Overall - Profiles Update" DisplayName_L2="Global - Mise \ufffd jour des profils">    <TaskEntityType EntityType="AD_Entry"/>    <TaskResourceType ResourceType="AD_Entry_NominativeUser"/>    <TaskDependsOnTask ParentTask="AD_Fulfill"/>  </SetInternalUserProfilesTask>  <SendRoleModelNotificationsTask DisplayName_L1="Send Notification" DisplayName_L2="Envoie des Notifications">    <TaskEntityType EntityType="AD_Entry"/>  </SendRoleModelNotificationsTask></Job>\n\n'})}),"\n",(0,i.jsxs)(t.p,{children:["The job can be scheduled with the ",(0,i.jsx)(t.code,{children:"CrontabExpression"})," attribute"]}),"\n",(0,i.jsxs)(t.p,{children:["For more information on job configuration : ",(0,i.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/job/",children:"\nJob\n"})]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var o=n(296540);const i={},r=o.createContext(i);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);