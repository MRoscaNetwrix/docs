"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[886954],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var r=t(296540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}},867356:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createconnectorsynchroincremental/index","title":"Create Connector Synchro Incremental","description":"This scaffolding generates a synchronization job (in Incremental mode) for the given connector.","source":"@site/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createconnectorsynchroincremental/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createconnectorsynchroincremental","slug":"/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createconnectorsynchroincremental/","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createconnectorsynchroincremental/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createconnectorsynchroincremental/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSidebar","previous":{"title":"Create Connector Synchro Complete","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createconnectorsynchrocomplete/"},"next":{"title":"Create Initialization Job","permalink":"/docs/usercube/usercube/integration-guide/toolkit/xml-configuration/configuration/scaffoldings/jobs/createinitializationjob/"}}');var i=t(474848),o=t(28453);const s={},c="Create Connector Synchro Incremental",a={},l=[{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2},{value:"Child Elements",id:"child-elements",level:2},{value:"AddTask",id:"addtask",level:3},{value:"CronTabExpression",id:"crontabexpression",level:3},{value:"FulfillInternalWorkflowsPath",id:"fulfillinternalworkflowspath",level:3},{value:"LinkDependTask",id:"linkdependtask",level:3},{value:"OpenIdIdentifier",id:"openididentifier",level:3},{value:"Generated XML",id:"generated-xml",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"create-connector-synchro-incremental",children:"Create Connector Synchro Incremental"})}),"\n",(0,i.jsx)(n.p,{children:"This scaffolding generates a synchronization job (in Incremental mode) for the given connector."}),"\n",(0,i.jsx)(n.p,{children:"The tasks created in the Scaffoldings are sorted by level. The levels are visible via the tools: Usercube-Get-JobSteps.exe"}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(n.p,{children:["Code attributes enclosed with ",(0,i.jsx)(n.code,{children:"<>"})," need to be replaced with a custom value before entering the script in the command line."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'<CreateConnectorSynchroIncremental DisplayName_L1="10: Microsoft Entra ID (formerly Azure Active Directory) - Synchronization Incremental (scaffolding)" Connector="MicrosoftEntraID" JobIdentifier="MicrosoftEntraID_Synchronize_Incremental_Scaffolding"/>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Connector   required"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Identifier of the connector involved in the job to be generated."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"DisplayName_L1   optional"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Display name of the scaffolding in language 1 (up to 16)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"JobIdentifier   optional"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"For job scaffoldings, identifier of the job to be generated. If not defined, the job identifier is calculated."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"OldAlgorithm   optional"}),(0,i.jsx)(n.td,{children:"Boolean"}),(0,i.jsx)(n.td,{children:"Internal use."})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"child-elements",children:"Child Elements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"AddTask (optional) \u2014 Add a task before or after another in the job."}),"\n",(0,i.jsx)(n.li,{children:"CronTabExpression (optional) \u2014 Schedule the job."}),"\n",(0,i.jsx)(n.li,{children:"FormatPropertiesInResource (optional) \u2014 Converts string properties to their corresponding types in the 'Resource' section of the provisioning order."}),"\n",(0,i.jsx)(n.li,{children:"FulfillInternalWorkflowsPath (optional) \u2014 Add the path of the json configuration for a connector with IsWorkflowProvisioning set to true."}),"\n",(0,i.jsx)(n.li,{children:"LinkDependTask (optional) \u2014 Link a child Task with a parent to not launch the child if the parent has finish with state warning."}),"\n",(0,i.jsx)(n.li,{children:"NoProvisioning (optional) \u2014 Avoid provisioning."}),"\n",(0,i.jsx)(n.li,{children:"NoSynchronization (optional) \u2014 Avoid collect."}),"\n",(0,i.jsx)(n.li,{children:"OpenIdIdentifier (optional) \u2014 Add a OpenID to the job and the tasks."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"addtask",children:"AddTask"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Task   required"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Identifier of the task to add."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"TaskToCompareWith   required"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"The identifier of the task before or after which the new task will be inserted"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"After   default value: false"}),(0,i.jsx)(n.td,{children:"Boolean"}),(0,i.jsx)(n.td,{children:"For the Argument AddTask the property after define the place of the task to add with the TaskCompareWith."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Before   default value: false"}),(0,i.jsx)(n.td,{children:"Boolean"}),(0,i.jsx)(n.td,{children:"For the Argument AddTask the property before define the place of the task to add with the TaskCompareWith."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"CopyOccurence   default value: 0"}),(0,i.jsx)(n.td,{children:"Int32"}),(0,i.jsx)(n.td,{children:"For Argument AddTask, Specify the Occurence to copy and add the Task in a specify Job."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Occurence   default value: 0"}),(0,i.jsx)(n.td,{children:"Int32"}),(0,i.jsx)(n.td,{children:"Occurrence of the TaskToCompare after or before which the task will be added."})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"crontabexpression",children:"CronTabExpression"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"CronTab   required"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Represents the argument value."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"CronTimeZone   optional"}),(0,i.jsx)(n.td,{children:"CronTimeZone"}),(0,i.jsx)(n.td,{children:"For Argument AddTask, Occurrence of the TaskToCompare after or before which the task will be added."})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"fulfillinternalworkflowspath",children:"FulfillInternalWorkflowsPath"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ConnectorIdentifier   required"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsxs)(n.td,{children:["Identifier of the connector involved in the following arguments: ",(0,i.jsx)(n.code,{children:"NoConnectorSynchronization"}),"; ",(0,i.jsx)(n.code,{children:"NoConnectorProvisioning"}),"; ",(0,i.jsx)(n.code,{children:"NotUsed"}),"; ",(0,i.jsx)(n.code,{children:"FulfillInternalWorkflowsPath"}),"; ",(0,i.jsx)(n.code,{children:"PrincipalDataConnector"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Path   required"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Represents the argument value."})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"linkdependtask",children:"LinkDependTask"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"DependOn   required"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Identifier of parent Task."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Task   required"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Identifier of child Task."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ChildOccurence   default value: 0"}),(0,i.jsx)(n.td,{children:"Int32"}),(0,i.jsx)(n.td,{children:"Search the occurrence x to link with the parent."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ParentOccurence   default value: 0"}),(0,i.jsx)(n.td,{children:"Int32"}),(0,i.jsx)(n.td,{children:"Occurrence of the parentTask which the task will be linked"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"openididentifier",children:"OpenIdIdentifier"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Identifier   required"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Identifier of the OpenId"})]})})]}),"\n",(0,i.jsx)(n.h2,{id:"generated-xml",children:"Generated XML"}),"\n",(0,i.jsx)(n.p,{children:"Our example generates the following configuration:"}),"\n",(0,i.jsxs)(n.p,{children:["Code attributes enclosed with ",(0,i.jsx)(n.code,{children:"<>"})," need to be replaced with a custom value before entering the script in the command line."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'<Job Identifier="MicrosoftEntraID_Synchronize_Incremental_Scaffolding" DisplayName_L1="10: Microsoft Entra ID - Synchronization Incremental (scaffolding)" Agent="Local" IsIncremental="true">  \n\xa0\xa0<ExportTask Identifier="MicrosoftEntraID_Synchronize_Incremental_Scaffolding_Export_MicrosoftEntraID_Incremental_MicrosoftEntraIDExportFulfillment" DisplayName_L1="Microsoft Entra ID - Extract Changes" DisplayName_L2="Microsoft Entra ID - Extraction des modifications" Agent="Local" Connector="MicrosoftEntraID" Level="0" OpenIdClient="Job" Connection="MicrosoftEntraIDExportFulfillment" ContinueOnError="true" />  \n\xa0\xa0<PrepareSynchronizationTask Identifier="MicrosoftEntraID_Synchronize_Incremental_Scaffolding_PrepareSynchronizationChanges_MicrosoftEntraID_Incremental" DisplayName_L1="Microsoft Entra ID - Incremental Synchronization (agent side)" DisplayName_L2="Microsoft Entra ID - Synchronisation incr\xe9mentale (c\xf4t\xe9 agent)" Agent="Local" Connector="MicrosoftEntraID" Level="1" OpenIdClient="Job" SynchronizationMode="Incremental" Type="Changes">  \n\xa0\xa0\xa0\xa0<TaskDependsOnTask ParentTask="MicrosoftEntraID_Synchronize_Incremental_Scaffolding_Export_MicrosoftEntraID_Incremental_MicrosoftEntraIDExportFulfillment" />  \n\xa0\xa0</PrepareSynchronizationTask>  \n\xa0\xa0<SynchronizeTask Identifier="MicrosoftEntraID_Synchronize_Incremental_Scaffolding_SynchronizeChanges_MicrosoftEntraID_DoNotDeleteChanges" DisplayName_L1="Microsoft Entra ID - Synchronization (changes server side)" DisplayName_L2="Microsoft Entra ID - Synchronisation (changements c\xf4t\xe9 serveur)" Connector="MicrosoftEntraID" Level="2" Type="Changes" DoNotDeleteChanges="true">  \n\xa0\xa0\xa0\xa0<TaskDependsOnTask ParentTask="MicrosoftEntraID_Synchronize_Incremental_Scaffolding_PrepareSynchronizationChanges_MicrosoftEntraID_Incremental" />  \n\xa0\xa0</SynchronizeTask>  \n\xa0\xa0<SetRecentlyModifiedFlagTask Identifier="MicrosoftEntraID_Synchronize_Incremental_Scaffolding_SetRecentlyModifiedFlag" DisplayName_L1="Tag Modified Objects" DisplayName_L2="Marquage des objets modifi\xe9s" Level="3">  \n\xa0\xa0\xa0\xa0<TaskDependsOnTask ParentTask="MicrosoftEntraID_Synchronize_Incremental_Scaffolding_SynchronizeChanges_MicrosoftEntraID_DoNotDeleteChanges" />  \n\xa0\xa0</SetRecentlyModifiedFlagTask>  \n\xa0\xa0<UpdateEntityPropertyExpressionsTask Identifier="MicrosoftEntraID_Synchronize_Incremental_Scaffolding_UpdateEntityPropertyExpressions1_WithDirty" DisplayName_L1="Update Computed Properties" DisplayName_L2="Mise \xe0 jour des propri\xe9t\xe9s calcul\xe9es" Level="4" Dirty="true">  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="MicrosoftEntraID_DirectoryObject" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_Guest" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_User" />  \n\xa0\xa0</UpdateEntityPropertyExpressionsTask>  \n\xa0\xa0<ComputeCorrelationKeysTask Identifier="MicrosoftEntraID_Synchronize_Incremental_Scaffolding_ComputeCorrelationKeys1_AllEntities_WithDirty" DisplayName_L1="Compute all Correlations" DisplayName_L2="Calcul des corr\xe9lations" Level="5" Dirty="true">  \n\xa0\xa0\xa0\xa0<TaskDependsOnTask ParentTask="MicrosoftEntraID_Synchronize_Incremental_Scaffolding_SetRecentlyModifiedFlag" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="MicrosoftEntraID_DirectoryObject" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_Guest" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_User" />  \n\xa0\xa0</ComputeCorrelationKeysTask>  \n\xa0\xa0<ComputeRoleModelTask Identifier="MicrosoftEntraID_Synchronize_Incremental_Scaffolding_ComputeRoleModel1_WithDirty" DisplayName_L1="Apply the Role Model" DisplayName_L2="Evaluation du mod\xe8le de r\xf4les" Level="6" Dirty="true">  \n\xa0\xa0\xa0\xa0<TaskDependsOnTask ParentTask="MicrosoftEntraID_Synchronize_Incremental_Scaffolding_SetRecentlyModifiedFlag" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_Guest" />  \n\xa0\xa0\xa0\xa0<TaskEntityType EntityType="Directory_User" />  \n\xa0\xa0</ComputeRoleModelTask>  \n\xa0\xa0<GenerateProvisioningOrdersTask Identifier="MicrosoftEntraID_Synchronize_Incremental_Scaffolding_GenerateProvisioningOrders1" DisplayName_L1="Generate Provisioning Orders - Microsoft Entra ID" DisplayName_L2="G\xe9n\xe9ration des ordres de provisioning - Microsoft Entra ID" Level="7">  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="MicrosoftEntraID_DirectoryObject_Guest" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="MicrosoftEntraID_DirectoryObject_NominativeUser" />  \n\xa0\xa0</GenerateProvisioningOrdersTask>  \n\xa0\xa0<FulfillTask Identifier="MicrosoftEntraID_Synchronize_Incremental_Scaffolding_Fulfill1" DisplayName_L1="Fulfillment - Microsoft Entra ID" DisplayName_L2="Alimentation - Microsoft Entra ID" Agent="Local" Level="8" OpenIdClient="Job" Dirty="true" ContinueOnError="true">  \n\xa0\xa0\xa0\xa0<TaskDependsOnTask ParentTask="MicrosoftEntraID_Synchronize_Incremental_Scaffolding_GenerateProvisioningOrders1" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="MicrosoftEntraID_DirectoryObject_Guest" />  \n\xa0\xa0\xa0\xa0<TaskResourceType ResourceType="MicrosoftEntraID_DirectoryObject_NominativeUser" />  \n\xa0\xa0</FulfillTask>  \n</Job>\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);