"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[90791],{28453:(e,i,t)=>{t.d(i,{R:()=>o,x:()=>a});var n=t(296540);const s={},r=n.createContext(s);function o(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(r.Provider,{value:i},e.children)}},739619:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/notifications/notification/index","title":"Notification","description":"A notification can be configured to be sent to a given user on a regular basis at specified times, through the [","source":"@site/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/notifications/notification/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/notifications/notification","slug":"/usercube/integration-guide/toolkit/xml-configuration/notifications/notification/","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/notifications/notification/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/notifications/notification/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"Notifications","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/notifications/"},"next":{"title":"Notifications (Typed)","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/notifications/notifications/"}}');var s=t(474848),r=t(28453);const o={},a="Notification",c={},d=[{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2}];function l(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"notification",children:"Notification"})}),"\n",(0,s.jsxs)(i.p,{children:["A notification can be configured to be sent to a given user on a regular basis at specified times, through the ",(0,s.jsx)(i.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/sendnotificationstask/",children:"\nSend Notifications Task\n"})," as part of a job."]}),"\n",(0,s.jsx)(i.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(i.p,{children:"The following example defines a notification to inform/remind managers of the arrival of new employees in their team."}),"\n",(0,s.jsx)(i.p,{children:"The notification is built based on:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["the template ",(0,s.jsx)(i.code,{children:"Notification.cshtml"}),";"]}),"\n",(0,s.jsxs)(i.li,{children:["the styles ",(0,s.jsx)(i.code,{children:"Notification.css"}),";"]}),"\n",(0,s.jsxs)(i.li,{children:["the subject defined by ",(0,s.jsx)(i.code,{children:"TitleExpression"}),"."]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The notification is sent for each new user, i.e. each user whose contract start date is in the future. The notification is sent to the new user's manager(s)."}),"\n",(0,s.jsxs)(i.p,{children:["The notification will be sent again as a reminder after 7 days, by the next ",(0,s.jsx)(i.code,{children:"SendNotificationsTask"}),"."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:'\n<Notification Identifier="New_Directory_User" OwnerEntityType="Directory_User" RazorTemplate="./Template/Notification.cshtml" CssTemplate="./Template/Notification.css" TitleExpression="C#:user:return &quot;New Employee&quot;;" QueryFilterExpression="C#:user:return $&quot;join MainRecord r where r.ContractStartDate > \\&quot;{DateTime.UtcNow.ToString(&quot;yyyy-MM-ddTHH:mm:ssZ&quot;)}\\&quot;&quot;;" RecipientMailBinding="Directory_User:MainRecord.Organization.Manager.MainRecord.Email" ReminderInterval="10080" />\n\n'})}),"\n",(0,s.jsx)(i.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Property"}),(0,s.jsx)(i.th,{children:"Details"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"CssTemplate   optional"}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.strong,{children:"Type"}),"    String   ",(0,s.jsx)(i.strong,{children:"Description"}),"   Path to the css file that defines the styles for the email.   ",(0,s.jsx)(i.strong,{children:"Note:"})," the path must be relative to the configuration folder, and the file must be inside it.    ",(0,s.jsx)(i.strong,{children:"Note:"})," required when creating a customized notification with ",(0,s.jsx)(i.code,{children:"<Notification.../>"}),"."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"Identifier   required"}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.strong,{children:"Type"}),"    String   ",(0,s.jsx)(i.strong,{children:"Description"}),"   Unique identifier of the notification."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"OwnerEntityType   required"}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.strong,{children:"Type"}),"    Int64   ",(0,s.jsx)(i.strong,{children:"Description"}),"   Identifier of the entity type that represents the population affected by the notification, and the variable type used in ",(0,s.jsx)(i.code,{children:"TitleExpression"})," and ",(0,s.jsx)(i.code,{children:"QueryFilterExpression"}),"."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"QueryFilterExpression   optional"}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.strong,{children:"Type"}),"    String   ",(0,s.jsx)(i.strong,{children:"Description"}),"   C# expression that returns a Identity Manager Squery in order to define the sending condition of the notification. The expression's variable type is defined in ",(0,s.jsx)(i.code,{children:"OwnerEntityType"}),". See the ",(0,s.jsx)(i.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/expressions/",children:"Expressions"})," topic for additional information."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"RazorTemplate   optional"}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.strong,{children:"Type"}),"    String   ",(0,s.jsx)(i.strong,{children:"Description"}),"   Path to the Razor cshtml file that defines the email's body template.   ",(0,s.jsx)(i.strong,{children:"Note:"})," the path must be relative to the configuration folder, and the file must be inside it.    ",(0,s.jsx)(i.strong,{children:"Note:"})," required when creating a customized notification with ",(0,s.jsx)(i.code,{children:"<Notification.../>"}),"."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"RecipientMailBinding   optional"}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.strong,{children:"Type"}),"    Int64   ",(0,s.jsx)(i.strong,{children:"Description"}),"   Binding of the property that corresponds to the email addresses that will receive the notification."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"ReminderInterval   default value: 0"}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.strong,{children:"Type"}),"    Int32   ",(0,s.jsx)(i.strong,{children:"Description"}),"   Time period (in minutes) after which a reminder of the original notification should be sent.   ",(0,s.jsx)(i.strong,{children:"Note:"})," the notification reminder will be sent by the first ",(0,s.jsx)(i.code,{children:"SendNotificationsTask"})," after the reminder interval is exceeded."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"TitleExpression   optional"}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.strong,{children:"Type"}),"    String   ",(0,s.jsx)(i.strong,{children:"Description"}),"   C# expression that defines the email's subject. The expression's variable type is defined in ",(0,s.jsx)(i.code,{children:"OwnerEntityType"}),". See the ",(0,s.jsx)(i.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/expressions/",children:"Expressions"})," topic for additional information."]})]})]})]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);