"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[325464],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var r=n(296540);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}},337144:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"policypak/leastprivilege/securerun/blockedscripttypes","title":"What is the supported list of BLOCKED script types for Endpoint Policy Manager SecureRun\u2122 ?","description":"The official list is as follows and might increase without notice.","source":"@site/docs/policypak/policypak/leastprivilege/securerun/blockedscripttypes.md","sourceDirName":"policypak/leastprivilege/securerun","slug":"/policypak/leastprivilege/securerun/blockedscripttypes","permalink":"/docs/policypak/policypak/leastprivilege/securerun/blockedscripttypes","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/policypak/policypak/leastprivilege/securerun/blockedscripttypes.md","tags":[],"version":"current","frontMatter":{},"sidebar":"policyPakSidebar","previous":{"title":"Least Privilege Manager and SecureRun Implementation Best Practices","permalink":"/docs/policypak/policypak/leastprivilege/securerun/bestpractices"},"next":{"title":"How do I allow a Chrome extension blocked by SecureRun to be installed?","permalink":"/docs/policypak/policypak/leastprivilege/securerun/chromeextension"}}');var s=n(474848),i=n(28453);const o={},l="What is the supported list of BLOCKED script types for Endpoint Policy Manager SecureRun\u2122 ?",c={},a=[];function p(e){const t={a:"a",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"what-is-the-supported-list-of-blocked-script-types-for-endpoint-policy-manager-securerun-",children:"What is the supported list of BLOCKED script types for Endpoint Policy Manager SecureRun\u2122 ?"})}),"\n",(0,s.jsx)(t.p,{children:"The official list is as follows and might increase without notice."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"BAT"}),"\n",(0,s.jsx)(t.li,{children:"CMD"}),"\n",(0,s.jsx)(t.li,{children:"JS"}),"\n",(0,s.jsx)(t.li,{children:"JSE"}),"\n",(0,s.jsx)(t.li,{children:"VBS"}),"\n",(0,s.jsx)(t.li,{children:"VBE"}),"\n",(0,s.jsx)(t.li,{children:".PS1"}),"\n",(0,s.jsx)(t.li,{children:".JAR (not technically a script; but also blocked)"}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"NOTE:"}),"  For .PS1, in order to enable Powershell at all, you need to make an express (ALLOW rule for powershell.exe). That rule can be found in ",(0,s.jsx)(t.a,{href:"/docs/policypak/policypak/leastprivilege/securerun/enablepowershell",children:"When Endpoint Policy Manager SecureRun(TM) is turned on, PowerShell won't run. How can I re-enable this?"})]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);