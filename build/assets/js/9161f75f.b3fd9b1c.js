"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[100478],{28453:(e,s,r)=>{r.d(s,{R:()=>o,x:()=>a});var t=r(296540);const i={},n=t.createContext(i);function o(e){const s=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(n.Provider,{value:s},e.children)}},845720:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/generateprovisioningorderstask/index","title":"Generate Provisioning Orders Task","description":"In the Assigned resource types, Assigned resource scalars, and Assigned resource navigation the provisioning task will recover all resources whose provisioningState is at 1 to build a list of JSON files containing all provisioning orders.","source":"@site/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/generateprovisioningorderstask/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/generateprovisioningorderstask","slug":"/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/generateprovisioningorderstask/","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/generateprovisioningorderstask/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/generateprovisioningorderstask/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"Fulfill Task","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/fulfilltask/"},"next":{"title":"Get Role Mining Task","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/jobs/tasks/server/getroleminingtask/"}}');var i=r(474848),n=r(28453);const o={},a="Generate Provisioning Orders Task",d={},c=[{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2},{value:"Child Element: TaskResourceType",id:"child-element-taskresourcetype",level:2}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"generate-provisioning-orders-task",children:"Generate Provisioning Orders Task"})}),"\n",(0,i.jsx)(s.p,{children:"In the Assigned resource types, Assigned resource scalars, and Assigned resource navigation the provisioning task will recover all resources whose provisioningState is at 1 to build a list of JSON files containing all provisioning orders.\nThis task can be started either with a connector or with a resourceType list.\nThen changes the provisioningState of the resources concerned to 2."}),"\n",(0,i.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(s.p,{children:["Code attributes enclosed with ",(0,i.jsx)(s.code,{children:"<>"})," need to be replaced with a custom value before entering the script in the command line."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"javascript:void(0);",children:"Copy"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'<GenerateProvisioningOrdersTask Identifier="SAB_GenerateProvisioningOrder" DisplayName_L1="SAB GenerateProvisioningOrder">\xa0\xa0<TaskResourceType ResourceType="Compte_SAB_Guest"/></GenerateProvisioningOrdersTask>\n'})}),"\n",(0,i.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Property"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"DisplayName_L1   required"}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"Display name of the task in language 1 (up to 16)."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"BatchInsertSize   default value: 0"}),(0,i.jsx)(s.td,{children:"Int32"}),(0,i.jsx)(s.td,{children:"Specifies the number of orders by file."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"BatchSelectSize   default value: 0"}),(0,i.jsx)(s.td,{children:"Int32"}),(0,i.jsx)(s.td,{children:"Defines the batch select size."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Connector   optional"}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"Identifier of the connector involved in the task."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"ForceProvisioning   default value: false"}),(0,i.jsx)(s.td,{children:"Boolean"}),(0,i.jsx)(s.td,{children:"True to block the provisioning policy orders."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Identifier   optional"}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"Unique identifier of the task."})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"child-element-taskresourcetype",children:"Child Element: TaskResourceType"}),"\n",(0,i.jsx)(s.p,{children:"The table TaskResourceTypes makes the link between the tasks and the Resourcetypes."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Property"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsx)(s.tbody,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"ResourceType   required"}),(0,i.jsx)(s.td,{children:"Int64"}),(0,i.jsx)(s.td,{children:"Linked resourceType id."})]})})]})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);