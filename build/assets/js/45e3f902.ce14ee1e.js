"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[16199],{28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var o=i(296540);const t={},s=o.createContext(t);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(s.Provider,{value:n},e.children)}},568014:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"policypak/leastprivilege/scopefilters/blockadmins","title":"Scenario 3: Running or Elevating Applications or Installers, but Blocking Other Admins from Running Them","description":"NOTE: For an overview video of this section, see the Elevate apps as standard user, BLOCK other Admins video .","source":"@site/docs/policypak/policypak/leastprivilege/scopefilters/blockadmins.md","sourceDirName":"policypak/leastprivilege/scopefilters","slug":"/policypak/leastprivilege/scopefilters/blockadmins","permalink":"/docs/policypak/policypak/leastprivilege/scopefilters/blockadmins","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/policypak/policypak/leastprivilege/scopefilters/blockadmins.md","tags":[],"version":"current","frontMatter":{},"sidebar":"policyPakSidebar","previous":{"title":"How can I change the behavior of \\"Run as Admin\\" with Endpoint Privilege Manager and how has it changed from previous versions?","permalink":"/docs/policypak/policypak/leastprivilege/runasadmin"},"next":{"title":"Scenario 2: Specific Rule to Block an App from Being Run, Even as Local System","permalink":"/docs/policypak/policypak/leastprivilege/scopefilters/blockapp"}}');var t=i(474848),s=i(28453);const a={},r="Scenario 3: Running or Elevating Applications or Installers, but Blocking Other Admins from Running Them",l={},c=[];function d(e){const n={a:"a",h1:"h1",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"scenario-3-running-or-elevating-applications-or-installers-but-blocking-other-admins-from-running-them",children:"Scenario 3: Running or Elevating Applications or Installers, but Blocking Other Admins from Running Them"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," For an overview video of this section, see the ",(0,t.jsx)(n.a,{href:"/docs/policypak/policypak/video/leastprivilege/bestpractices/appblock",children:"Elevate apps as standard user, BLOCK other Admins"})," video ."]}),"\n",(0,t.jsx)(n.p,{children:"In this scenario you want to do work with Endpoint Policy Manager Least Privilege Manager (Elevate, Allow, or Block) but prevent other admins (local admins or domain admins) from overcoming your rule."}),"\n",(0,t.jsx)(n.p,{children:"To perform this, you\u2019ll need to do the following:"}),"\n",(0,t.jsx)(n.p,{children:"Two rules:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"First one BLOCKS ABC.EXE or ABC.CMD or ABC.MSI. This must be done on the COMPUTER side with SCOPE = USER AND SYSTEM. Then, filter the scope by group (more on this in a second.)"}),"\n",(0,t.jsx)(n.li,{children:"Second rule ALLOWS or ELEVATES ABC.EXE or ABC.CMD or ABC.MSI. Scope doesn\u2019t matter. You can do this on the COMPUTER or USER side. (leaving the default filters in place.)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"If you want to block only local admins (but not domain admins),\xa0then Rule #1 needs to look like this."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," This group is\xa0not available\xa0when editing a GPO from a DC, and only available when creating the GPO from a Windows endpoint computer.)"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A screenshot of a computer Description automatically generated",src:i(862334).A+"",width:"1432",height:"724"})}),"\n",(0,t.jsx)(n.p,{children:"If you want toblock\xa0both local admins and domain administrators,\xa0then Rule #1 needs to look like this."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A screenshot of a computer Description automatically generated",src:i(729254).A+"",width:"1712",height:"963"})}),"\n",(0,t.jsx)(n.p,{children:"Again, rule 2, the rule that does the ELEVATE or ALLOW, is just a standard rule, and can be done on the user or computer side."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A screenshot of a computer Description automatically generated",src:i(844871).A+"",width:"1431",height:"688"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},729254:(e,n,i)=>{i.d(n,{A:()=>o});const o=i.p+"assets/images/scenario_3_running_or_elevating_1-b4114eab19998e5e428cafdcaa2dead2.webp"},844871:(e,n,i)=>{i.d(n,{A:()=>o});const o=i.p+"assets/images/scenario_3_running_or_elevating_2-37e1bccbe8aad7d691a0aebb346e531e.webp"},862334:(e,n,i)=>{i.d(n,{A:()=>o});const o=i.p+"assets/images/scenario_3_running_or_elevating-9d57e6bde40ef9c0903defa40df48dc7.webp"}}]);