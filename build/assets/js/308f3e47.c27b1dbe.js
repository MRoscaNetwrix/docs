"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[268131],{28453:(e,o,t)=>{t.d(o,{R:()=>r,x:()=>c});var n=t(296540);const i={},l=n.createContext(i);function r(e){const o=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(l.Provider,{value:o},e.children)}},159669:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"threatprevention/api/collections","title":"Collection APIs","description":"Collections are reusable lists of policy filter settings that help streamline the task of associating filters with event types on the Event Type tab during Policy Configuration or Template Configuration.","source":"@site/docs/threatprevention/threatprevention/api/collections.md","sourceDirName":"threatprevention/api","slug":"/threatprevention/api/collections","permalink":"/docs/threatprevention/threatprevention/api/collections","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/threatprevention/threatprevention/api/collections.md","tags":[],"version":"current","frontMatter":{},"sidebar":"threatPreventionSidebar","previous":{"title":"Import Window","permalink":"/docs/threatprevention/threatprevention/admin/tools/import"},"next":{"title":"Enterprise Password Enforcer (EPE) APIs","permalink":"/docs/threatprevention/threatprevention/api/epe"}}');var i=t(474848),l=t(28453);const r={},c="Collection APIs",s={},a=[{value:"Get Collection",id:"get-collection",level:2},{value:"Remove a Collection",id:"remove-a-collection",level:2},{value:"Add or Modify Collections",id:"add-or-modify-collections",level:2},{value:"Export Collections to an XML File",id:"export-collections-to-an-xml-file",level:3},{value:"Import Collections from an XML File",id:"import-collections-from-an-xml-file",level:3}];function d(e){const o={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.header,{children:(0,i.jsx)(o.h1,{id:"collection-apis",children:"Collection APIs"})}),"\n",(0,i.jsxs)(o.p,{children:["Collections are reusable lists of policy filter settings that help streamline the task of associating filters with event types on the Event Type tab during ",(0,i.jsx)(o.a,{href:"/docs/threatprevention/threatprevention/admin/policies/configuration",children:"Policy Configuration"})," or ",(0,i.jsx)(o.a,{href:"/docs/threatprevention/threatprevention/admin/templates/configuration",children:"Template Configuration"}),"."]}),"\n",(0,i.jsx)(o.p,{children:"You can use APIs to perform the following functions:"}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"Get Collection"}),"\n",(0,i.jsx)(o.li,{children:"Remove a Collection"}),"\n",(0,i.jsx)(o.li,{children:"Add or Modify Collections"}),"\n",(0,i.jsx)(o.li,{children:"Export Collections to an XML File"}),"\n",(0,i.jsx)(o.li,{children:"Import Collections from an XML File"}),"\n"]}),"\n",(0,i.jsx)(o.h2,{id:"get-collection",children:"Get Collection"}),"\n",(0,i.jsxs)(o.p,{children:["The ",(0,i.jsx)(o.code,{children:"Get-SICollection"})," command is used to return a Threat Prevention collection. Collections are managed on the ",(0,i.jsx)(o.a,{href:"/docs/threatprevention/threatprevention/admin/configuration/collectionmanager/overview",children:"Collection Manager Window"})," and are used in specific policy filters, where different filters support different types of collections."]}),"\n",(0,i.jsx)(o.h2,{id:"remove-a-collection",children:"Remove a Collection"}),"\n",(0,i.jsxs)(o.p,{children:["The ",(0,i.jsx)(o.code,{children:"Remove-SICollection"})," command is used to delete a collection using the collection ID retrieved in the ",(0,i.jsx)(o.code,{children:"Get-SICollection"})," command. The following parameter is required:"]}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"CollectionID"}),"\n"]}),"\n",(0,i.jsx)(o.p,{children:"Example of a remove collection command:"}),"\n",(0,i.jsx)(o.p,{children:"Remove-SICollection \u2013CollectionID \u201c222\u201d"}),"\n",(0,i.jsx)(o.h2,{id:"add-or-modify-collections",children:"Add or Modify Collections"}),"\n",(0,i.jsxs)(o.p,{children:["The ",(0,i.jsx)(o.code,{children:"Export-SICollection"})," and ",(0,i.jsx)(o.code,{children:"Import-SICollection"})," commands can be used to export and edit the XML file of an existing collection, and then import (add or replace) the edited collection. See the ",(0,i.jsx)(o.a,{href:"/docs/threatprevention/threatprevention/api/overview#not-a-policy-xml-expert",children:"Not a Policy XML Expert"})," topic for additional information on and how to make changes to the XML."]}),"\n",(0,i.jsx)(o.h3,{id:"export-collections-to-an-xml-file",children:"Export Collections to an XML File"}),"\n",(0,i.jsxs)(o.p,{children:["The ",(0,i.jsx)(o.code,{children:"Export-SICollection"})," command retrieves the specified collection or collections as an XML file from Threat Prevention into PowerShell or a specified location if using PowerShell file redirection. The data produced by this command is identical in format to that produced by the Administration Console export function. See the ",(0,i.jsx)(o.a,{href:"/docs/threatprevention/threatprevention/admin/tools/exportpoliciestemplates",children:"Export Policies and Templates Window"})," topic for additional information."]}),"\n",(0,i.jsx)(o.p,{children:"The following parameter(s) are required:"}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"CollectionIDs [String] \u2013 List of comma separated Collection IDs"}),"\n"]}),"\n",(0,i.jsx)(o.p,{children:"Example of multiple collection exports that are displayed in the PowerShell Console:"}),"\n",(0,i.jsx)(o.p,{children:"Export-SICollection \u2013CollectionIDs \u201c222,131,44\u201d"}),"\n",(0,i.jsx)(o.p,{children:"Example of a single collection export to a file:"}),"\n",(0,i.jsx)(o.p,{children:"Export-SICollection \u2013CollectionIDs \u201c222\u201d >>c:\\Import\\ExampleExport1.xml"}),"\n",(0,i.jsx)(o.h3,{id:"import-collections-from-an-xml-file",children:"Import Collections from an XML File"}),"\n",(0,i.jsxs)(o.p,{children:["The ",(0,i.jsx)(o.code,{children:"Import-SICollection"})," command imports a collection into the Enterprise Manager from an external XML file. This command is used to replace/modify an existing collection or create a new one. The data produced by this command is identical to that produced by the Administration Console import function. See the ",(0,i.jsx)(o.a,{href:"/docs/threatprevention/threatprevention/admin/tools/import",children:"Import Window"})," topic for additional information."]}),"\n",(0,i.jsxs)(o.p,{children:["During the import process, the ",(0,i.jsx)(o.code,{children:"Import-SICollection"})," command checks existing collection GUIDs against the GUIDs in the XML file. One of the following actions occur:"]}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"XML file GUID matches existing collection \u2013 Updates the existing collection to match the new XML settings and fields"}),"\n",(0,i.jsx)(o.li,{children:"XML file GUID does not match any existing collections \u2013 New collection is created according to the XML parameters. It is created with a Threat Prevention system generated GUID and Collection ID; the system discards the GUID and Collection ID from the source XML."}),"\n"]}),"\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.strong,{children:"NOTE:"})," If an existing collection and a new collection in the pending XML import file share the same collection name, an error is displayed and the existing collection remains unchanged."]}),"\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.em,{children:(0,i.jsx)(o.strong,{children:"RECOMMENDED:"})})," Provide a unique, descriptive name for any new collections."]}),"\n",(0,i.jsx)(o.p,{children:"The following parameter is required:"}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"FileName [String] \u2013 Path to file with valid XML content"}),"\n"]}),"\n",(0,i.jsx)(o.p,{children:"Example of adding an import XML file:"}),"\n",(0,i.jsx)(o.p,{children:"Import-SICollection \u2013FileName \u201cc:\\Import\\ExampleImport2.xml\u201d"}),"\n",(0,i.jsx)(o.p,{children:"The API returns as output the CollectionID, GUID, and Collection Name of the collection that has been updated or created. If a new collection was created, it is up to the user to capture the Collection ID and Collection GUID assigned by Threat Prevention in order to later access that collection."}),"\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.em,{children:"Remember,"})," the Collection ID and Collection GUID are not the same as those in the source XML file. Use the ",(0,i.jsx)(o.code,{children:"Get-SICollection"})," API call to find the newly created collection and its associated GUID and Collection ID by name."]})]})}function h(e={}){const{wrapper:o}={...(0,l.R)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);