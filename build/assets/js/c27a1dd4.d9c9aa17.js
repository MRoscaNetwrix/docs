"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[332331],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>d});var r=n(296540);const o={},i=r.createContext(o);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:t},e.children)}},98448:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/workflows/homonymentitylink/index","title":"Homonym Entity Link","description":"This entity is used to configure the homonym workflow.","source":"@site/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/workflows/homonymentitylink/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/workflows/homonymentitylink","slug":"/usercube/integration-guide/toolkit/xml-configuration/workflows/homonymentitylink/","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/workflows/homonymentitylink/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/workflows/homonymentitylink/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"WorkflowUpdateSeveralRecordsEntityForm","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/workflows/forms/workflowupdateseveralrecordsentityform/"},"next":{"title":"Workflow","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/workflows/workflow/"}}');var o=n(474848),i=n(28453);const s={},d="Homonym Entity Link",l={},a=[{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2},{value:"Child Element: Filter",id:"child-element-filter",level:2},{value:"Properties",id:"properties-1",level:3}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"homonym-entity-link",children:"Homonym Entity Link"})}),"\n",(0,o.jsx)(t.p,{children:"This entity is used to configure the homonym workflow."}),"\n",(0,o.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'\n<HomonymEntityLink FormEntityType="Referentiel_UserRecord" Identifier="Homonym_Referentiel_UserRecord"/>\n\n'})}),"\n",(0,o.jsxs)(t.p,{children:["In this example the homonym is linked to a control ",(0,o.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/user-interface/form/",children:"Form"})," and it will be applied for the ",(0,o.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/metadata/binding/",children:"\nBinding\n"})," included in the Control where the homonym is located. Read more about how to configure ",(0,o.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/workflows/workflowhomonym/",children:"\nWorkflow Homonym\n"}),"."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'\n<Form Identifier="Workflow_Referentiel_User_AdvancedStartInternal_Base" EntityType="Referentiel_UserRecord">    <Control DisplayName_L1="Personal Data" OutputType="LayoutFieldset" HomonymEntityLink="Homonym_Referentiel_UserRecord">        <Control DisplayName_L1="Full Name" OutputType="LayoutRowset">            <Control Binding="LastName" IsRequired="true" />            <Control Binding="FirstName" IsRequired="true" />        </Control>    </Control></Form>\n\n'})}),"\n",(0,o.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Property"}),(0,o.jsx)(t.th,{children:"Details"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"FormEntityType   required"}),(0,o.jsxs)(t.td,{children:[(0,o.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,o.jsx)(t.strong,{children:"Description"}),"   In a ",(0,o.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/user-interface/form/",children:"Form"}),", an ",(0,o.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/metadata/entitytype/",children:" Entity Type "})," is defined and the ",(0,o.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/metadata/binding/",children:" Binding "})," of this Form will be loaded from this EntityType. The FormEntityType property represents this EntityType."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Identifier   required"}),(0,o.jsxs)(t.td,{children:[(0,o.jsx)(t.strong,{children:"Type"}),"    String   ",(0,o.jsx)(t.strong,{children:"Description"}),"   Unique identifier of the HomonymEntityLink."]})]})]})]}),"\n",(0,o.jsx)(t.h2,{id:"child-element-filter",children:"Child Element: Filter"}),"\n",(0,o.jsx)(t.p,{children:"Defines combination of property comparison to use to find homonyms."}),"\n",(0,o.jsx)(t.h3,{id:"properties-1",children:"Properties"}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Property"}),(0,o.jsx)(t.th,{children:"Details"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"ComparisonProperty1   optional"}),(0,o.jsxs)(t.td,{children:[(0,o.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,o.jsx)(t.strong,{children:"Description"}),"   Defines the property used to compare with the form control ",(0,o.jsx)(t.code,{children:"Property"}),". It should not be defined if it the same as the property in the attribute ",(0,o.jsx)(t.code,{children:"Property"}),". Going from 1 to 5."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Expression1   optional"}),(0,o.jsxs)(t.td,{children:[(0,o.jsx)(t.strong,{children:"Type"}),"    String   ",(0,o.jsx)(t.strong,{children:"Description"}),"   Defines the C# expression to apply on the homonymy form controls. The result of the expression evaluation will be compared with the corresponding ",(0,o.jsx)(t.code,{children:"ComparisonProperty"})," using the defined ",(0,o.jsx)(t.code,{children:"Operator"}),".   If the ",(0,o.jsx)(t.code,{children:"ComparisonProperty"})," is a computed property, no need to define the expression if it is the same as the one for the computed property. It will be automatically used when finding homonyms.   Going from 1 to 5. See the ",(0,o.jsx)(t.a,{href:"/docs/usercube_saas/usercube/integration-guide/toolkit/expressions/csharp-utility-functions/",children:" C# utility functions "})," topic for additional information."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Operator1   default value: 2"}),(0,o.jsxs)(t.td,{children:[(0,o.jsx)(t.strong,{children:"Type"}),"    QueryComparisonOperator   ",(0,o.jsx)(t.strong,{children:"Description"}),"   Defines the operator to use to compare between the ",(0,o.jsx)(t.code,{children:"ComparisonProperty"})," and the ",(0,o.jsx)(t.code,{children:"Property"})," or the ",(0,o.jsx)(t.code,{children:"Expression"})," evaluation result. By default the ",(0,o.jsx)(t.code,{children:"Equal"})," operator is used. Going from 1 to 5.   All possible values:   ",(0,o.jsx)(t.code,{children:"0"})," - Auto: The ",(0,o.jsx)(t.code,{children:"Operator"})," is calculated by the engine according to the type of element.   ",(0,o.jsx)(t.code,{children:"1"})," - NotEqual: finds the elements that are not equal to the desired value.   ",(0,o.jsx)(t.code,{children:"2"})," - Equal: finds the elements that are strictly equal to the desired value.   ",(0,o.jsx)(t.code,{children:"3"})," - Contain: finds the elements that contain the desired value.   ",(0,o.jsx)(t.code,{children:"4"})," - StartWith: finds the elements that start with the desired value.   ",(0,o.jsx)(t.code,{children:"5"})," - EndWith: finds the elements that end with the desired value.   ",(0,o.jsx)(t.code,{children:"6"})," - NotContain: finds the elements that do not contain the desired value.   ",(0,o.jsx)(t.code,{children:"7"})," - NotStartWith: finds the elements that do not start with the desired value.   ",(0,o.jsx)(t.code,{children:"8"})," - NotEndWith: finds the elements that do not end with the desired value.   ",(0,o.jsx)(t.code,{children:"9"})," - GreaterThan: finds the elements that are greater than the desired value.   ",(0,o.jsx)(t.code,{children:"10"})," - LessThan: finds the elements that are less than the desired value.   ",(0,o.jsx)(t.code,{children:"11"})," - GreaterThanOrEqual: finds the elements that are greater than or equal to the desired value.   ",(0,o.jsx)(t.code,{children:"12"})," - LessThanOrEqual: finds the elements that are less than or equal to the desired value.   ",(0,o.jsx)(t.code,{children:"*"}),"- Flexible: The ",(0,o.jsx)(t.code,{children:"Flexible"})," operators transform the desired value according to the ",(0,o.jsx)(t.code,{children:"FlexibleComparisonExpression"})," defined in the ",(0,o.jsx)(t.code,{children:"EntityProperty"})," then search. The flexible operators are:   ",(0,o.jsx)(t.code,{children:"13"})," - FlexibleEqual   ",(0,o.jsx)(t.code,{children:"14"})," - FlexibleContain   ",(0,o.jsx)(t.code,{children:"15"})," - FlexibleStartWith   ",(0,o.jsx)(t.code,{children:"16"})," - FlexibleEndWith"]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Property1   optional"}),(0,o.jsxs)(t.td,{children:[(0,o.jsx)(t.strong,{children:"Type"}),"    Int64   ",(0,o.jsx)(t.strong,{children:"Description"}),"   Defines the form control property to use to compare with ",(0,o.jsx)(t.code,{children:"ComparisonOperator"})," using the defined ",(0,o.jsx)(t.code,{children:"Operator"}),". Going from 1 to 5."]})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);