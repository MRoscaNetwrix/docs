"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[417550],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(296540);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}},968158:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"usercube/integration-guide/toolkit/xml-configuration/metadata/settings/schedulingcleandatabasesetting/index","title":"Scheduling Clean Database Setting","description":"If the default value for the Task CleanDataBase needs to be overridden.","source":"@site/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/metadata/settings/schedulingcleandatabasesetting/index.md","sourceDirName":"usercube/integration-guide/toolkit/xml-configuration/metadata/settings/schedulingcleandatabasesetting","slug":"/usercube/integration-guide/toolkit/xml-configuration/metadata/settings/schedulingcleandatabasesetting/","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/metadata/settings/schedulingcleandatabasesetting/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/metadata/settings/schedulingcleandatabasesetting/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"Password Tests Setting","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/metadata/settings/passwordtestssetting/"},"next":{"title":"Select All Performed by Association Query Handler Setting","permalink":"/docs/usercube_saas/usercube/integration-guide/toolkit/xml-configuration/metadata/settings/selectallperformedbyassociationqueryhandlersetting/"}}');var a=n(474848),i=n(28453);const r={},o="Scheduling Clean Database Setting",d={},c=[{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"scheduling-clean-database-setting",children:"Scheduling Clean Database Setting"})}),"\n",(0,a.jsx)(t.p,{children:"If the default value for the Task CleanDataBase needs to be overridden."}),"\n",(0,a.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'\n    <SchedulingCleanDataBaseSetting Timeout="2" CronTabExpression="* */2 * * *"/>\n\n'})}),"\n",(0,a.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Property"}),(0,a.jsx)(t.th,{children:"Details"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"CronTabExpression   optional"}),(0,a.jsxs)(t.td,{children:[(0,a.jsx)(t.strong,{children:"Type"}),"    String   ",(0,a.jsx)(t.strong,{children:"Description"}),"   Define the cron to launch the CleanDatabase Job."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Identifier   default value: SchedulingCleanDataBase"}),(0,a.jsxs)(t.td,{children:[(0,a.jsx)(t.strong,{children:"Type"}),"    String   ",(0,a.jsx)(t.strong,{children:"Description"}),"   Unique identifier of the setting."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Timeout   optional"}),(0,a.jsxs)(t.td,{children:[(0,a.jsx)(t.strong,{children:"Type"}),"    String   ",(0,a.jsx)(t.strong,{children:"Description"}),"   Defines the maximum time a Job or Task can wait after the last run."]})]})]})]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);