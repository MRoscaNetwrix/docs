"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[87123],{28453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>c});var n=t(296540);const a={},i=n.createContext(a);function r(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(i.Provider,{value:s},e.children)}},882179:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"usercube/integration-guide/executables/references/fillbankingdatabase/index","title":"Usercube-FillBankingDatabase","description":"Example","source":"@site/docs/usercube_saas/usercube/integration-guide/executables/references/fillbankingdatabase/index.md","sourceDirName":"usercube/integration-guide/executables/references/fillbankingdatabase","slug":"/usercube/integration-guide/executables/references/fillbankingdatabase/","permalink":"/docs/usercube_saas/usercube/integration-guide/executables/references/fillbankingdatabase/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usercube_saas/usercube/integration-guide/executables/references/fillbankingdatabase/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userCubeSaasSidebar","previous":{"title":"Usercube-Export-Scim","permalink":"/docs/usercube_saas/usercube/integration-guide/executables/references/export-scim/"},"next":{"title":"Usercube-Fulfill-EasyVista","permalink":"/docs/usercube_saas/usercube/integration-guide/executables/references/fulfill-easyvista/"}}');var a=t(474848),i=t(28453);const r={},c="Usercube-FillBankingDatabase",o={},d=[{value:"Example",id:"example",level:2},{value:"Import the banking sources to the BankingSystem database.",id:"import-the-banking-sources-to-the-bankingsystem-database",level:3},{value:"Arguments",id:"arguments",level:2}];function l(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"usercube-fillbankingdatabase",children:"Usercube-FillBankingDatabase"})}),"\n",(0,a.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(s.h3,{id:"import-the-banking-sources-to-the-bankingsystem-database",children:"Import the banking sources to the BankingSystem database."}),"\n",(0,a.jsxs)(s.p,{children:["The Banking demo application uses a database named ",(0,a.jsx)(s.code,{children:"BankingSystem"}),". Once the database is created, the tables should be created and the sources should be imported, otherwise the Banking demo application will be empty."]}),"\n",(0,a.jsxs)(s.p,{children:["Consider that the database's connection string is ",(0,a.jsx)(s.code,{children:'"data source=.;Database=BankingSystem;"'}),", the sources are located in the ",(0,a.jsx)(s.code,{children:"C:/SDK/DemoApps/Sources"})," folder, and the ",(0,a.jsx)(s.code,{children:"BankingSystemTables"})," script is located in ",(0,a.jsx)(s.code,{children:"C:/SDK/DemoApps/Banking"}),". We initialize the database to create its tables, and import the sources."]}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.code,{children:'--connection-string "data source=.;Database=BankingSystem;" --sources-path C:/SDK/DemoApps/Sources --banking-sql-path C:/SDK/DemoApps/Banking'})}),"\n",(0,a.jsx)(s.h2,{id:"arguments",children:"Arguments"}),"\n",(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{children:"Argument Name"}),(0,a.jsx)(s.th,{children:"Details"})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"--banking-sql-path   required"}),(0,a.jsxs)(s.td,{children:[(0,a.jsx)(s.strong,{children:"Type"}),"    String   ",(0,a.jsx)(s.strong,{children:"Description"})," Specifies the path to the folder containing the ",(0,a.jsx)(s.code,{children:"BankingSystemTables.sql"})," file.   ",(0,a.jsx)(s.strong,{children:"Example"}),"   Set path to ",(0,a.jsx)(s.code,{children:"C:/SDK/DemoApps/Banking"}),":   ",(0,a.jsx)(s.code,{children:'--connection-string "data source=.;Database=BankingSystem;"'}),"."]})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"--connection-string   required"}),(0,a.jsxs)(s.td,{children:[(0,a.jsx)(s.strong,{children:"Type"}),"    String   ",(0,a.jsx)(s.strong,{children:"Description"})," Specifies the connection string of the ",(0,a.jsx)(s.code,{children:"BankingSystem"})," database.   ",(0,a.jsx)(s.strong,{children:"Example"}),"   Set the connection string's data source to the local machine:   ",(0,a.jsx)(s.code,{children:'--connection-string "data source=.;Database=BankingSystem;"'}),"."]})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"--sources-path   required"}),(0,a.jsxs)(s.td,{children:[(0,a.jsx)(s.strong,{children:"Type"}),"    String   ",(0,a.jsx)(s.strong,{children:"Description"})," Specifies the path to the banking sources folder.   ",(0,a.jsx)(s.strong,{children:"Example"}),"   Set path to ",(0,a.jsx)(s.code,{children:"C:/SDK/DemoApps/Sources"}),":   ",(0,a.jsx)(s.code,{children:"--sources-path C:/SDK/DemoApps/Sources"}),"."]})]})]})]})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);