name: Claude Auto Review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  auto-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Automatic PR Review
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: "60"
          max_turns: 150
          model: "claude-opus-4-20250514"
          direct_prompt: |
            Please review this pull request and provide comprehensive feedback on both code and documentation quality.
            
            Focus on:
            
            **Code & Configuration:**
            - Docusaurus configuration files (docusaurus.config.js, sidebars.js)
            - Custom React components and pages in /src
            - Plugin configurations and customizations
            - Build performance and optimization
            - Proper use of Docusaurus features (versioning, i18n, search)
            
            **Technical Writing & Content:**
            - Clarity and accuracy of technical explanations
            - Consistent terminology and voice
            - Logical information architecture and content flow
            - Appropriate use of headings and document structure
            - Clear and actionable examples/code snippets
            
            **Markdown & Docusaurus-specific Features:**
            - Proper use of Docusaurus MDX features (admonitions, tabs, code blocks)
            - Correct frontmatter metadata (title, description, keywords, slug)
            - Working internal links and references
            - Appropriate use of custom components in MDX
            - Image optimization and proper alt text
            
            **Documentation Standards:**
            - Adherence to style guide and writing conventions
            - Proper API documentation format (if applicable)
            - Comprehensive but concise explanations
            - No ambiguous instructions or unclear references
            - Appropriate technical level for target audience
            
            Provide specific, actionable feedback with suggestions for improvement.
            Use inline comments to highlight particular issues in the code or content.
          allowed_tools: "mcp__github__create_pending_pull_request_review,mcp__github__add_pull_request_review_comment_to_pending_review,mcp__github__submit_pending_pull_request_review,mcp__github__get_pull_request_diff"
